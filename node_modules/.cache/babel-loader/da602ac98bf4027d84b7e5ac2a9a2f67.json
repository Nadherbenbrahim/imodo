{"ast":null,"code":"var _jsxFileName = \"/usr/work/smart_front_oussema/src/components/AddSynonym.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nfunction AddSynonym(props) {\n  const [synonym, setSynonym] = useState('');\n  const [existSynonym, setExistSynonym] = useState(false);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"addSynForm\",\n    onSubmit: e => {\n      e.preventDefault();\n      const synonymExist = props.entity.children.find(Element => Element.synonyms.find(el => el.toUpperCase() == synonym.toUpperCase()));\n\n      if (synonymExist) {\n        setExistSynonym(true);\n        return;\n      }\n\n      setExistSynonym(false);\n      let obj = {\n        entity: {\n          content: props.content,\n          synonyms: synonym\n        },\n        idEntity: props.entityId,\n        idChildren: props.childrenId\n      };\n      props.handelSubmitSynonym(e, obj);\n      e.currentTarget.reset();\n    },\n    style: {\n      display: \"inline-block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"19.176\",\n    height: \"19.176\",\n    viewBox: \"0 0 19.176 19.176\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\",\n    stroke: \"#818e94\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"1.5\",\n    \"data-name\": \"Icon feather-plus-circle\",\n    transform: \"translate(-2.25 -2.25)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.676 11.838A8.838 8.838 0 1111.838 3a8.838 8.838 0 018.838 8.838z\",\n    \"data-name\": \"Trac\\xE9 210\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.838 8.303v7.07\",\n    \"data-name\": \"Trac\\xE9 211\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.303 11.838h7.07\",\n    \"data-name\": \"Trac\\xE9 212\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      width: 120,\n      borderColor: existSynonym ? \"red\" : \"rgb(129, 142, 148)\"\n    },\n    className: \"addSyn\",\n    type: \"text\",\n    onChange: e => setSynonym(e.target.value),\n    placeholder: \"Add Synonym\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), existSynonym && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      position: \"absolute\",\n      left: \"50%\",\n      bottom: -20,\n      transform: \"translateX(-50%)\",\n      color: \"red\",\n      fontSize: 13,\n      whiteSpace: \"nowrap\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 30\n    }\n  }, \"Synonyms Exist\"));\n}\n\nexport default withRouter(connect((state, props) => {\n  const entity = state.entitys.find(el => el._id == props.match.params.id);\n  console.log('test ', entity);\n  return {\n    entity\n  };\n})(AddSynonym));","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/components/AddSynonym.js"],"names":["React","useState","connect","withRouter","AddSynonym","props","synonym","setSynonym","existSynonym","setExistSynonym","e","preventDefault","synonymExist","entity","children","find","Element","synonyms","el","toUpperCase","obj","content","idEntity","entityId","idChildren","childrenId","handelSubmitSynonym","currentTarget","reset","display","width","borderColor","target","value","position","left","bottom","transform","color","fontSize","whiteSpace","state","entitys","_id","match","params","id","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction AddSynonym(props) {\r\n    const [synonym, setSynonym] = useState('')\r\n    const [existSynonym, setExistSynonym] = useState(false)\r\n    return (\r\n        <form className=\"addSynForm\" onSubmit={(e) => {\r\n            e.preventDefault();\r\n            const synonymExist = props.entity.children.find(Element => Element.synonyms.find(el => el.toUpperCase() == synonym.toUpperCase()))\r\n            if (synonymExist) {\r\n                setExistSynonym(true)\r\n                return;\r\n            }\r\n            setExistSynonym(false)\r\n            let obj = {\r\n                entity: {\r\n                    content: props.content,\r\n                    synonyms: synonym\r\n                },\r\n                idEntity: props.entityId,\r\n                idChildren: props.childrenId\r\n            }\r\n\r\n            props.handelSubmitSynonym(e, obj)\r\n            e.currentTarget.reset()\r\n\r\n        }} style={{ display: \"inline-block\" }}>\r\n            <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"19.176\"\r\n                height=\"19.176\"\r\n                viewBox=\"0 0 19.176 19.176\"\r\n            >\r\n                <g\r\n                    fill=\"none\"\r\n                    stroke=\"#818e94\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"1.5\"\r\n                    data-name=\"Icon feather-plus-circle\"\r\n                    transform=\"translate(-2.25 -2.25)\"\r\n                >\r\n                    <path\r\n                        d=\"M20.676 11.838A8.838 8.838 0 1111.838 3a8.838 8.838 0 018.838 8.838z\"\r\n                        data-name=\"Tracé 210\"\r\n                    ></path>\r\n                    <path d=\"M11.838 8.303v7.07\" data-name=\"Tracé 211\"></path>\r\n                    <path d=\"M8.303 11.838h7.07\" data-name=\"Tracé 212\"></path>\r\n                </g>\r\n            </svg>\r\n            <input style={{ width: 120, borderColor: existSynonym ? \"red\" : \"rgb(129, 142, 148)\" }} className=\"addSyn\" type=\"text\" onChange={(e) => setSynonym(e.target.value)} placeholder=\"Add Synonym\" required />\r\n            {existSynonym && <span style={{ position: \"absolute\", left: \"50%\", bottom: -20, transform: \"translateX(-50%)\", color: \"red\", fontSize: 13, whiteSpace: \"nowrap\" }}>Synonyms Exist</span>}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default withRouter(connect((state, props) => {\r\n    const entity = state.entitys.find(el => el._id == props.match.params.id)\r\n    console.log('test ', entity)\r\n    return {\r\n        entity\r\n    }\r\n})(AddSynonym))\r\n"]},"metadata":{},"sourceType":"module"}