{"ast":null,"code":"import axios from 'axios';\nimport { host, trainAgentHost } from '../../config';\nexport const getLogs = idPostOrPage => {\n  return dispatch => {\n    // console.log(\"Get from here\", project);\n    return axios.get(host + ` /api/v1/secure/logEvent/post/${idPostOrPage}/all`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('getLogs post APi Response =>', res.data.data); // dispatch({\n      //     type: 'GET_LOGS_BY_PAGE',\n      //     payload: res.data.data,\n      // });\n    }).catch(err => console.log(\"getLogs post Api error  =>\", err));\n  };\n};\nexport const deleteProjectByPage = projet => {\n  return dispatch => {\n    let objectToSend = {\n      project: projet\n    };\n    return axios.put(host + `/api/v1/secure/project/remove/project`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('deleteProjectByPage post APi Response =>', res.data.data);\n      dispatch({\n        type: 'GET_PROJECT_BY_PAGE',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"deleteProjectByPage post Api error  =>\", err));\n  };\n};\nexport const goToWizardConfig = (projet, Page, history) => {\n  return dispatch => {\n    // Detect intent Type \n    let intentDetection = projet.post.idPost === projet.post.page.idPage;\n    dispatch({\n      type: 'FROM_MY_AGENTS_TO_STEP_3_WIZARD',\n      payload: 2,\n      payload1: projet._id,\n      payload2: intentDetection ? \"generic\" : \"default\"\n    });\n    dispatch({\n      type: 'SELECT_WIZARD_PAGE',\n      payload: Page\n    });\n    history.push('/home/auto-wizard');\n  };\n};\nexport const setAgentsSelectedProject = (project, history) => {\n  return dispatch => {\n    dispatch({\n      type: 'SET_AGENTS_PROJECT',\n      payload: project\n    });\n    history.push('/home/my-agents-messages');\n  };\n};\nexport const getProjectByPage = Page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/pages/get/project/${Page.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('getProjectByPage post APi Response =>', res.data.data);\n      dispatch({\n        type: 'GET_PROJECT_BY_PAGE',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"getProjectByPage post Api error  =>\", err));\n  };\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/myAgentsActions.js"],"names":["axios","host","trainAgentHost","getLogs","idPostOrPage","dispatch","get","headers","localStorage","getItem","then","res","console","log","data","catch","err","deleteProjectByPage","projet","objectToSend","project","put","type","payload","goToWizardConfig","Page","history","intentDetection","post","idPost","page","idPage","payload1","_id","payload2","push","setAgentsSelectedProject","getProjectByPage","id"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { host,trainAgentHost } from '../../config';\r\n\r\nexport const getLogs = (idPostOrPage) => {\r\n    return (dispatch) => {\r\n        // console.log(\"Get from here\", project);\r\n\r\n        return axios.get(host + ` /api/v1/secure/logEvent/post/${idPostOrPage}/all`,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('getLogs post APi Response =>', res.data.data);\r\n\r\n            // dispatch({\r\n            //     type: 'GET_LOGS_BY_PAGE',\r\n            //     payload: res.data.data,\r\n            // });\r\n        })\r\n        .catch((err) => console.log(\"getLogs post Api error  =>\", err))\r\n    }\r\n};\r\n\r\nexport const deleteProjectByPage = (projet) => {\r\n    return (dispatch) => {\r\n\r\n        let objectToSend = {\r\n            project: projet,\r\n        };\r\n\r\n        return axios.put(host + `/api/v1/secure/project/remove/project`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('deleteProjectByPage post APi Response =>', res.data.data);\r\n\r\n            dispatch({\r\n                type: 'GET_PROJECT_BY_PAGE',\r\n                payload: res.data.data,\r\n            });\r\n        })\r\n        .catch((err) => console.log(\"deleteProjectByPage post Api error  =>\", err) )\r\n    }\r\n};\r\n\r\nexport const goToWizardConfig = (projet,Page,history) => {\r\n    return (dispatch) => {\r\n        // Detect intent Type \r\n        let intentDetection = projet.post.idPost === projet.post.page.idPage;\r\n\r\n        dispatch({\r\n            type: 'FROM_MY_AGENTS_TO_STEP_3_WIZARD',\r\n            payload: 2,\r\n            payload1: projet._id,\r\n            payload2: intentDetection ? \"generic\" : \"default\",\r\n        });\r\n\r\n        dispatch({\r\n            type: 'SELECT_WIZARD_PAGE', \r\n            payload: Page,\r\n        });\r\n        history.push('/home/auto-wizard'); \r\n    }\r\n};\r\n\r\n\r\n\r\nexport const setAgentsSelectedProject = (project,history) => {\r\n    return (dispatch) => {\r\n \r\n        dispatch({\r\n            type: 'SET_AGENTS_PROJECT',\r\n            payload: project,\r\n        });\r\n       \r\n        history.push('/home/my-agents-messages');\r\n    }\r\n};\r\n\r\nexport const getProjectByPage = (Page) => {\r\n    return (dispatch) => {\r\n \r\n        return axios.get(host + `/api/v1/secure/pages/get/project/${Page.id}`,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('getProjectByPage post APi Response =>', res.data.data);\r\n\r\n            dispatch({\r\n                type: 'GET_PROJECT_BY_PAGE',\r\n                payload: res.data.data,\r\n            });\r\n        })\r\n        .catch((err) => console.log(\"getProjectByPage post Api error  =>\", err) )\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}