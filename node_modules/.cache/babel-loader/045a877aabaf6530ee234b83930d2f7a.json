{"ast":null,"code":"var _jsxFileName = \"/usr/work/smart_front_oussema/src/app/Home/Pages/Pages.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../Home.css';\nimport { Row, Col, Image } from 'react-bootstrap';\nimport OwlCarousel from 'react-owl-carousel';\nimport Slider from \"react-slick\";\nimport Lottie from 'react-lottie';\nimport { connect } from 'react-redux';\nimport { selectSocialMediaPage, getFbData, getInstaData } from '../../../redux/actions/socialMediaActions';\nimport PageCard from './PageCard';\nimport animationData from '../../../assets/json/loading.json';\n\nconst ImageTest = require('../../../assets/images/Ant-Man.png');\n\nconst LogoTest = require('../../../assets/images/AntMan-logo.png');\n\nfunction Pages(props) {\n  const [loadingPages, setLoadingPages] = useState(true);\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  };\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n    initialSlide: 0,\n    responsive: [{\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3,\n        infinite: true,\n        dots: true\n      }\n    }, {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 2,\n        initialSlide: 2\n      }\n    }, {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }]\n  };\n  useEffect(() => {\n    props.getFbData();\n    props.getInstaData();\n    setTimeout(() => {\n      setLoadingPages(false);\n    }, 2000);\n  }, []);\n  useEffect(() => {\n    if (props.fbData) {\n      console.log(\"Pages fb data =>\", props.fbData);\n    }\n  }, [props.fbData]);\n  useEffect(() => {\n    if (props.instaData) {\n      console.log(\"Pages insta Data =>\", props.instaData);\n    }\n  }, [props.instaData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, props.title ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"home-big-title\",\n    style: props.titleStyling ? props.titleStyling : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, props.title) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"home-big-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Pages Connected\")), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, !loadingPages ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '400px',\n      backgroundColor: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }), props.fbData !== null && Object.entries(props.fbData).map(([key, tab]) => tab.map((page, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    onClick: () => props.selectSocialMediaPage(page, \"fb\", key),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(PageCard, {\n    platform: \"fb\",\n    isConnectedPage: page.isConnected,\n    namePage: page.name,\n    idPage: page.idPage,\n    picture: null,\n    accessToken: page.access_token,\n    status: key,\n    team: page.user,\n    admins: page.admins,\n    setLoadingPages: setLoadingPages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 37\n    }\n  })))), props.fbData !== null && Object.entries(props.fbData).map(([key, tab]) => tab.map((page, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    onClick: () => props.selectSocialMediaPage(page, \"fb\", key),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(PageCard, {\n    platform: \"fb\",\n    isConnectedPage: page.isConnected,\n    namePage: page.name,\n    idPage: page.idPage,\n    picture: null,\n    accessToken: page.access_token,\n    status: key,\n    team: page.user,\n    admins: page.admins,\n    setLoadingPages: setLoadingPages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 37\n    }\n  })))), props.fbData !== null && Object.entries(props.fbData).map(([key, tab]) => tab.map((page, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    onClick: () => props.selectSocialMediaPage(page, \"fb\", key),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(PageCard, {\n    platform: \"fb\",\n    isConnectedPage: page.isConnected,\n    namePage: page.name,\n    idPage: page.idPage,\n    picture: null,\n    accessToken: page.access_token,\n    status: key,\n    team: page.user,\n    admins: page.admins,\n    setLoadingPages: setLoadingPages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 37\n    }\n  })))), props.instaData !== null && Object.entries(props.instaData).map(([key, tab]) => tab.map((page, index) => {\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      key: index,\n      onClick: () => props.selectSocialMediaPage(page, \"insta\", key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(PageCard, {\n      platform: \"insta\",\n      isConnectedPage: page.isConnected,\n      namePage: page.name,\n      idPage: page.idPage,\n      picture: page.imageUrl,\n      accessToken: page.access_token,\n      status: key,\n      team: page.user,\n      admins: page.admins,\n      setLoadingPages: setLoadingPages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 37\n      }\n    }));\n  })))), /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, props.fbData !== null && Object.entries(props.fbData).map(([key, tab]) => tab.map((page, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    onClick: () => props.selectSocialMediaPage(page, \"fb\", key),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(PageCard, {\n    platform: \"fb\",\n    isConnectedPage: page.isConnected,\n    namePage: page.name,\n    idPage: page.idPage,\n    picture: null,\n    accessToken: page.access_token,\n    status: key,\n    team: page.user,\n    admins: page.admins,\n    setLoadingPages: setLoadingPages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 37\n    }\n  })))), props.instaData !== null && Object.entries(props.instaData).map(([key, tab]) => tab.map((page, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    onClick: () => props.selectSocialMediaPage(page, \"insta\", key),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(PageCard, {\n    platform: \"insta\",\n    isConnectedPage: page.isConnected,\n    namePage: page.name,\n    idPage: page.idPage,\n    picture: page.imageUrl,\n    accessToken: page.access_token,\n    status: key,\n    team: page.user,\n    admins: page.admins,\n    setLoadingPages: setLoadingPages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 37\n    }\n  })))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Lottie, {\n    options: defaultOptions,\n    width: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  })))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    fbData: state.socialMediaR.fbData,\n    instaData: state.socialMediaR.instaData,\n    socialMediaPageSelected: state.socialMediaR.socialMediaPageSelected\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectSocialMediaPage,\n  getFbData,\n  getInstaData\n})(Pages);","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/app/Home/Pages/Pages.js"],"names":["React","useEffect","useState","Row","Col","Image","OwlCarousel","Slider","Lottie","connect","selectSocialMediaPage","getFbData","getInstaData","PageCard","animationData","ImageTest","require","LogoTest","Pages","props","loadingPages","setLoadingPages","defaultOptions","loop","autoplay","rendererSettings","preserveAspectRatio","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","setTimeout","fbData","console","log","instaData","title","titleStyling","width","height","backgroundColor","Object","entries","map","key","tab","page","index","isConnected","name","idPage","access_token","user","admins","imageUrl","mapStateToProps","state","socialMediaR","socialMediaPageSelected"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport '../Home.css';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Image,\r\n} from 'react-bootstrap';\r\nimport OwlCarousel from 'react-owl-carousel';\r\nimport Slider from \"react-slick\";\r\nimport Lottie from 'react-lottie';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { selectSocialMediaPage, getFbData, getInstaData } from '../../../redux/actions/socialMediaActions';\r\n\r\nimport PageCard from './PageCard';\r\n\r\nimport animationData from '../../../assets/json/loading.json';\r\nconst ImageTest = require('../../../assets/images/Ant-Man.png');\r\nconst LogoTest = require('../../../assets/images/AntMan-logo.png');\r\n\r\n\r\nfunction Pages(props) {\r\n\r\n    const [loadingPages, setLoadingPages] = useState(true);\r\n\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true, \r\n        animationData: animationData,\r\n        rendererSettings: {\r\n          preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n    };\r\n\r\n    const settings = {\r\n        dots: true,\r\n        infinite: false,\r\n        speed: 500,\r\n        slidesToShow: 4,\r\n        slidesToScroll: 1,\r\n        initialSlide: 0,\r\n        responsive: [\r\n          {\r\n            breakpoint: 1024,\r\n            settings: {\r\n              slidesToShow: 3,\r\n              slidesToScroll: 3,\r\n              infinite: true,\r\n              dots: true\r\n            }\r\n          },\r\n          {\r\n            breakpoint: 600,\r\n            settings: {\r\n              slidesToShow: 2,\r\n              slidesToScroll: 2,\r\n              initialSlide: 2\r\n            }\r\n          },\r\n          {\r\n            breakpoint: 480,\r\n            settings: {\r\n              slidesToShow: 1,\r\n              slidesToScroll: 1\r\n            }\r\n          }\r\n        ]\r\n    };\r\n\r\n    useEffect(() => {\r\n        props.getFbData();\r\n        props.getInstaData();\r\n        setTimeout(() => {\r\n            setLoadingPages(false);\r\n        },2000);\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        if(props.fbData) {\r\n            console.log(\"Pages fb data =>\", props.fbData);\r\n        }\r\n    },[props.fbData]);\r\n    \r\n    useEffect(() => {\r\n        if(props.instaData) {\r\n            console.log(\"Pages insta Data =>\", props.instaData);\r\n        }\r\n    },[props.instaData]);\r\n\r\n    return (\r\n    <>\r\n        <Row>\r\n            {\r\n            props.title \r\n            ?\r\n                <p className=\"home-big-title\" style={props.titleStyling ? props.titleStyling : {} }>{props.title}</p>\r\n            :\r\n                <p className=\"home-big-title\">Pages Connected</p>\r\n            }\r\n        </Row>\r\n\r\n        <Row>\r\n\r\n            {\r\n            !loadingPages\r\n            ?\r\n                (\r\n                    <>\r\n\r\n                    <div style={{ width: '100%', height: '400px', backgroundColor: 'black' }}>\r\n                        <Slider {...settings}>\r\n                            {props.fbData !== null && \r\n                            Object.entries(props.fbData).map( ([key, tab]) => \r\n                                tab.map((page,index) => \r\n                                <div key={index} onClick={() => props.selectSocialMediaPage(page,\"fb\",key)}>\r\n                                    <PageCard platform={\"fb\"} isConnectedPage={page.isConnected} namePage={page.name} idPage={page.idPage} picture={null} accessToken={page.access_token} status={key}  team={page.user} admins={page.admins} setLoadingPages={setLoadingPages} />\r\n                                </div>\r\n                            ))}\r\n                            {props.fbData !== null && \r\n                            Object.entries(props.fbData).map( ([key, tab]) => \r\n                                tab.map((page,index) => \r\n                                <div key={index} onClick={() => props.selectSocialMediaPage(page,\"fb\",key)}>\r\n                                    <PageCard platform={\"fb\"} isConnectedPage={page.isConnected} namePage={page.name} idPage={page.idPage} picture={null} accessToken={page.access_token} status={key}  team={page.user} admins={page.admins} setLoadingPages={setLoadingPages} />\r\n                                </div>\r\n                            ))}\r\n                            {props.fbData !== null && \r\n                            Object.entries(props.fbData).map( ([key, tab]) => \r\n                                tab.map((page,index) => \r\n                                <div key={index} onClick={() => props.selectSocialMediaPage(page,\"fb\",key)}>\r\n                                    <PageCard platform={\"fb\"} isConnectedPage={page.isConnected} namePage={page.name} idPage={page.idPage} picture={null} accessToken={page.access_token} status={key}  team={page.user} admins={page.admins} setLoadingPages={setLoadingPages} />\r\n                                </div>\r\n                            ))}\r\n\r\n                            {props.instaData !== null && \r\n                            Object.entries(props.instaData).map( ([key, tab]) => \r\n                                tab.map((page,index) => {\r\n                                <div key={index} onClick={() => props.selectSocialMediaPage(page,\"insta\",key)}>\r\n                                    <PageCard platform={\"insta\"} isConnectedPage={page.isConnected} namePage={page.name} idPage={page.idPage} picture={page.imageUrl} accessToken={page.access_token} status={key} team={page.user} admins={page.admins} setLoadingPages={setLoadingPages}  />\r\n                                </div>\r\n                                }\r\n                            ))}\r\n                        </Slider>\r\n                    </div>\r\n\r\n                    <Row className=\"mt-5\">\r\n                        {props.fbData !== null && \r\n                            Object.entries(props.fbData).map( ([key, tab]) => \r\n                                tab.map((page,index) => \r\n                                <div key={index} onClick={() => props.selectSocialMediaPage(page,\"fb\",key)}>\r\n                                    <PageCard platform={\"fb\"} isConnectedPage={page.isConnected} namePage={page.name} idPage={page.idPage} picture={null} accessToken={page.access_token} status={key}  team={page.user} admins={page.admins} setLoadingPages={setLoadingPages} />\r\n                                </div>\r\n                        ))}\r\n\r\n                        {props.instaData !== null && \r\n                            Object.entries(props.instaData).map( ([key, tab]) => \r\n                                tab.map((page,index) => \r\n                                <div key={index} onClick={() => props.selectSocialMediaPage(page,\"insta\",key)}>\r\n                                    <PageCard platform={\"insta\"} isConnectedPage={page.isConnected} namePage={page.name} idPage={page.idPage} picture={page.imageUrl} accessToken={page.access_token} status={key} team={page.user} admins={page.admins} setLoadingPages={setLoadingPages}  />\r\n                                </div>\r\n                        ))}\r\n                    </Row>\r\n\r\n                    {/* <OwlCarousel margin={10} items={4}> */}\r\n                        {/* Render Fb Data */}\r\n                        {/* {props.fbData !== null && \r\n                            Object.entries(props.fbData).map( ([key, tab]) => \r\n                                tab.map((page,index) => \r\n                                <div key={index} onClick={() => props.selectSocialMediaPage(page,\"fb\",key)}>\r\n                                    <PageCard platform={\"fb\"} isConnectedPage={page.isConnected} namePage={page.name} idPage={page.idPage} picture={null} accessToken={page.access_token} status={key}  team={page.user} admins={page.admins} setLoadingPages={setLoadingPages} />\r\n                                </div>\r\n                        ))} */}\r\n                       \r\n                        {/* Render Insta data */}\r\n                        {/* {props.instaData !== null && \r\n                            Object.entries(props.instaData).map( ([key, tab]) => \r\n                                tab.map((page,index) => \r\n                                <div key={index} onClick={() => props.selectSocialMediaPage(page,\"insta\",key)}>\r\n                                    <PageCard platform={\"insta\"} isConnectedPage={page.isConnected} namePage={page.name} idPage={page.idPage} picture={page.imageUrl} accessToken={page.access_token} status={key} team={page.user} admins={page.admins} setLoadingPages={setLoadingPages}  />\r\n                                </div>\r\n                        ))} */}\r\n                    {/* </OwlCarousel> */}\r\n                    </>\r\n                )\r\n            :\r\n                (\r\n                <div className=\"d-flex\" style={{ width: '100%' }}>\r\n                    <div className=\"m-auto\">\r\n                        <Lottie options={defaultOptions} width={200} />\r\n                    </div>\r\n                </div>\r\n                )\r\n            }\r\n        </Row>\r\n    </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        fbData : state.socialMediaR.fbData,\r\n        instaData : state.socialMediaR.instaData,\r\n        socialMediaPageSelected : state.socialMediaR.socialMediaPageSelected,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectSocialMediaPage,getFbData, getInstaData })(Pages);\r\n"]},"metadata":{},"sourceType":"module"}