{"ast":null,"code":"import axios from 'axios'; // import { host, trainagenthost } from '../../config';\n\nexport const getWizardPagesPosts = idPage => {\n  return dispatch => {\n    if (idPage !== null && idPage !== undefined) {\n      return axios.get(host + `/api/v1/secure/post/get/${idPage}/all`, {\n        headers: {\n          'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n        }\n      }).then(res => {\n        console.log(\"POSTS\", res.data.data);\n        dispatch({\n          type: 'GET_WIZARD_PAGE_POSTS',\n          posts: res.data.data\n        });\n        dispatch(hideLoading());\n      }).catch(err => console.log(\"getWizardPagesPosts \", err));\n    }\n  };\n};\nexport const setWizardSelectedPage = (platform, pageName, picture, idPage, accessToken) => {\n  return async dispatch => {\n    const selectedPage = {\n      platform: platform,\n      name: pageName,\n      picture_url: picture !== null ? picture : `https://graph.facebook.com/v8.0/${idPage}/picture?access_token=${accessToken}`,\n      id: idPage,\n      accessToken: accessToken\n    };\n    dispatch({\n      type: 'SELECT_WIZARD_PAGE',\n      payload: selectedPage\n    });\n  };\n};\nexport const nextWizardStep = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'NEXT_WIZARD_STEP'\n    });\n  };\n};\nexport const prevWizardStep = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'PREV_WIZARD_STEP'\n    });\n  };\n};\nexport const resetWizardStep = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'RESET_WIZARD_STEP'\n    });\n  };\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/wizardActions.js"],"names":["axios","getWizardPagesPosts","idPage","dispatch","undefined","get","host","headers","localStorage","getItem","then","res","console","log","data","type","posts","hideLoading","catch","err","setWizardSelectedPage","platform","pageName","picture","accessToken","selectedPage","name","picture_url","id","payload","nextWizardStep","prevWizardStep","resetWizardStep"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAGA,OAAO,MAAMC,mBAAmB,GAAIC,MAAD,IAAY;AAC3C,SAAQC,QAAD,IAAc;AACjB,QAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAKE,SAAjC,EAA4C;AACxC,aAAOJ,KAAK,CAACK,GAAN,CAAUC,IAAI,GAAI,2BAA0BJ,MAAO,MAAnD,EAA0D;AAC7DK,QAAAA,OAAO,EAAE;AACL,2BAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADoD,OAA1D,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAAG,CAACG,IAAJ,CAASA,IAA9B;AAEAX,QAAAA,QAAQ,CAAC;AACLY,UAAAA,IAAI,EAAE,uBADD;AAELC,UAAAA,KAAK,EAAEL,GAAG,CAACG,IAAJ,CAASA;AAFX,SAAD,CAAR;AAIAX,QAAAA,QAAQ,CAACc,WAAW,EAAZ,CAAR;AACH,OAbM,EAaJC,KAbI,CAaGC,GAAD,IAASP,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCM,GAApC,CAbX,CAAP;AAcH;AACJ,GAjBD;AAkBH,CAnBM;AAqBP,OAAO,MAAMC,qBAAqB,GAAG,CAACC,QAAD,EAAUC,QAAV,EAAmBC,OAAnB,EAA2BrB,MAA3B,EAAkCsB,WAAlC,KAAkD;AACnF,SAAO,MAAOrB,QAAP,IAAoB;AAEvB,UAAMsB,YAAY,GAAG;AACjBJ,MAAAA,QAAQ,EAAEA,QADO;AAEjBK,MAAAA,IAAI,EAAEJ,QAFW;AAGjBK,MAAAA,WAAW,EAAGJ,OAAO,KAAK,IAAZ,GAAmBA,OAAnB,GAA8B,mCAAkCrB,MAAO,yBAAwBsB,WAAY,EAHxG;AAIjBI,MAAAA,EAAE,EAAE1B,MAJa;AAKjBsB,MAAAA,WAAW,EAAEA;AALI,KAArB;AAQArB,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAAE,oBADD;AAELc,MAAAA,OAAO,EAAEJ;AAFJ,KAAD,CAAR;AAIH,GAdD;AAeH,CAhBM;AAkBP,OAAO,MAAMK,cAAc,GAAG,MAAM;AAChC,SAAO,MAAO3B,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAAC;AAAEY,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,MAAMgB,cAAc,GAAG,MAAM;AAChC,SAAO,MAAO5B,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAAC;AAAEY,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,MAAMiB,eAAe,GAAG,MAAM;AACjC,SAAO,MAAO7B,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAAC;AAAEY,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACH,GAFD;AAGH,CAJM","sourcesContent":["import axios from 'axios'\r\n// import { host, trainagenthost } from '../../config';\r\n\r\n\r\nexport const getWizardPagesPosts = (idPage) => {\r\n    return (dispatch) => {\r\n        if(idPage !== null && idPage !== undefined) {\r\n            return axios.get(host + `/api/v1/secure/post/get/${idPage}/all`, {\r\n                headers: {\r\n                    'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n                }\r\n            })\r\n            .then(res => {\r\n                console.log(\"POSTS\", res.data.data);\r\n                \r\n                dispatch({\r\n                    type: 'GET_WIZARD_PAGE_POSTS',\r\n                    posts: res.data.data\r\n                })\r\n                dispatch(hideLoading())\r\n            }).catch((err) => console.log(\"getWizardPagesPosts \", err))\r\n        }\r\n    }\r\n}\r\n\r\nexport const setWizardSelectedPage = (platform,pageName,picture,idPage,accessToken) => {\r\n    return async (dispatch) => {\r\n\r\n        const selectedPage = {\r\n            platform: platform,\r\n            name: pageName,\r\n            picture_url : picture !== null ? picture : `https://graph.facebook.com/v8.0/${idPage}/picture?access_token=${accessToken}`,\r\n            id: idPage,\r\n            accessToken: accessToken,\r\n        };\r\n\r\n        dispatch({\r\n            type: 'SELECT_WIZARD_PAGE', \r\n            payload: selectedPage,\r\n        });\r\n    }\r\n};\r\n\r\nexport const nextWizardStep = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'NEXT_WIZARD_STEP' });\r\n    }\r\n};\r\n\r\nexport const prevWizardStep = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'PREV_WIZARD_STEP' });\r\n    }\r\n};\r\n\r\nexport const resetWizardStep = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'RESET_WIZARD_STEP' });\r\n    }\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}