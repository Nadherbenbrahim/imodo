{"ast":null,"code":"import axios from 'axios';\nimport { host } from '../../config';\nexport const addProject = (wizardSelectedPage, wizardSelectedPost) => {\n  return dispatch => {\n    /* wizardSelectedPost !== undefined => idPost : null */\n    let post = {\n      post: {\n        idPage: wizardSelectedPage.id,\n        name: wizardSelectedPage.name,\n        typePage: wizardSelectedPage.platform === \"fb\" ? \"facebook\" : \"instagram\",\n        idPost: wizardSelectedPost ? wizardSelectedPost.id : []\n      }\n    };\n    console.log(\"Params addProject calling the api !!!\", post);\n    return axios.post(host + `/api/v1/secure/project/add`, post, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('project added', res); // dispatch({\n      //     type: 'ADD_PROJECT',\n      //     payload: res.data\n      // })\n    }).catch(err => {\n      console.log(\"addProject action\", err);\n    });\n  };\n};\nexport const getAllIntents = intentType => {\n  return dispatch => {\n    return axios.get(host + (intentType === \"generic\" ? `/api/v1/intent/generiqueintent/all` : `/api/v1/intent/defaulintent/all`), {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(`get ${intentType} intents`, res.data.data);\n      let obj = [];\n      let newData = {};\n\n      for (let i = 0; i < res.data.data.length; i++) {\n        obj = {\n          [res.data.data[i]['intent']]: {\n            id: res.data.data[i]['id'],\n            name: res.data.data[i]['intent'],\n            date: res.data.data[i]['date']\n          }\n        };\n        newData = { ...newData,\n          ...obj\n        };\n      }\n\n      ;\n      /*\r\n           if u want full intent object send newData :D \r\n          console.log(\"Hey new data filtered :D\", newData);\r\n      */\n      // console.log(\"Hey new data Object keys :D\", Object.keys(newData));\n\n      dispatch({\n        type: 'GET_ALL_WIZARD_INTENTS',\n        payload: Object.keys(newData)\n      });\n    }).catch(err => console.log(\"Get all intents action\", err));\n  };\n};\nexport const getConnectedPagesProject = () => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/project/get/user`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      // console.log('all projects for this user', res.data.data)\n      dispatch({\n        type: 'GET_WIZARD_ACTIVE_PAGE_POSTS',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"err \", err));\n  };\n};\nexport const getWizardPagesPosts = wizardPage => {\n  return dispatch => {\n    if (wizardPage.id !== null && wizardPage.id !== undefined) {\n      return axios.get(host + `/api/v1/secure/post/get/${wizardPage.id}/all`, {\n        headers: {\n          'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n        }\n      }).then(res => {\n        console.log(\"posts\", res.data.data);\n        dispatch({\n          type: 'GET_WIZARD_PAGE_POSTS',\n          payload: res.data.data\n        });\n      }).catch(err => console.log(\"getWizardPagesPosts \", err));\n    }\n  };\n};\nexport const setWizardSelectedPost = post => {\n  return async dispatch => {\n    // const selectedPage = {\n    //     platform: platform,\n    //     name: pageName,\n    //     picture_url : picture !== null ? picture : `https://graph.facebook.com/v8.0/${idPage}/picture?access_token=${accessToken}`,\n    //     id: idPage,\n    //     accessToken: accessToken,\n    // };\n    dispatch({\n      type: 'SELECT_WIZARD_POST',\n      payload: post\n    });\n  };\n};\nexport const setWizardIntentType = (intentType, navigation) => {\n  return async dispatch => {\n    dispatch({\n      type: 'SELECT_WIZARD_INTENT_TYPE',\n      payload: intentType\n    });\n    navigation.push('/home/auto-wizard');\n  };\n};\nexport const setWizardSelectedPage = (platform, pageName, picture, idPage, accessToken) => {\n  return async dispatch => {\n    const selectedPage = {\n      platform: platform,\n      name: pageName,\n      picture_url: picture !== null ? picture : `https://graph.facebook.com/v8.0/${idPage}/picture?access_token=${accessToken}`,\n      id: idPage,\n      accessToken: accessToken\n    };\n    dispatch({\n      type: 'SELECT_WIZARD_PAGE',\n      payload: selectedPage\n    });\n  };\n};\nexport const nextSpecificWizardStep = step => {\n  return async dispatch => {\n    dispatch({\n      type: 'NEXT_SPECIFIC_WIZARD_STEP',\n      payload: step\n    });\n  };\n};\nexport const nextWizardStep = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'NEXT_WIZARD_STEP'\n    });\n  };\n};\nexport const prevWizardStep = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'PREV_WIZARD_STEP'\n    });\n  };\n};\nexport const resetWizardStep = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'RESET_WIZARD_STEP'\n    });\n  };\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/wizardActions.js"],"names":["axios","host","addProject","wizardSelectedPage","wizardSelectedPost","dispatch","post","idPage","id","name","typePage","platform","idPost","console","log","headers","localStorage","getItem","then","res","catch","err","getAllIntents","intentType","get","data","obj","newData","i","length","date","type","payload","Object","keys","getConnectedPagesProject","getWizardPagesPosts","wizardPage","undefined","setWizardSelectedPost","setWizardIntentType","navigation","push","setWizardSelectedPage","pageName","picture","accessToken","selectedPage","picture_url","nextSpecificWizardStep","step","nextWizardStep","prevWizardStep","resetWizardStep"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { host } from '../../config';\r\n\r\n\r\n\r\nexport const addProject = (wizardSelectedPage,wizardSelectedPost) => {\r\n    return (dispatch) => {\r\n        \r\n        /* wizardSelectedPost !== undefined => idPost : null */\r\n        let post = {\r\n            post : {\r\n                idPage: wizardSelectedPage.id,\r\n                name: wizardSelectedPage.name,\r\n                typePage: wizardSelectedPage.platform === \"fb\" ? \"facebook\" : \"instagram\",\r\n                idPost: wizardSelectedPost ? wizardSelectedPost.id : [],\r\n            }\r\n        };\r\n\r\n        console.log(\"Params addProject calling the api !!!\", post);\r\n        \r\n        return axios.post(host + `/api/v1/secure/project/add`,post,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('project added', res);\r\n\r\n            // dispatch({\r\n            //     type: 'ADD_PROJECT',\r\n            //     payload: res.data\r\n            // })\r\n        }).catch(err => {\r\n            console.log(\"addProject action\", err);\r\n        })\r\n    }\r\n};\r\n\r\nexport const getAllIntents = (intentType) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + (intentType === \"generic\" ? `/api/v1/intent/generiqueintent/all` : `/api/v1/intent/defaulintent/all`), {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n            .then(res => {\r\n                console.log(`get ${intentType} intents`, res.data.data);\r\n\r\n                let obj = [];\r\n                let newData = {}\r\n\r\n                for (let i = 0; i < res.data.data.length; i++) {\r\n                    obj = {\r\n                      [res.data.data[i]['intent']]: {\r\n                          id: res.data.data[i]['id'],\r\n                          name: res.data.data[i]['intent'],\r\n                          date: res.data.data[i]['date']\r\n                      }\r\n                    }\r\n                    newData = { ...newData, ...obj }\r\n                };\r\n\r\n                /*\r\n                     if u want full intent object send newData :D \r\n                    console.log(\"Hey new data filtered :D\", newData);\r\n                */\r\n\r\n                // console.log(\"Hey new data Object keys :D\", Object.keys(newData));\r\n\r\n                dispatch({\r\n                    type: 'GET_ALL_WIZARD_INTENTS',\r\n                    payload: Object.keys(newData)\r\n                })\r\n               \r\n            }).catch((err) => console.log(\"Get all intents action\", err))\r\n    }\r\n};\r\n\r\nexport const getConnectedPagesProject = () => {\r\n    return (dispatch) => {\r\n        return axios.get(host + `/api/v1/secure/project/get/user`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('all projects for this user', res.data.data)\r\n            \r\n            dispatch({\r\n                type: 'GET_WIZARD_ACTIVE_PAGE_POSTS',\r\n                payload: res.data.data\r\n            })\r\n        }).catch((err) => console.log(\"err \", err))\r\n    }\r\n};\r\n\r\nexport const getWizardPagesPosts = (wizardPage) => {\r\n    return (dispatch) => {\r\n\r\n        if(wizardPage.id !== null && wizardPage.id !== undefined) {\r\n            return axios.get(host + `/api/v1/secure/post/get/${wizardPage.id}/all`, {\r\n                headers: {\r\n                    'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n                }\r\n            })\r\n            .then(res => {\r\n\r\n                console.log(\"posts\",res.data.data);\r\n\r\n                dispatch({\r\n                    type: 'GET_WIZARD_PAGE_POSTS',\r\n                    payload: res.data.data\r\n                })\r\n            }).catch((err) => console.log(\"getWizardPagesPosts \", err))\r\n        }\r\n    }\r\n};\r\n\r\nexport const setWizardSelectedPost = (post) => {\r\n    return async (dispatch) => {\r\n\r\n        // const selectedPage = {\r\n        //     platform: platform,\r\n        //     name: pageName,\r\n        //     picture_url : picture !== null ? picture : `https://graph.facebook.com/v8.0/${idPage}/picture?access_token=${accessToken}`,\r\n        //     id: idPage,\r\n        //     accessToken: accessToken,\r\n        // };\r\n\r\n        dispatch({\r\n            type: 'SELECT_WIZARD_POST', \r\n            payload: post,\r\n        });\r\n    }\r\n};\r\n\r\nexport const setWizardIntentType = (intentType,navigation) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch({\r\n            type: 'SELECT_WIZARD_INTENT_TYPE', \r\n            payload: intentType,\r\n        });\r\n        navigation.push('/home/auto-wizard')\r\n    }\r\n};\r\n\r\nexport const setWizardSelectedPage = (platform,pageName,picture,idPage,accessToken) => {\r\n    return async (dispatch) => {\r\n\r\n        const selectedPage = {\r\n            platform: platform,\r\n            name: pageName,\r\n            picture_url : picture !== null ? picture : `https://graph.facebook.com/v8.0/${idPage}/picture?access_token=${accessToken}`,\r\n            id: idPage,\r\n            accessToken: accessToken,\r\n        };\r\n\r\n        \r\n\r\n        dispatch({\r\n            type: 'SELECT_WIZARD_PAGE', \r\n            payload: selectedPage,\r\n        });\r\n    }\r\n};\r\n\r\nexport const nextSpecificWizardStep = (step) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'NEXT_SPECIFIC_WIZARD_STEP',payload: step });\r\n    }\r\n};\r\n\r\nexport const nextWizardStep = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'NEXT_WIZARD_STEP' });\r\n    }\r\n};\r\n\r\nexport const prevWizardStep = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'PREV_WIZARD_STEP' });\r\n    }\r\n};\r\n\r\nexport const resetWizardStep = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'RESET_WIZARD_STEP' });\r\n    }\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}