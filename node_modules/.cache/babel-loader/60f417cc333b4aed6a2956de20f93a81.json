{"ast":null,"code":"import _toConsumableArray from\"/usr/work/smart_front_oussema/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/usr/work/smart_front_oussema/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{connect}from'react-redux';import{nextWizardStep,getExistingProject,getAllIntents,trainAgentPage,trainAgentPost,resetStep3Wizard,nextSpecificWizardStep,resetWizardPostSelected,resetWizardPageSelected}from'../../../redux/actions/wizardActions';import Swal from'sweetalert2/dist/sweetalert2.js';// import ReactTooltip from 'react-tooltip';\nimport WizardIntentDetails from'./WizardIntentDetails';import{Row,Col,Spinner,Modal}from'react-bootstrap';import{useLocation,useHistory}from'react-router-dom';// Translations\nimport{trans}from'../../../Translations';import{BiError}from'react-icons/bi';export var WizardConfig=function WizardConfig(props){var lang=props.lang;// Popup Config :\nvar swalWithBootstrapButtons=Swal.mixin({customClass:{confirmButton:'wizard-pages-active-btn py-2 px-3'},buttonsStyling:false});var _useState=useState([]),_useState2=_slicedToArray(_useState,2),selectedIntents=_useState2[0],setSelectedIntents=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),btnLoading=_useState4[0],setBtnLoading=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),notif=_useState6[0],setNotif=_useState6[1];var location=useLocation();var history=useHistory();var checkIntent=function checkIntent(intent){var found=selectedIntents.findIndex(function(intenta){return intenta.name===intent;});if(found>-1){return true;}else{return false;}};var newIntent=function newIntent(intent){var found=selectedIntents.findIndex(function(intenta){return intenta.name===intent.intent;});// if already clicked swal the popup\nif(found>-1){if(lang===\"en\"){swalWithBootstrapButtons.fire({title:\"\".concat(trans[lang].wizardConfig.intent,\" \\\"\").concat(intent.intent,\"\\\" \").concat(trans[lang].wizardConfig.alreadySelected),confirmButtonText:'Okay'});}else{swalWithBootstrapButtons.fire({title:\"\".concat(trans[lang].wizardConfig.intent,\" \\\"\").concat(intent.intent_fr,\"\\\" \").concat(trans[lang].wizardConfig.alreadySelected),confirmButtonText:'Okay'});}}else{// Intent selected and create an array for the products to render it from the backend\nvar intentToPush={name:intent.intent,name_fr:intent.intent_fr,products:[],status:'new'};// console.log(\"Im pushing\", intentToPush)\nsetSelectedIntents(function(selectedIntents){return[].concat(_toConsumableArray(selectedIntents),[intentToPush]);});}};var goToTrainAgent=function goToTrainAgent(){if(selectedIntents.length>0){setBtnLoading(true);setNotif(true);if(props.wizardIntentType===\"generic\"){props.trainAgentPage(selectedIntents,props.wizardIdProject).then(function(){setNotif(false);props.nextWizardStep();}).then(function(){return props.resetStep3Wizard();});}else{props.trainAgentPost(selectedIntents,props.wizardIdProject).then(function(){setNotif(true);props.nextWizardStep();}).then(function(){return props.resetStep3Wizard();});}}else{swalWithBootstrapButtons.fire({title:trans[lang].wizardConfig.addAtLeast,confirmButtonText:'Okay'});}};var handleBackFromStep3To2=function handleBackFromStep3To2(){props.resetStep3Wizard();// console.log(\"Lets see location first =>\", location);\nif(location.state){history.push({pathname:'/home/my-agents',state:{imFrom:'Wizard'}});}else{if(props.wizardIntentType===\"generic\"){props.resetWizardPageSelected();props.nextSpecificWizardStep(0);}else{props.resetWizardPostSelected();props.nextSpecificWizardStep(1);}}};var renderNotif=function renderNotif(){return/*#__PURE__*/React.createElement(Modal,{show:notif,size:\"md\",centered:true},/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(Col,{lg:12},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{lg:12,className:\"d-flex\"},/*#__PURE__*/React.createElement(BiError,{color:\"#E5007D\",size:65,className:\"mx-auto mb-3\",style:{cursor:'pointer'}})),/*#__PURE__*/React.createElement(Col,{lg:12,className:\"d-flex\"},/*#__PURE__*/React.createElement(\"p\",{className:\"mx-auto mb-3 confirm-modal-text\"},trans[lang].wizardConfig.updateYourAgent)),/*#__PURE__*/React.createElement(Col,{lg:12,className:\"d-flex\"},/*#__PURE__*/React.createElement(Spinner,{animation:\"border\",className:\"spinnerRose m-auto\"}))))));};useEffect(function(){props.getAllIntents(props.wizardIntentType).then(function(){props.getExistingProject(props.wizardIdProject);});},[]);useEffect(function(){if(props.wizardExistingProjectIntents){// Set selected Intent from the existing project directly :\nvar intentToPush={};var newIntents=[];props.wizardExistingProjectIntents.map(function(intent){// console.log(\"Existing shit !!!!!!! =>\", intent);\nintentToPush={name:intent.name,name_fr:intent.hasOwnProperty(\"intent_fr\")?intent.intent_fr:intent.hasOwnProperty(\"name_fr\")?intent.name_fr:intent.name,products:intent.answer,status:'old'};newIntents.push(intentToPush);});// console.log(\"Final intent =>\", newIntents);\nsetSelectedIntents(newIntents);}// To Remove the listner\nreturn function(){};},[props.wizardExistingProjectIntents]);return/*#__PURE__*/React.createElement(Row,{className:\"mt-1\"},notif&&renderNotif(),/*#__PURE__*/React.createElement(Col,{lg:1}),/*#__PURE__*/React.createElement(Col,{lg:9,className:\"wizard-pages-container mb-3 py-4 pl-4 pr-5 \",style:{backgroundColor:'white'}},/*#__PURE__*/React.createElement(Row,{className:\"d-flex\",style:{width:'fit-content'}},/*#__PURE__*/React.createElement(Col,{lg:12,className:\"d-flex flex-column p-3\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex flex-column wizard-config-intents-container px-3 py-2\"},/*#__PURE__*/React.createElement(\"p\",{className:\"mr-auto  mb-3 wizard-config-intent-title\"},trans[lang].wizardConfig.selectIntents),/*#__PURE__*/React.createElement(Row,{className:\"mx-0 my-0 d-flex\"},props.wizardIntents&&props.wizardIntents.map(function(intent,index){return/*#__PURE__*/React.createElement(\"div\",{key:index,onClick:function onClick(){return newIntent(intent);},className:checkIntent(intent.intent)?\"d-flex wizard-config-intent-box-active py-1 px-2 mb-2 mr-1\":\"d-flex wizard-config-intent-box py-1 px-2 mb-2 mr-1\"},lang===\"en\"?/*#__PURE__*/React.createElement(\"p\",{className:\"m-auto wizard-config-intent-name\"},intent.intent):/*#__PURE__*/React.createElement(\"p\",{className:\"m-auto wizard-config-intent-name\"},intent.intent_fr));}))))),/*#__PURE__*/React.createElement(Row,{className:\"d-flex mt-1\"},selectedIntents&&selectedIntents.map(function(intent,index){return/*#__PURE__*/React.createElement(WizardIntentDetails,{indexOfIntent:index,intent:intent,wizardIdProject:props.wizardIdProject,setIntents:setSelectedIntents,selectedIntents:selectedIntents,isExistingProject:props.wizardExistingProjectIntents?props.wizardExistingProjectIntents:false,intentStatus:intent.status});})),/*#__PURE__*/React.createElement(Col,{lg:12},/*#__PURE__*/React.createElement(Row,{className:\"mb-3\"},/*#__PURE__*/React.createElement(Col,{lg:6,className:\"d-flex\"},/*#__PURE__*/React.createElement(\"div\",{className:\"wizard-pages-inactive-btn py-2 px-4 my-auto text-center\",onClick:handleBackFromStep3To2},trans[lang].wizardConfig.back)),/*#__PURE__*/React.createElement(Col,{lg:6},/*#__PURE__*/React.createElement(Row,{className:\"d-flex\"},/*#__PURE__*/React.createElement(\"div\",{className:\"wizard-pages-inactive-btn ml-auto py-2 px-4 mr-3\"},trans[lang].wizardConfig.saveDraft),/*#__PURE__*/React.createElement(\"div\",{className:\"wizard-pages-active-btn py-2 px-4 mr-3\",onClick:function onClick(){return goToTrainAgent();}},btnLoading?/*#__PURE__*/React.createElement(Spinner,{size:\"sm\",animation:\"border\",variant:\"light\"}):trans[lang].wizardConfig.next)))))),/*#__PURE__*/React.createElement(Col,{lg:2}));};var mapStateToProps=function mapStateToProps(state){return{lang:state.socialMediaR.lang,wizardStep:state.wizardR.wizardStep,wizardIntentType:state.wizardR.wizardIntentType,wizardIdProject:state.wizardR.wizardIdProject,wizardExistingProject:state.wizardR.wizardExistingProject,wizardExistingProjectIntents:state.wizardR.wizardExistingProjectIntents,wizardIntents:state.wizardR.wizardIntents,wizardSelectedPage:state.wizardR.wizardSelectedPage,wizardSelectedPost:state.wizardR.wizardSelectedPost};};export default connect(mapStateToProps,{nextWizardStep:nextWizardStep,getExistingProject:getExistingProject,getAllIntents:getAllIntents,trainAgentPage:trainAgentPage,trainAgentPost:trainAgentPost,resetStep3Wizard:resetStep3Wizard,nextSpecificWizardStep:nextSpecificWizardStep,resetWizardPostSelected:resetWizardPostSelected,resetWizardPageSelected:resetWizardPageSelected})(WizardConfig);","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/app/Home/AutoWizard/WizardConfig.js"],"names":["React","useEffect","useState","connect","nextWizardStep","getExistingProject","getAllIntents","trainAgentPage","trainAgentPost","resetStep3Wizard","nextSpecificWizardStep","resetWizardPostSelected","resetWizardPageSelected","Swal","WizardIntentDetails","Row","Col","Spinner","Modal","useLocation","useHistory","trans","BiError","WizardConfig","props","lang","swalWithBootstrapButtons","mixin","customClass","confirmButton","buttonsStyling","selectedIntents","setSelectedIntents","btnLoading","setBtnLoading","notif","setNotif","location","history","checkIntent","intent","found","findIndex","intenta","name","newIntent","fire","title","wizardConfig","alreadySelected","confirmButtonText","intent_fr","intentToPush","name_fr","products","status","goToTrainAgent","length","wizardIntentType","wizardIdProject","then","addAtLeast","handleBackFromStep3To2","state","push","pathname","imFrom","renderNotif","cursor","updateYourAgent","wizardExistingProjectIntents","newIntents","map","hasOwnProperty","answer","backgroundColor","width","selectIntents","wizardIntents","index","back","saveDraft","next","mapStateToProps","socialMediaR","wizardStep","wizardR","wizardExistingProject","wizardSelectedPage","wizardSelectedPost"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { nextWizardStep,getExistingProject, getAllIntents, trainAgentPage, trainAgentPost, resetStep3Wizard, nextSpecificWizardStep, resetWizardPostSelected,resetWizardPageSelected } from '../../../redux/actions/wizardActions';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\n// import ReactTooltip from 'react-tooltip';\r\n\r\nimport WizardIntentDetails from './WizardIntentDetails';\r\n\r\nimport {\r\n    Row,\r\n    Col,\r\n    Spinner,\r\n    Modal\r\n} from 'react-bootstrap';\r\n\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n\r\n// Translations\r\nimport { trans } from '../../../Translations';\r\n\r\n\r\nimport { BiError } from 'react-icons/bi';\r\n\r\nexport const WizardConfig = (props) => {\r\n\r\n    let { lang } = props;\r\n\r\n    // Popup Config :\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n        customClass: {\r\n          confirmButton: 'wizard-pages-active-btn py-2 px-3',\r\n        },\r\n        buttonsStyling: false\r\n    });\r\n\r\n    const [selectedIntents, setSelectedIntents] = useState([]);\r\n    const [btnLoading, setBtnLoading] = useState(false);\r\n    const [notif, setNotif] = useState(false);\r\n\r\n    let location = useLocation();\r\n    let history = useHistory();\r\n\r\n    const checkIntent = (intent) => {\r\n        let found = selectedIntents.findIndex((intenta) => intenta.name === intent);\r\n\r\n        if(found > -1) {\r\n           return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const newIntent = (intent) => {\r\n        let found = selectedIntents.findIndex((intenta) => intenta.name === intent.intent);\r\n        \r\n        // if already clicked swal the popup\r\n        if(found > -1) {    \r\n            if(lang === \"en\") {\r\n                swalWithBootstrapButtons.fire({ title: `${trans[lang].wizardConfig.intent} \"${intent.intent}\" ${trans[lang].wizardConfig.alreadySelected}`,confirmButtonText: 'Okay' });\r\n            } else {\r\n                swalWithBootstrapButtons.fire({ title: `${trans[lang].wizardConfig.intent} \"${intent.intent_fr}\" ${trans[lang].wizardConfig.alreadySelected}`,confirmButtonText: 'Okay' });\r\n            }\r\n        } else {\r\n            // Intent selected and create an array for the products to render it from the backend\r\n            let intentToPush = {\r\n                name: intent.intent,\r\n                name_fr: intent.intent_fr,\r\n                products: [],\r\n                status: 'new',\r\n            };\r\n            // console.log(\"Im pushing\", intentToPush)\r\n            setSelectedIntents(selectedIntents => [...selectedIntents, intentToPush]);\r\n        }\r\n    };\r\n\r\n    const goToTrainAgent = () => {\r\n        \r\n        if(selectedIntents.length > 0) {\r\n            setBtnLoading(true);\r\n            setNotif(true);\r\n\r\n            if(props.wizardIntentType === \"generic\") {\r\n                props.trainAgentPage(selectedIntents,props.wizardIdProject)\r\n                .then(() => { setNotif(false);  props.nextWizardStep(); })\r\n                .then(() => props.resetStep3Wizard());\r\n            } else {\r\n                props.trainAgentPost(selectedIntents,props.wizardIdProject)\r\n                .then(() => { setNotif(true); props.nextWizardStep(); })\r\n                .then(() => props.resetStep3Wizard());\r\n            }\r\n        } else {\r\n            swalWithBootstrapButtons.fire({ title: trans[lang].wizardConfig.addAtLeast, confirmButtonText: 'Okay' });\r\n        }\r\n    };\r\n\r\n    const handleBackFromStep3To2 = () => {\r\n        props.resetStep3Wizard(); \r\n        // console.log(\"Lets see location first =>\", location);\r\n\r\n        if(location.state) {\r\n            history.push({\r\n                pathname: '/home/my-agents',\r\n                state: { imFrom : 'Wizard' }\r\n            });\r\n        } else {\r\n            if(props.wizardIntentType === \"generic\") {\r\n                props.resetWizardPageSelected();\r\n                props.nextSpecificWizardStep(0);\r\n            } else {\r\n                props.resetWizardPostSelected();\r\n                props.nextSpecificWizardStep(1);\r\n                \r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    const renderNotif = () => (\r\n        <Modal show={notif} size=\"md\" centered>\r\n            <Modal.Body>\r\n                <Col lg={12}>\r\n                    <Row>\r\n                        <Col lg={12} className=\"d-flex\">\r\n                            <BiError color={\"#E5007D\"} size={65} className=\"mx-auto mb-3\" style={{cursor: 'pointer'}} />\r\n                        </Col>\r\n\r\n                        <Col lg={12} className=\"d-flex\">\r\n                            <p className=\"mx-auto mb-3 confirm-modal-text\">\r\n                               {trans[lang].wizardConfig.updateYourAgent}\r\n                            </p>\r\n                        </Col>\r\n                        \r\n                        <Col lg={12} className=\"d-flex\">\r\n                           <Spinner  animation=\"border\"  className=\"spinnerRose m-auto\" />\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Modal.Body>\r\n      </Modal>\r\n    );\r\n\r\n    useEffect(() => {\r\n        props.getAllIntents(props.wizardIntentType)\r\n        .then(() => {\r\n            props.getExistingProject(props.wizardIdProject)\r\n        });\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        if(props.wizardExistingProjectIntents) {\r\n            // Set selected Intent from the existing project directly :\r\n            let intentToPush = {};\r\n            let newIntents = [];\r\n\r\n            props.wizardExistingProjectIntents.map(intent => {\r\n                // console.log(\"Existing shit !!!!!!! =>\", intent);\r\n                intentToPush = {\r\n                    name: intent.name,\r\n                    name_fr: intent.hasOwnProperty(\"intent_fr\") ? intent.intent_fr : intent.hasOwnProperty(\"name_fr\") ? intent.name_fr : intent.name,\r\n                    products: intent.answer,\r\n                    status: 'old',\r\n                };\r\n                newIntents.push(intentToPush);\r\n            });\r\n            // console.log(\"Final intent =>\", newIntents);\r\n            setSelectedIntents(newIntents);\r\n        }\r\n        // To Remove the listner\r\n        return () => {};\r\n    },[props.wizardExistingProjectIntents]);\r\n\r\n    return (\r\n        <Row className=\"mt-1\">  \r\n            {notif && renderNotif()}\r\n\r\n            <Col lg={1} />\r\n    \r\n            <Col lg={9} className=\"wizard-pages-container mb-3 py-4 pl-4 pr-5 \" style={{backgroundColor: 'white'}}>\r\n                \r\n                {/* INTENTS */}\r\n                <Row className=\"d-flex\" style={{width: 'fit-content'}}>\r\n                    <Col lg={12} className=\"d-flex flex-column p-3\">\r\n                        <div className=\"d-flex flex-column wizard-config-intents-container px-3 py-2\">\r\n                            <p className=\"mr-auto  mb-3 wizard-config-intent-title\">{trans[lang].wizardConfig.selectIntents}</p>\r\n                            \r\n                            <Row className=\"mx-0 my-0 d-flex\">\r\n                                {\r\n                                props.wizardIntents \r\n                                &&\r\n                                props.wizardIntents.map((intent,index) => (\r\n                                    <div \r\n                                        key={index}\r\n                                        onClick={() => newIntent(intent)} \r\n                                        className={checkIntent(intent.intent) ? \"d-flex wizard-config-intent-box-active py-1 px-2 mb-2 mr-1\" : \"d-flex wizard-config-intent-box py-1 px-2 mb-2 mr-1\"}\r\n                                    >\r\n                                        {\r\n                                        lang === \"en\"\r\n                                        ?\r\n                                        <p className=\"m-auto wizard-config-intent-name\">{intent.intent}</p>\r\n                                        :\r\n                                        <p className=\"m-auto wizard-config-intent-name\">{intent.intent_fr}</p>\r\n                                        }\r\n                                    </div>\r\n                                ))}\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <Row className=\"d-flex mt-1\">  \r\n                    {selectedIntents &&\r\n                        selectedIntents.map((intent,index) => \r\n                        <WizardIntentDetails \r\n                            indexOfIntent={index} \r\n                            intent={intent} \r\n                            wizardIdProject={props.wizardIdProject} \r\n                            setIntents={setSelectedIntents} \r\n                            selectedIntents={selectedIntents} \r\n                            isExistingProject={props.wizardExistingProjectIntents ? props.wizardExistingProjectIntents : false} \r\n                            intentStatus={intent.status}\r\n                        />\r\n                    )}\r\n                </Row>\r\n             \r\n                {/* BTNS */}\r\n                <Col lg={12}>\r\n                    <Row className=\"mb-3\">\r\n                        <Col lg={6} className=\"d-flex\">\r\n                            <div className=\"wizard-pages-inactive-btn py-2 px-4 my-auto text-center\"  onClick={handleBackFromStep3To2}>\r\n                                {/* MUST RESET ALL WIZARD 3 VARS */}\r\n                                {trans[lang].wizardConfig.back}\r\n                            </div>\r\n                        </Col>\r\n\r\n                        <Col lg={6}>\r\n                            <Row className=\"d-flex\">\r\n                                <div className={\"wizard-pages-inactive-btn ml-auto py-2 px-4 mr-3\"}>{trans[lang].wizardConfig.saveDraft}</div>\r\n                                \r\n                                <div className={\"wizard-pages-active-btn py-2 px-4 mr-3\"} onClick={() => goToTrainAgent()}>\r\n                                {\r\n                                    btnLoading\r\n                                    ?\r\n                                    (<Spinner size=\"sm\" animation=\"border\" variant=\"light\" />)\r\n                                    :\r\n                                    trans[lang].wizardConfig.next\r\n                                }\r\n                                </div>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n            </Col>\r\n    \r\n            <Col lg={2} />\r\n        </Row>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    lang: state.socialMediaR.lang,\r\n    wizardStep: state.wizardR.wizardStep,\r\n    wizardIntentType: state.wizardR.wizardIntentType,\r\n    wizardIdProject: state.wizardR.wizardIdProject,\r\n    wizardExistingProject: state.wizardR.wizardExistingProject,\r\n    wizardExistingProjectIntents: state.wizardR.wizardExistingProjectIntents,\r\n    wizardIntents: state.wizardR.wizardIntents,\r\n    wizardSelectedPage: state.wizardR.wizardSelectedPage,\r\n    wizardSelectedPost: state.wizardR.wizardSelectedPost,\r\n})\r\n\r\nexport default connect(mapStateToProps, {nextWizardStep,getExistingProject, getAllIntents, trainAgentPage,trainAgentPost, resetStep3Wizard, nextSpecificWizardStep, resetWizardPostSelected,resetWizardPageSelected })(WizardConfig)\r\n"]},"metadata":{},"sourceType":"module"}