{"ast":null,"code":"import axios from 'axios';\nimport { host } from '../config';\nimport { showLoading, hideLoading } from 'react-redux-loading-bar';\nexport const loginAction = (token, owenProps) => {\n  return dispatch => {\n    dispatch(showLoading());\n    return axios.post(host + '/api/v1/auth/login/facebook', {\n      token\n    }).then(resdata => {\n      console.log('action ', resdata);\n      localStorage.setItem('authtoken', resdata.data.data.token);\n      dispatch({\n        type: 'LOGIN',\n        user: resdata\n      });\n      owenProps.history.push('dachboard/');\n      dispatch(hideLoading());\n    }).catch(err => console.log('loginAction ', err));\n  };\n};\nexport const getAllPagesAction = () => {\n  return dispatch => {\n    dispatch(showLoading());\n    return axios.get(host + '/api/v1/secure/pages/get/all/', {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('pages ', res);\n      dispatch({\n        type: 'GETALLPAGES',\n        pages: res\n      });\n      dispatch(hideLoading());\n    });\n  };\n};\nexport const fbdata = fbdata => {\n  return {\n    type: 'FBDATA',\n    fbdata\n  };\n};\nexport const logoutAction = owenProps => {\n  return dispatch => {\n    dispatch(showLoading());\n    localStorage.removeItem('authtoken');\n    dispatch({\n      type: 'LOGOUT'\n    });\n    owenProps.history.push('/');\n    dispatch(hideLoading());\n  };\n};\nexport const connectPage = pageId => {\n  return dispatch => {\n    dispatch(showLoading());\n    return axios.post(host + '/api/v1/secure/pages/connect/', pageId, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('pages connected', res);\n      dispatch({\n        type: 'UPDATEPAGE',\n        page: res\n      });\n      dispatch(hideLoading());\n    });\n  };\n};\nexport const deconnectPage = pageId => {\n  return dispatch => {\n    dispatch(showLoading());\n    return axios.post(host + '/api/v1/secure/pages/disconnect/', pageId, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('pages connected', res);\n      dispatch({\n        type: 'UPDATEPAGE',\n        page: res\n      });\n      dispatch(hideLoading());\n    });\n  };\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/actions/index.js"],"names":["axios","host","showLoading","hideLoading","loginAction","token","owenProps","dispatch","post","then","resdata","console","log","localStorage","setItem","data","type","user","history","push","catch","err","getAllPagesAction","get","headers","getItem","res","pages","fbdata","logoutAction","removeItem","connectPage","pageId","page","deconnectPage"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { host } from '../config'\r\nimport { showLoading, hideLoading } from 'react-redux-loading-bar'\r\n\r\n\r\nexport const loginAction = (token, owenProps) => {\r\n    return (dispatch) => {\r\n        dispatch(showLoading())\r\n        return axios.post(host + '/api/v1/auth/login/facebook', {\r\n            token\r\n        }).then(resdata => {\r\n            console.log('action ', resdata)\r\n            localStorage.setItem('authtoken', resdata.data.data.token)\r\n            dispatch({\r\n                type: 'LOGIN',\r\n                user: resdata\r\n            })\r\n            owenProps.history.push('dachboard/')\r\n            dispatch(hideLoading())\r\n        }).catch(err => console.log('loginAction ', err))\r\n    }\r\n}\r\n\r\n\r\nexport const getAllPagesAction = () => {\r\n    return (dispatch) => {\r\n        dispatch(showLoading())\r\n        return axios.get(host + '/api/v1/secure/pages/get/all/', {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n            .then(res => {\r\n                console.log('pages ', res)\r\n                dispatch({\r\n                    type: 'GETALLPAGES',\r\n                    pages: res\r\n                })\r\n                dispatch(hideLoading())\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const fbdata = (fbdata) => {\r\n    return {\r\n        type: 'FBDATA',\r\n        fbdata\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const logoutAction = (owenProps) => {\r\n    return (dispatch) => {\r\n        dispatch(showLoading())\r\n        localStorage.removeItem('authtoken')\r\n        dispatch({\r\n            type: 'LOGOUT',\r\n        })\r\n        owenProps.history.push('/')\r\n        dispatch(hideLoading())\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const connectPage = (pageId) => {\r\n    return (dispatch) => {\r\n        dispatch(showLoading())\r\n        return axios.post(host + '/api/v1/secure/pages/connect/', pageId, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n            .then(res => {\r\n                console.log('pages connected', res)\r\n                dispatch({\r\n                    type: 'UPDATEPAGE',\r\n                    page: res\r\n                })\r\n                dispatch(hideLoading())\r\n            })\r\n    }\r\n}\r\n\r\nexport const deconnectPage = (pageId) => {\r\n    return (dispatch) => {\r\n        dispatch(showLoading())\r\n        return axios.post(host + '/api/v1/secure/pages/disconnect/', pageId, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n            .then(res => {\r\n                console.log('pages connected', res)\r\n                dispatch({\r\n                    type: 'UPDATEPAGE',\r\n                    page: res\r\n                })\r\n                dispatch(hideLoading())\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}