{"ast":null,"code":"var _jsxFileName = \"/usr/work/smart_front_oussema/src/app/Home/Pages/Pages.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../Home.css';\nimport PageCard from './PageCard';\nimport { connect } from 'react-redux';\nimport { selectSocialMediaPage, getFbData, getInstaData } from '../../../redux/actions/socialMediaActions';\nimport { Row, Col, Image } from 'react-bootstrap'; // import OwlCarousel from 'react-owl-carousel';\n\nimport Lottie from 'react-lottie';\nimport animationData from '../../../assets/json/loading.json';\n\nconst ImageTest = require('../../../assets/images/Ant-Man.png');\n\nconst LogoTest = require('../../../assets/images/AntMan-logo.png');\n\nfunction Pages(props) {\n  const [loadingPages, setLoadingPages] = useState(true);\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  };\n  useEffect(() => {\n    props.getFbData();\n    props.getInstaData();\n    setTimeout(() => {\n      setLoadingPages(false);\n    }, 2000);\n  }, []);\n  useEffect(() => {\n    if (props.fbData) {\n      console.log(\"Pages fb data =>\", props.fbData);\n    }\n  }, [props.fbData]);\n  useEffect(() => {\n    if (props.instaData) {\n      console.log(\"Pages insta Data =>\", props.instaData);\n    }\n  }, [props.instaData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, props.title ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"home-big-title\",\n    style: props.titleStyling ? props.titleStyling : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, props.title) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"home-big-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Pages Connected\")), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, !loadingPages ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(OwlCarousel, {\n    margin: 10,\n    items: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Lottie, {\n    options: defaultOptions,\n    width: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  })))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    fbData: state.socialMediaR.fbData,\n    instaData: state.socialMediaR.instaData,\n    socialMediaPageSelected: state.socialMediaR.socialMediaPageSelected\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectSocialMediaPage,\n  getFbData,\n  getInstaData\n})(Pages);","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/app/Home/Pages/Pages.js"],"names":["React","useEffect","useState","PageCard","connect","selectSocialMediaPage","getFbData","getInstaData","Row","Col","Image","Lottie","animationData","ImageTest","require","LogoTest","Pages","props","loadingPages","setLoadingPages","defaultOptions","loop","autoplay","rendererSettings","preserveAspectRatio","setTimeout","fbData","console","log","instaData","title","titleStyling","width","mapStateToProps","state","socialMediaR","socialMediaPageSelected"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport '../Home.css';\r\nimport PageCard from './PageCard';\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport { selectSocialMediaPage, getFbData, getInstaData } from '../../../redux/actions/socialMediaActions';\r\n\r\nimport {\r\n    Row,\r\n    Col,\r\n    Image,\r\n} from 'react-bootstrap';\r\n// import OwlCarousel from 'react-owl-carousel';\r\nimport Lottie from 'react-lottie';\r\n\r\nimport animationData from '../../../assets/json/loading.json';\r\nconst ImageTest = require('../../../assets/images/Ant-Man.png');\r\nconst LogoTest = require('../../../assets/images/AntMan-logo.png');\r\n\r\n\r\n\r\n\r\nfunction Pages(props) {\r\n\r\n    const [loadingPages, setLoadingPages] = useState(true);\r\n\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true, \r\n        animationData: animationData,\r\n        rendererSettings: {\r\n          preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        props.getFbData();\r\n        props.getInstaData();\r\n        setTimeout(() => {\r\n            setLoadingPages(false);\r\n        },2000);\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        if(props.fbData) {\r\n            console.log(\"Pages fb data =>\", props.fbData);\r\n        }\r\n    },[props.fbData]);\r\n    \r\n    useEffect(() => {\r\n        if(props.instaData) {\r\n            console.log(\"Pages insta Data =>\", props.instaData);\r\n        }\r\n    },[props.instaData]);\r\n\r\n    return (\r\n    <>\r\n        <Row>\r\n            {\r\n            props.title \r\n            ?\r\n                <p className=\"home-big-title\" style={props.titleStyling ? props.titleStyling : {} }>{props.title}</p>\r\n            :\r\n                <p className=\"home-big-title\">Pages Connected</p>\r\n            }\r\n        </Row>\r\n\r\n        <Row>\r\n\r\n            {\r\n            !loadingPages\r\n            ?\r\n                (\r\n                    <>\r\n                    <OwlCarousel margin={10} items={4}>\r\n                        {/* Render Fb Data */}\r\n                        {/* {props.fbData !== null && \r\n                            Object.entries(props.fbData).map( ([key, tab]) => \r\n                                tab.map((page,index) => \r\n                                <div key={index} onClick={() => props.selectSocialMediaPage(page,\"fb\",key)}>\r\n                                    <PageCard platform={\"fb\"} isConnectedPage={page.isConnected} namePage={page.name} idPage={page.idPage} picture={null} accessToken={page.access_token} status={key}  team={page.user} admins={page.admins} setLoadingPages={setLoadingPages} />\r\n                                </div>\r\n                        ))}\r\n                        */}\r\n\r\n                        {/* Render Insta data */}\r\n                        {/* {props.instaData !== null && \r\n                            Object.entries(props.instaData).map( ([key, tab]) => \r\n                                tab.map((page,index) => \r\n                                <div key={index} onClick={() => props.selectSocialMediaPage(page,\"insta\",key)}>\r\n                                    <PageCard platform={\"insta\"} isConnectedPage={page.isConnected} namePage={page.name} idPage={page.idPage} picture={page.imageUrl} accessToken={page.access_token} status={key} team={page.user} admins={page.admins} setLoadingPages={setLoadingPages}  />\r\n                                </div>\r\n                        ))} */}\r\n                    </OwlCarousel>\r\n                    </>\r\n                )\r\n            :\r\n                (\r\n                <div className=\"d-flex\" style={{ width: '100%' }}>\r\n                    <div className=\"m-auto\">\r\n                        <Lottie options={defaultOptions} width={200} />\r\n                    </div>\r\n                </div>\r\n                )\r\n            }\r\n        </Row>\r\n    </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        fbData : state.socialMediaR.fbData,\r\n        instaData : state.socialMediaR.instaData,\r\n        socialMediaPageSelected : state.socialMediaR.socialMediaPageSelected,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectSocialMediaPage,getFbData, getInstaData })(Pages);\r\n"]},"metadata":{},"sourceType":"module"}