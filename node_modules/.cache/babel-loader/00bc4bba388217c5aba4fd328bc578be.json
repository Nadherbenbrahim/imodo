{"ast":null,"code":"var _jsxFileName = \"/usr/work/smart_front_oussema/src/app/Home/AutoWizard/WizardIntentDetails.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { addGenericResponse, updateGenericResponse } from '../../../redux/actions/wizardActions';\nimport { host } from '../../../config';\nimport { Row, Col, Popover, Overlay, Modal, Form, Spinner, Image } from 'react-bootstrap';\nimport WizardMiracleInput from './WizardMiracleInput';\nimport ReactTooltip from 'react-tooltip';\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { IoIosArrowDown, IoIosArrowUp, IoIosClose } from 'react-icons/io';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport { MdAddCircleOutline } from 'react-icons/md';\nimport { ReactComponent as TrashIntent } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/images/home/trash-intent.svg\";\nimport { ReactComponent as TrashIntentWhite } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/images/home/TrashIntentWhite.svg\";\n\nfunction WizardIntentDetails(props) {\n  // All Props from WizardConfig : \n  let {\n    indexOfIntent,\n    intent,\n    setIntents,\n    selectedIntents,\n    // isExistingProject,\n    wizardExistingProjectIntents,\n    intentStatus\n  } = props; // Popup Config:\n\n  const swalWithBootstrapButtons = Swal.mixin({\n    customClass: {\n      confirmButton: 'wizard-pages-active-btn-alert'\n    },\n    buttonsStyling: false\n  }); // Generic:\n\n  const [GenericResponse, setGenericResponse] = useState('');\n  const [GenericTags, setGenericTags] = useState(false);\n  const [GenericEmojis, setGenericEmojis] = useState(false);\n  const [GenericKeyboard, setGenericKeyboard] = useState(false);\n  const [GenericBtnType, setGenericBtnType] = useState('web_url');\n  const [GenericBtnTitle, setGenericBtnTitle] = useState('');\n  const [GenericBtnValue, setGenericBtnValue] = useState('');\n  const [GenericBtns, setGenericBtns] = useState([]);\n\n  const resetGeneric = () => {\n    setGenericResponse('');\n    setGenericTags(false);\n    setGenericEmojis(false);\n    setGenericKeyboard(false);\n    setGenericBtnType('web_url');\n    setGenericBtnTitle('');\n    setGenericBtnValue('');\n    setGenericBtns([]);\n  };\n\n  const handleSaveGenericResponse = (intent, wizardIdProject) => {\n    handleUpdateModal(false);\n    let project = {\n      genericAnswer: GenericResponse,\n      intent: intent,\n      buttons: GenericBtns\n    };\n\n    if (GenericResponse === \"\") {\n      swalWithBootstrapButtons.fire({\n        title: 'Generic Response is empty !',\n        confirmButtonText: 'Okay'\n      });\n    } else if (intentState === 'save' && GenericResponse !== '') {\n      setSaveUpdateLoading(true);\n      props.addGenericResponse(project, wizardIdProject).then(() => {\n        setIntentState('update');\n        setSaveUpdateLoading(false);\n      }).catch(() => {\n        setSaveUpdateLoading(false);\n        swalWithBootstrapButtons.fire({\n          title: 'Error while saving the generic response. Try Again !',\n          confirmButtonText: 'Okay'\n        });\n      });\n    } else if (intentState === 'update' && GenericResponse !== '') {\n      setSaveUpdateLoading(true);\n      props.updateGenericResponse(project, wizardIdProject).then(() => {\n        setSaveUpdateLoading(false);\n      }).catch(() => {\n        setSaveUpdateLoading(false);\n        swalWithBootstrapButtons.fire({\n          title: 'Error while updating the generic response. Try Again !',\n          confirmButtonText: 'Okay'\n        });\n      });\n    }\n  }; // Specific:\n\n\n  const [SpecificResponse, SetSpecificResponse] = useState('');\n  const [SpecificKeyBoard, setSpecificKeyBoard] = useState(false);\n  const [SpecificEmoji, setSpecificEmoji] = useState(false);\n  const [SpecificTags, setSpecificTags] = useState(false);\n  const [SpecificBtnType, setSpecificType] = useState('web_url');\n  const [SpecificBtnTitle, setSpecificTitle] = useState('');\n  const [SpecificBtnValue, setSpecificValue] = useState('');\n  const [SpecificBtns, setSpecificBtns] = useState([]);\n  const [SpecificPopover, setSpecificPopover] = useState(false);\n  const [SpecificTarget, setSpecificTarget] = useState(null);\n  const SpecificRef = useRef(null);\n\n  const resetSpecific = () => {\n    setProductName('');\n    SetSpecificResponse('');\n    setSpecificTags(false);\n    setSpecificEmoji(false);\n    setSpecificKeyBoard(false);\n    setSpecificType('web_url');\n    setSpecificTitle('');\n    setSpecificValue('');\n    setSpecificBtns([]);\n  };\n\n  const handleSpecificPopover = event => {\n    setSpecificPopover(!SpecificPopover);\n    setSpecificTarget(event.target);\n  }; // Specific Update:\n\n\n  const [SpecificUpdateResponse, SetSpecificUpdateResponse] = useState('');\n  const [SpecificUpdateKeyBoard, setSpecificUpdateKeyBoard] = useState(false);\n  const [SpecificUpdateEmoji, setSpecificUpdateEmoji] = useState(false);\n  const [SpecificUpdateTags, setSpecificUpdateTags] = useState(false);\n  const [SpecificUpdateBtnType, setSpecificUpdateType] = useState('web_url');\n  const [SpecificUpdateBtnTitle, setSpecificUpdateTitle] = useState('');\n  const [SpecificUpdateBtnValue, setSpecificUpdateValue] = useState('');\n  const [SpecificUpdateBtns, setSpecificUpdateBtns] = useState([]);\n  const [SpecificUpdatePopover, setSpecificUpdatePopover] = useState(false);\n  const [SpecificUpdateTarget, setSpecificUpdateTarget] = useState(null);\n  const SpecificUpdateRef = useRef(null);\n\n  const resetUpdateSpecific = () => {\n    setSpecificUpdatePopover(false);\n    setSpecificUpdateTarget(null);\n    SetSpecificUpdateResponse('');\n    setSpecificUpdateKeyBoard(false);\n    setSpecificUpdateEmoji(false);\n    setSpecificUpdateTags(false);\n    setSpecificUpdateType('web_url');\n    setSpecificUpdateTitle('');\n    setSpecificUpdateValue('');\n    setSpecificUpdateBtns([]);\n  };\n\n  const handleSpecificUpdatePopover = (event, product) => {\n    // console.log(\"Product to update =>\", product);\n    setProductUpdateName(product.product);\n    SetSpecificUpdateResponse(product.preAnswer);\n    setSpecificUpdateBtns(product.buttons);\n    setSpecificUpdatePopover(!SpecificUpdatePopover);\n    setSpecificUpdateTarget(event.target);\n  }; // Products\n\n\n  const [productName, setProductName] = useState('');\n  const [productUpdateName, setProductUpdateName] = useState('');\n  const [savedProductToSend, setSavedProductToSend] = useState('');\n  const [products, setProducts] = useState([]); // Categories\n\n  const [newCategory, setNewCategory] = useState('');\n  const [categorySelected, setCategorySelected] = useState('');\n  const [allCategories, setAllCategories] = useState([]);\n  const [CategorieModal, setCategorieModal] = useState(false);\n  const [showModalInput, setShowModalInput] = useState(false);\n\n  const handleCategoriesModal = () => {\n    setSpecificPopover(false);\n    setCategorieModal(!CategorieModal);\n  }; // other:\n\n\n  const [saveUpdateLoading, setSaveUpdateLoading] = useState(false);\n  const [intentState, setIntentState] = useState('save');\n  const [updateModal, handleUpdateModal] = useState(false);\n  const [isOpen, setIsOpen] = useState(intentStatus === \"old\" ? false : true); // Categories & Products functions :\n\n  const addNewProduct = idProjet => {\n    // First update api : entity === categorie :\n    let productToSend = {\n      idPage: props.wizardSelectedPage.id,\n      typePage: props.wizardSelectedPage.platform,\n      entity: productName,\n      intent: props.intent.name,\n      genericAnswer: GenericResponse,\n      specificAnswer: SpecificResponse,\n      categorie: productName,\n      buttons: SpecificBtns\n    };\n\n    if (productName === \"\") {\n      swalWithBootstrapButtons.fire({\n        title: 'Product Name is empty !',\n        confirmButtonText: 'Okay'\n      });\n    } else if (SpecificResponse === \"\") {\n      swalWithBootstrapButtons.fire({\n        title: 'Specific Response is empty !',\n        confirmButtonText: 'Okay'\n      });\n    } else {\n      axios.put(`${host}/api/v1/secure/project/firstupdate/${idProjet}`, productToSend, {\n        headers: {\n          'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n        }\n      }).then(res => {\n        console.log('first update response =>', res.data.data);\n\n        if (res.data.data === \"not exist\") {\n          // Call the categories api :\n          axios.get(`${host}/api/v1/secure/project/get/entitiesproject/${props.wizardSelectedPage.platform}/${props.wizardSelectedPage.id}`).then(res => {\n            console.log(\"get categories for modal /get/entitiesproject =>\", res.data.data); // Eliminate default categories:\n\n            let categories = res.data.data;\n\n            if (categories.length > 0) {\n              categories.map((cat, index) => cat.default === true && categories.splice(index, 1)); // console.log(\"Result after filtring the cats\", categories);\n            }\n\n            ;\n            setAllCategories(categories);\n            setSpecificPopover(!SpecificPopover);\n            setSavedProductToSend(productToSend);\n            setCategorieModal(true); // ==> Update the products array from addNewProductViaModal() <==\n          }).catch(err => console.log(\"addNewProduct WizardIntentDetails =>\", err));\n        } else if (res.data.data === \"exist\") {\n          swalWithBootstrapButtons.fire({\n            title: 'Product already exists !',\n            confirmButtonText: 'Okay'\n          });\n        } else {\n          // Update the products array :\n          let newSelectedIntents = [...selectedIntents];\n          newSelectedIntents.map((intent, index) => {\n            if (index === props.indexOfIntent) {\n              // intent.products = res.data.data.intents[indexOfIntent].answer\n              setProducts([]);\n              setProducts(res.data.data.intents[indexOfIntent].answer);\n            }\n\n            ;\n          });\n          setIntents(newSelectedIntents); // Reset\n\n          setSpecificPopover(!SpecificPopover);\n          resetSpecific();\n        }\n\n        ;\n      }).catch(err => console.log(\"Wizard Intent Detail addNewProduct fct first Update API err ===>\", err));\n    }\n  };\n\n  const addNewProductViaModal = idProjet => {\n    // Send the update with the new category name :) :\n    let productToSend = savedProductToSend;\n    productToSend.categorie = categorySelected; // console.log(\"sendinnng product =>\",productToSend);\n    // console.log(\"Category Selected To sennnnd\", categorySelected,\" and product =>>>\", productToSend);\n\n    return axios.put(host + `/api/v1/secure/project/update/${idProjet}`, productToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('UPDATE API response =>', res.data); // set the products from the update api :\n\n      let newSelectedIntents = [...selectedIntents];\n      newSelectedIntents.map((_, index) => {\n        if (index === props.indexOfIntent) {\n          //intent.products = res.data.data.intents[indexOfIntent].answer\n          setProducts([]);\n          setProducts(res.data.data.intents[indexOfIntent].answer);\n        }\n\n        ;\n      });\n      setIntents(newSelectedIntents); // Reset\n\n      resetSpecific();\n      setCategorySelected('');\n      setCategorieModal(false);\n    }).catch(err => console.log(\"addNewProductViaModal => api update err =>> \", err));\n  };\n\n  const updateProduct = idProjet => {\n    let productToSend = {\n      idPage: props.wizardSelectedPage.id,\n      typePage: props.wizardSelectedPage.platform,\n      entity: productUpdateName,\n      intent: props.intent.name,\n      genericAnswer: GenericResponse,\n      specificAnswer: SpecificUpdateResponse,\n      buttons: SpecificUpdateBtns // categorie: productUpdateName,\n\n    };\n    axios.put(host + `/api/v1/secure/project/entitiesupdate/${props.wizardIdProject}`, productToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('updateProduct API response =>', res.data); // set the products from the update api :\n\n      let newSelectedIntents = [...selectedIntents];\n      newSelectedIntents.map((_, index) => {\n        if (index === props.indexOfIntent) {\n          //intent.products = res.data.data.intents[indexOfIntent].answer\n          setProducts([]);\n          setProducts(res.data.data.intents[indexOfIntent].answer);\n        }\n\n        ;\n      });\n      setIntents(newSelectedIntents);\n      resetUpdateSpecific(); // setSpecificUpdatePopover(false);\n    }).catch(err => {\n      console.log(\"updateProduct API error =>> \", err);\n      swalWithBootstrapButtons.fire({\n        title: 'Error while updating the product. Try Again!',\n        confirmButtonText: 'Okay'\n      });\n    });\n  };\n\n  const deleteProduct = (product, index) => {\n    let newProducts = [...products];\n    let objectToSend = {\n      intent: intent.name,\n      answer: product._id\n    };\n    console.log(\"To delete That\", objectToSend);\n    axios.put(host + `/api/v1/secure/project/${props.wizardIdProject}/remove/entity`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('deleteProduct API response =>', res.data);\n      newProducts.splice(index, 1);\n      setProducts(newProducts);\n    }).catch(err => {\n      console.log(\"deleteProduct api err =>> \", err);\n      swalWithBootstrapButtons.fire({\n        title: 'Error while deleting the product. Try Again!',\n        confirmButtonText: 'Okay'\n      });\n    });\n  };\n\n  const pushNewCategory = () => {\n    let categoryToPush = {\n      name: newCategory\n    };\n    setAllCategories(categories => [...categories, categoryToPush]);\n    setCategorySelected(categoryToPush.name); // Send the update with the new category name :) :\n\n    let productToSend = savedProductToSend;\n    productToSend.categorie = newCategory; // console.log(\"sendinnng product =>\",productToSend);\n    // console.log(\"Category Selected To sennnnd\", categorySelected,\" and product =>>>\", productToSend);\n\n    return axios.put(host + `/api/v1/secure/project/update/${props.wizardIdProject}`, productToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('pushNewCategory via Modal project/update API response =>', res.data); // set the products from the update api :\n\n      let newSelectedIntents = [...selectedIntents];\n      newSelectedIntents.map((_, index) => {\n        if (index === props.indexOfIntent) {\n          setProducts([]);\n          setProducts(res.data.data.intents[indexOfIntent].answer);\n        }\n\n        ;\n      });\n      setIntents(newSelectedIntents); // Reset\n\n      resetSpecific();\n      setCategorySelected('');\n      setShowModalInput(false);\n      setNewCategory('');\n      setCategorieModal(false);\n    }).catch(err => console.log(\"pushNewCategory via Modal project/update api error =>> \", err));\n  };\n\n  const deleteIntent = (intent, index) => {\n    // console.log(\"U want to delete this intent =>\", intent);\n    // intent: nom intent\n    let newIntents = [...selectedIntents];\n    let objectToSend = {\n      intent: intent.name\n    };\n    console.log(\"i'm gonna delete intent ya nour with =>\", objectToSend);\n    axios.put(host + `/api/v1/secure/project/intents/remove/${props.wizardIdProject}`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('deleteIntent API response =>', res.data);\n      newIntents.splice(index, 1);\n      setIntents(newIntents);\n    }).catch(err => {\n      console.log(\"deleteIntent api err =>> \", err);\n      swalWithBootstrapButtons.fire({\n        title: 'Error while deleting the intent. Try Again!',\n        confirmButtonText: 'Okay'\n      });\n    }); // setIntents(selectedIntents.filter( intent =>( intent !== props.intent.name )))\n  };\n\n  const renderUpdateModal = () => /*#__PURE__*/React.createElement(Modal, {\n    show: updateModal,\n    size: \"sm\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 12,\n    className: \"d-flex mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IoIosClose, {\n    color: \"#B4B4B4\",\n    size: 30,\n    className: \"ml-auto\",\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      handleUpdateModal(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: 12,\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mx-auto mb-3 confirm-modal-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 17\n    }\n  }, \"Your update will be live and visible for your user\")), /*#__PURE__*/React.createElement(Col, {\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"team-invite-btn text-center px-3 mr-2\",\n    onClick: () => handleSaveGenericResponse(props.intent.name, props.wizardIdProject),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 25\n    }\n  }, \"Yes\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"team-invite-btn-no text-center px-3 ml-2\",\n    onClick: () => {\n      handleUpdateModal(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 25\n    }\n  }, \"No\"))))))));\n\n  useEffect(() => {\n    if (wizardExistingProjectIntents && intentStatus === \"old\") {\n      if (wizardExistingProjectIntents[indexOfIntent]) {\n        setGenericResponse(wizardExistingProjectIntents[indexOfIntent].hasOwnProperty('genericAnswer') ? wizardExistingProjectIntents[indexOfIntent].genericAnswer : \"\");\n        setGenericBtns(wizardExistingProjectIntents[indexOfIntent].hasOwnProperty('buttons') ? wizardExistingProjectIntents[indexOfIntent].buttons : []);\n        setProducts(wizardExistingProjectIntents[indexOfIntent].hasOwnProperty('answer') ? wizardExistingProjectIntents[indexOfIntent].answer : []);\n      }\n\n      setIntentState('update');\n    }\n\n    return () => {};\n  }, [wizardExistingProjectIntents]);\n  return /*#__PURE__*/React.createElement(Col, {\n    lg: 6,\n    className: \"mb-3\",\n    key: indexOfIntent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column wizard-config-intents-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 21\n    }\n  }, intent.name.toLowerCase() === \"quiz\" ? /*#__PURE__*/React.createElement(Row, {\n    className: isOpen ? \"justify-content-between mx-0 p-0 wizard-config-intents-top-row-quiz pl-2 pr-1\" : \"justify-content-between mx-0 p-0 wizard-config-intents-top-row-quiz-closed pl-2 pr-1\",\n    style: {\n      background: '#B0BBD0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-auto wizard-config-intent-title p-2\",\n    style: {\n      color: '#ffffff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 33\n    }\n  }, intent.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TrashIntentWhite, {\n    width: 16,\n    height: 16,\n    className: \"m-auto\",\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => deleteIntent(intent, indexOfIntent),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 33\n    }\n  }), isOpen ? /*#__PURE__*/React.createElement(IoIosArrowUp, {\n    color: \"#ffffff\",\n    size: 17,\n    className: \"ml-1 mt-auto mb-2\",\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => setIsOpen(!isOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 33\n    }\n  }) : /*#__PURE__*/React.createElement(IoIosArrowDown, {\n    color: \"#ffffff\",\n    size: 17,\n    className: \"ml-1 mt-auto mb-2\",\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => setIsOpen(!isOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 33\n    }\n  }))) : /*#__PURE__*/React.createElement(Row, {\n    className: isOpen ? \"justify-content-between mx-0 p-0 wizard-config-intents-top-row pl-2 pr-1\" : \"justify-content-between mx-0 p-0 wizard-config-intents-top-row-closed pl-2 pr-1\",\n    style: {\n      background: Math.ceil((indexOfIntent + 1) / 2) % 2 != 0 && (indexOfIntent + 1) % 2 != 0 ? '#E4E6EB' : Math.ceil((indexOfIntent + 1) / 2) % 2 != 0 && (indexOfIntent + 1) % 2 == 0 ? '#E5007D' : Math.ceil((indexOfIntent + 1) / 2) % 2 == 0 && (indexOfIntent + 1) % 2 != 0 ? '#E5007D' : Math.ceil((indexOfIntent + 1) / 2) % 2 == 0 && (indexOfIntent + 1) % 2 == 0 && '#E4E6EB'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-auto wizard-config-intent-title p-2\",\n    style: {\n      color: Math.ceil((indexOfIntent + 1) / 2) % 2 != 0 && (indexOfIntent + 1) % 2 != 0 ? '#818E94' : Math.ceil((indexOfIntent + 1) / 2) % 2 != 0 && (indexOfIntent + 1) % 2 == 0 ? '#ffffff' : Math.ceil((indexOfIntent + 1) / 2) % 2 == 0 && (indexOfIntent + 1) % 2 != 0 ? '#ffffff' : Math.ceil((indexOfIntent + 1) / 2) % 2 == 0 && (indexOfIntent + 1) % 2 == 0 && '#818E94'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 33\n    }\n  }, intent.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 29\n    }\n  }, Math.ceil((indexOfIntent + 1) / 2) % 2 != 0 && (indexOfIntent + 1) % 2 != 0 ? /*#__PURE__*/React.createElement(TrashIntent, {\n    width: 16,\n    height: 16,\n    className: \"m-auto\",\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => deleteIntent(intent, indexOfIntent),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 37\n    }\n  }) : Math.ceil((indexOfIntent + 1) / 2) % 2 != 0 && (indexOfIntent + 1) % 2 == 0 ? /*#__PURE__*/React.createElement(TrashIntentWhite, {\n    width: 16,\n    height: 16,\n    className: \"m-auto\",\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => deleteIntent(intent, indexOfIntent),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 37\n    }\n  }) : Math.ceil((indexOfIntent + 1) / 2) % 2 == 0 && (indexOfIntent + 1) % 2 != 0 ? /*#__PURE__*/React.createElement(TrashIntentWhite, {\n    width: 16,\n    height: 16,\n    className: \"m-auto\",\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => deleteIntent(intent, indexOfIntent),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 37\n    }\n  }) : Math.ceil((indexOfIntent + 1) / 2) % 2 == 0 && (indexOfIntent + 1) % 2 == 0 && /*#__PURE__*/React.createElement(TrashIntent, {\n    width: 16,\n    height: 16,\n    className: \"m-auto\",\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => deleteIntent(intent, indexOfIntent),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 37\n    }\n  }), isOpen ? /*#__PURE__*/React.createElement(IoIosArrowUp, {\n    color: Math.ceil((indexOfIntent + 1) / 2) % 2 != 0 && (indexOfIntent + 1) % 2 != 0 ? '#818E94' : Math.ceil((indexOfIntent + 1) / 2) % 2 != 0 && (indexOfIntent + 1) % 2 == 0 ? '#ffffff' : Math.ceil((indexOfIntent + 1) / 2) % 2 == 0 && (indexOfIntent + 1) % 2 != 0 ? '#ffffff' : Math.ceil((indexOfIntent + 1) / 2) % 2 == 0 && (indexOfIntent + 1) % 2 == 0 && '#818E94',\n    size: 17,\n    className: \"ml-1 mt-auto mb-2\",\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => setIsOpen(!isOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 33\n    }\n  }) : /*#__PURE__*/React.createElement(IoIosArrowDown, {\n    color: Math.ceil((indexOfIntent + 1) / 2) % 2 != 0 && (indexOfIntent + 1) % 2 != 0 ? '#818E94' : Math.ceil((indexOfIntent + 1) / 2) % 2 != 0 && (indexOfIntent + 1) % 2 == 0 ? '#ffffff' : Math.ceil((indexOfIntent + 1) / 2) % 2 == 0 && (indexOfIntent + 1) % 2 != 0 ? '#818E94' : Math.ceil((indexOfIntent + 1) / 2) % 2 == 0 && (indexOfIntent + 1) % 2 == 0 && '#ffffff',\n    size: 17,\n    className: \"ml-1 mt-auto mb-2\",\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => setIsOpen(!isOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 33\n    }\n  }))))), isOpen && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(WizardMiracleInput, {\n    label: \"Generic Response\",\n    response: GenericResponse,\n    handleResponse: setGenericResponse,\n    showTags: GenericTags,\n    handleTags: setGenericTags,\n    showEmojis: GenericEmojis,\n    handleEmojis: setGenericEmojis,\n    showKeyboard: GenericKeyboard,\n    handleKeyboard: setGenericKeyboard,\n    BtnType: GenericBtnType,\n    handleBtnType: setGenericBtnType,\n    BtnTitle: GenericBtnTitle,\n    handleBtnTitle: setGenericBtnTitle,\n    BtnValue: GenericBtnValue,\n    handleBtnValue: setGenericBtnValue,\n    Btns: GenericBtns,\n    handleBtns: setGenericBtns,\n    reset: resetGeneric,\n    platform: props.wizardSelectedPage.platform,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-2 mx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ml-auto remaining-text mb-1 mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 29\n    }\n  }, \"Remaining characters:\", 640 - GenericResponse.length)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 25\n    }\n  }, intentState === 'save' ? !saveUpdateLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => handleSaveGenericResponse(props.intent.name, props.wizardIdProject),\n    className: \"ml-auto mb-2 wizard-config-update-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 33\n    }\n  }, \"Save\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex ml-auto  mb-2 py-2 px-4 wizard-config-update-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"grow\",\n    size: \"sm\",\n    variant: \"light\",\n    className: \"m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 37\n    }\n  })) : !saveUpdateLoading ?\n  /*#__PURE__*/\n  // <div onClick={() => handleSaveGenericResponse(props.intent.name,props.wizardIdProject)} className=\"ml-auto  mb-2  wizard-config-update-btn\">\n  React.createElement(\"div\", {\n    onClick: () => handleUpdateModal(!updateModal),\n    className: \"ml-auto  mb-2  wizard-config-update-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 33\n    }\n  }, \"Update\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex ml-auto  mb-2 py-2 px-4 wizard-config-update-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"grow\",\n    size: \"sm\",\n    variant: \"light\",\n    className: \"m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 37\n    }\n  })), updateModal && renderUpdateModal()), intentState === \"save\" && /*#__PURE__*/React.createElement(Col, {\n    lg: 12,\n    className: \"mx-auto mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 5,\n    className: \"d-flex wizard-config-add-product-box mb-3 py-1 px-0\",\n    style: {\n      cursor: 'not-allowed',\n      borderColor: '#B4B4B4'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-auto d-flex justify-content-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(MdAddCircleOutline, {\n    className: \"m-auto\",\n    color: \"#B4B4B4\",\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"wizard-config-add-product-name my-auto ml-3\",\n    style: {\n      fontFamily: 'Poppins SemiBold',\n      fontSize: '13px',\n      color: '#B4B4B4'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 41\n    }\n  }, \"Add product\"))))), intentState === 'update' && /*#__PURE__*/React.createElement(Col, {\n    lg: 12,\n    className: \"mx-auto mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 29\n    }\n  }, products.length > 0 && products.map((product, index) => product.product.length > 0 && /*#__PURE__*/React.createElement(Col, {\n    key: index,\n    lg: 5,\n    className: product.default ? \"d-flex flex-row mb-3 py-1  wizard-config-product-box-exist\" : \"d-flex flex-row mb-3 py-1  wizard-config-product-box \",\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 37\n    }\n  }, product.product.length > 11 ? /*#__PURE__*/React.createElement(\"p\", {\n    onClick: e => handleSpecificUpdatePopover(e, product),\n    \"data-for\": \"entityTip\",\n    \"data-tip\": product.product,\n    className: product.default ? \"m-auto wizard-config-product-name-exist\" : \"m-auto wizard-config-product-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 45\n    }\n  }, product.product.substring(0, 9), \"...\") : /*#__PURE__*/React.createElement(\"p\", {\n    onClick: e => handleSpecificUpdatePopover(e, product),\n    className: product.default ? \"m-auto wizard-config-product-name-exist\" : \"m-auto wizard-config-product-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 45\n    }\n  }, product.product), /*#__PURE__*/React.createElement(AiOutlineCloseCircle, {\n    className: \"my-auto ml-1\",\n    color: product.default ? \"#fff\" : \"#F49BCC\",\n    size: \"20\",\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => deleteProduct(product, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(ReactTooltip, {\n    id: \"entityTip\",\n    textColor: \"#fff\",\n    backgroundColor: \"#E5007D\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: 5,\n    onClick: handleSpecificPopover,\n    className: \"d-flex wizard-config-add-product-box mb-3 py-1 px-0\",\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" m-auto  d-flex justify-content-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(MdAddCircleOutline, {\n    className: \"m-auto\",\n    color: \"#4080FC\",\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"wizard-config-add-product-name my-auto ml-3\",\n    style: {\n      fontFamily: 'Poppins SemiBold',\n      fontSize: '13px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 41\n    }\n  }, \"Add product\")))))))), /*#__PURE__*/React.createElement(\"div\", {\n    ref: SpecificRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Overlay, {\n    show: SpecificPopover,\n    target: SpecificTarget,\n    container: SpecificRef.current,\n    placement: indexOfIntent % 2 !== 0 ? \"left\" : \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Popover, {\n    id: \"popover-specific\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Popover.Content, {\n    className: \"p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IoIosClose, {\n    className: \"ml-auto\",\n    color: '#9F9F9F',\n    size: '25',\n    onClick: handleSpecificPopover,\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mx-2 px-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"wizard-config-textarea-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 33\n    }\n  }, \"Product name\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setProductName(e.target.value),\n    value: productName,\n    className: \"wizard-config-product-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(WizardMiracleInput, {\n    label: \"Specific Response\",\n    response: SpecificResponse,\n    handleResponse: SetSpecificResponse,\n    showTags: SpecificTags,\n    handleTags: setSpecificTags,\n    showEmojis: SpecificEmoji,\n    handleEmojis: setSpecificEmoji,\n    showKeyboard: SpecificKeyBoard,\n    handleKeyboard: setSpecificKeyBoard,\n    BtnType: SpecificBtnType,\n    handleBtnType: setSpecificType,\n    BtnTitle: SpecificBtnTitle,\n    handleBtnTitle: setSpecificTitle,\n    BtnValue: SpecificBtnValue,\n    handleBtnValue: setSpecificValue,\n    Btns: SpecificBtns,\n    handleBtns: setSpecificBtns,\n    reset: resetSpecific,\n    platform: props.wizardSelectedPage.platform,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex mx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ml-auto mr-2 remaining-text mb-1 mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 33\n    }\n  }, \"Remaining characters:\", 640 - SpecificResponse.length)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr-2 px-2  d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-auto mb-2  wizard-config-update-btn\",\n    onClick: () => addNewProduct(props.wizardIdProject),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 33\n    }\n  }, \"Add\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    ref: SpecificUpdateRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 792,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Overlay, {\n    show: SpecificUpdatePopover,\n    target: SpecificUpdateTarget,\n    container: SpecificUpdateRef.current,\n    placement: indexOfIntent % 2 !== 0 ? \"left\" : \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Popover, {\n    id: \"popover-specific\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 799,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Popover.Content, {\n    className: \"p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IoIosClose, {\n    className: \"ml-auto\",\n    color: '#9F9F9F',\n    size: '25',\n    onClick: resetUpdateSpecific,\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mx-2 px-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"wizard-config-textarea-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 33\n    }\n  }, \"Product name\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setProductUpdateName(e.target.value),\n    value: productUpdateName,\n    disabled: true,\n    style: {\n      cursor: 'not-allowed'\n    },\n    className: \"wizard-config-product-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(WizardMiracleInput, {\n    label: \"Update Specific Response\",\n    response: SpecificUpdateResponse,\n    handleResponse: SetSpecificUpdateResponse,\n    showTags: SpecificUpdateKeyBoard,\n    handleTags: setSpecificUpdateKeyBoard,\n    showEmojis: SpecificUpdateEmoji,\n    handleEmojis: setSpecificUpdateEmoji,\n    showKeyboard: SpecificUpdateTags,\n    handleKeyboard: setSpecificUpdateTags,\n    BtnType: SpecificUpdateBtnType,\n    handleBtnType: setSpecificUpdateType,\n    BtnTitle: SpecificUpdateBtnTitle,\n    handleBtnTitle: setSpecificUpdateTitle,\n    BtnValue: SpecificUpdateBtnValue,\n    handleBtnValue: setSpecificUpdateValue,\n    Btns: SpecificUpdateBtns,\n    handleBtns: setSpecificUpdateBtns,\n    reset: resetUpdateSpecific,\n    platform: props.wizardSelectedPage.platform,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex mx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ml-auto mr-2 remaining-text mb-1 mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 33\n    }\n  }, \"Remaining characters:\", 640 - SpecificResponse.length)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr-2 px-2 d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-auto mb-2  wizard-config-update-btn\",\n    onClick: () => updateProduct(props.wizardIdProject),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 33\n    }\n  }, \"Update\")))))), /*#__PURE__*/React.createElement(Modal, {\n    show: CategorieModal,\n    onHide: handleCategoriesModal,\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IoIosClose, {\n    className: \"ml-auto mr-3\",\n    color: '#9F9F9F',\n    size: '28',\n    onClick: handleCategoriesModal,\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"m-auto wizard-config-intent-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 25\n    }\n  }, \"Please specify the category\")), /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    lg: 10,\n    className: \"d-flex justify-content-between p-0 mx-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 8,\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 29\n    }\n  }, showModalInput && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"mr-auto w-100 my-auto add-new-category-input-container\",\n    onChange: e => setNewCategory(e.target.value),\n    value: newCategory // onKeyDown={(e) => e.key === 'Enter' && pushNewCategory()}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: 4,\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 29\n    }\n  }, !showModalInput && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ml-auto my-auto wizard-config-intent-name\",\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => setShowModalInput(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 866,\n      columnNumber: 33\n    }\n  }, \"Create new\"))), /*#__PURE__*/React.createElement(Col, {\n    lg: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 873,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 876,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 877,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    lg: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 879,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"d-flex w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 880,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"wizard-config-intent-title\",\n    as: \"select\",\n    disabled: showModalInput || allCategories.length === 0,\n    onChange: e => setCategorySelected(e.target.value),\n    value: categorySelected,\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    className: \"wizard-config-intent-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 889,\n      columnNumber: 37\n    }\n  }, \"Choose Category...\"), allCategories.length > 0 && allCategories.map((category, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    className: \"wizard-config-intent-title\",\n    value: category.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 893,\n      columnNumber: 41\n    }\n  }, category.name))))), /*#__PURE__*/React.createElement(Col, {\n    lg: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 899,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 902,\n      columnNumber: 21\n    }\n  }, showModalInput ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-auto mb-2 py-3 px-4 wizard-config-update-btn\",\n    style: {\n      backgroundColor: '#009EE3',\n      cursor: 'pointer'\n    },\n    onClick: () => pushNewCategory(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 905,\n      columnNumber: 25\n    }\n  }, \"Create\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-auto mb-2 py-3 px-4 wizard-config-update-btn\",\n    style: {\n      backgroundColor: allCategories.length > 0 && categorySelected ? '#009EE3' : '#707070',\n      cursor: allCategories.length > 0 && categorySelected ? 'pointer' : 'not-allowed'\n    },\n    onClick: () => allCategories.length > 0 && categorySelected ? addNewProductViaModal(props.wizardIdProject) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 913,\n      columnNumber: 25\n    }\n  }, \"Add\")))));\n}\n\nconst mapStateToProps = state => ({\n  wizardIdProject: state.wizardR.wizardIdProject,\n  wizardIntentType: state.wizardR.wizardIntentType,\n  wizardSelectedPage: state.wizardR.wizardSelectedPage,\n  wizardSelectedPost: state.wizardR.wizardSelectedPost,\n  wizardExistingProjectIntents: state.wizardR.wizardExistingProjectIntents // wizardStep: state.wizardR.wizardStep,\n\n});\n\nexport default connect(mapStateToProps, {\n  addGenericResponse,\n  updateGenericResponse\n})(WizardIntentDetails);\n/**\r\n *\r\n * \r\n * \r\n *  {\r\n        products.length > 0 &&\r\n        products[props.indexOfIntent].products.map((product,index) => \r\n            <Col key={index} lg={5} className={product.default ? \"d-flex flex-row mb-3  wizard-config-product-box-exist\" : \"d-flex flex-row mb-3  wizard-config-product-box \"}>\r\n                {\r\n                    product.product.length > 8\r\n                    ?\r\n                    <p data-for='entityTip' data-tip={product.product} className=\"m-auto wizard-config-product-name\">{product.product.substring(0,7)}...</p>\r\n                    :\r\n                    <p className={product.default ? \"m-auto wizard-config-product-name-exist\" : \"m-auto wizard-config-product-name\"}>\r\n                        {product.product}\r\n                    </p>\r\n                }\r\n                <AiOutlineCloseCircle className=\"my-auto ml-1\" color={\"#F49BCC\"} size={\"20\"} style={{cursor: 'pointer'}} onClick={() => deleteProduct(product,index)} />\r\n                <ReactTooltip id='entityTip' textColor='#fff' backgroundColor='#E5007D' />\r\n            </Col> \r\n        )\r\n    }  \r\n * \r\n * {\r\n    products.length > 0 &&\r\n    products.map((product,index) => \r\n\r\n        <Col key={index} lg={5} className=\"d-flex flex-row mb-3  wizard-config-product-box \">\r\n            {\r\n                product.entity.length > 8\r\n                ?\r\n                <p data-for='entityTip' data-tip={product.entity} className=\"m-auto wizard-config-product-name\">{product.entity.substring(0,7)}...</p>\r\n                :\r\n                <p className=\"m-auto wizard-config-product-name\">{product.entity}</p>\r\n            }\r\n            <AiOutlineCloseCircle className=\"my-auto ml-1\" color={\"#F49BCC\"} size={\"20\"} style={{cursor: 'pointer'}} onClick={() => deleteProduct(product,index)} />\r\n            <ReactTooltip id='entityTip' textColor='#fff' backgroundColor='#E5007D' />\r\n        </Col> \r\n    )\r\n}   \r\n* \r\n * \r\n * \r\n * Generic Input\r\n <div className=\"mr-2 ml-2 mt-2 mb-2\">\r\n <label className=\"wizard-config-textarea-label\">Generic Response</label>\r\n <Col lg={12}>\r\n     <Row className=\"d-flex mb-1\">\r\n         <div className=\"d-flex mr-2\">\r\n             <Image src={showGenericTags ? BALISE_ICON_ACTIVE : BALISE_ICON} onClick={handleGenericTagsPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '19px', cursor: 'pointer'}} />    \r\n         </div>                                \r\n\r\n         <div className=\"d-flex mr-2\">\r\n             <Image src={showEmojiPickerGeneric ? EMO_ICON_ACTIVE : EMO_ICON} onClick={handleGenericEmojiPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '18px', cursor: 'pointer'}} />\r\n         </div>\r\n\r\n         <div className=\"d-flex mr-2\">\r\n             <Image src={showKeyBoardGeneric ? LETTER_ICON_ACTIVE : LETTER_ICON} onClick={handleGenericKeyboardPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '21px', cursor: 'pointer'}} />\r\n             \r\n             {showKeyBoardGeneric &&\r\n                 <div className=\"wizard-config-keyboard-container\">\r\n                     <Keyboard onChange={(input) => handleArabicKeyboardChange(input,\"generic\")} onKeyPress={(button) => onKeyPress(button,\"generic\")} layout={layout} />\r\n                 </div>\r\n             }\r\n             {showEmojiPickerGeneric &&\r\n                 <div className=\"wizard-config-emoji-container\" >\r\n                     <Picker onEmojiClick={(e,obj) => onEmojiClick(e,obj,\"generic\")} />\r\n                 </div>\r\n             }\r\n         </div>\r\n     </Row>\r\n </Col>\r\n <textarea onChange={(e) => setGenericResponse(e.target.value)} onFocus={() => console.log(\"Hey I'm Focused\")} value={genericResponse} className=\"wizard-config-textarea\" rows=\"5\"/>\r\n</div>\r\n\r\n\r\n\r\n Generic Tags modal \r\n<Modal show={showGenericTags} size=\"sm\" centered>\r\n<Row className=\"d-flex w-100\">\r\n    <IoIosClose className=\"ml-auto my-auto pt-1\" color={'#9F9F9F'} size={30} onClick={() => setShowGenericTags(false)} style={{cursor: 'pointer'}} />\r\n</Row>\r\n\r\n<Row className=\"d-flex w-100\">\r\n    <h3 className=\"m-auto wizard-config-intent-title\">Choose one tag variable</h3>\r\n</Row>\r\n\r\n<Modal.Body>  \r\n    <Row className=\"d-flex\">\r\n        <Col xs={12} className=\"m-auto d-flex\">\r\n            <p className=\"m-auto wizard-config-tag\" onClick={() => pushSelectedTag('##FIRST_NAME##',\"generic\")}>First Name</p>\r\n        </Col>\r\n        <Col xs={12} className=\"m-auto d-flex\">\r\n            <p className=\"m-auto wizard-config-tag\" onClick={() => pushSelectedTag('##LAST_NAME##',\"generic\")}>Last Name</p>\r\n        </Col>\r\n        <Col xs={12} className=\"m-auto d-flex\">\r\n            <p className=\"m-auto wizard-config-tag\" onClick={() => pushSelectedTag('##FULL_NAME##',\"generic\")}>Full Name</p>\r\n        </Col>\r\n        <Col xs={12} className=\"m-auto d-flex\">\r\n            <p className=\"m-auto wizard-config-tag\" onClick={() => pushSelectedTag('##PAGE_NAME##',\"generic\")}>Page Name</p>\r\n        </Col>\r\n    </Row>\r\n</Modal.Body>\r\n</Modal>\r\n\r\n  FUNCTIONS \r\n    // Generic :\r\n    const handleGenericTagsPopover = (event) => {\r\n        setShowEmojiPickerGeneric(false);\r\n        setShowKeyBoardGeneric(false);\r\n        setShowGenericTags(!showGenericTags);\r\n        setTargetGenericTags(event.target);\r\n\r\n        //Specific\r\n        setShowSpecificTags(false);\r\n        setShowEmojiPicker(false);\r\n        setShowKeyBoard(false);\r\n    };\r\n\r\n    const handleGenericKeyboardPopover = () => {\r\n        setShowEmojiPickerGeneric(false);\r\n        setShowGenericTags(false);\r\n        setShowKeyBoardGeneric(!showKeyBoardGeneric);\r\n\r\n        //Specific\r\n        setShowSpecificTags(false);\r\n        setShowEmojiPicker(false);\r\n        setShowKeyBoard(false);\r\n    };\r\n\r\n    const handleGenericEmojiPopover = () => {\r\n        setShowGenericTags(false);\r\n        setShowKeyBoardGeneric(false);\r\n        setShowEmojiPickerGeneric(!showEmojiPickerGeneric);\r\n\r\n        //Specific\r\n        setShowSpecificTags(false);\r\n        setShowEmojiPicker(false);\r\n        setShowKeyBoard(false);\r\n    };\r\n\r\n\r\n\r\n     Specific Tags Popover \r\n    <div ref={refSepecificTags}>\r\n    <Overlay\r\n        show={showSpecificTags}\r\n        target={targetSpecificTags}\r\n        placement=\"top\"\r\n        container={refSepecificTags.current}\r\n        containerPadding={20}\r\n    >\r\n        <Row className=\"d-flex\" style={{ width: '200px', height: '200px', background: '#fff', borderRadius: '0.3rem', marginBottom: \"9px\"}}>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\">First Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\">Last Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\">Full Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\">Page Name</p>\r\n            </Col>\r\n        </Row>\r\n    </Overlay>\r\n</div>\r\n\r\n\r\n const handleSpecificKeyboardPopover = () => {\r\n        // Generic\r\n        setShowEmojiPickerGeneric(false);\r\n        setShowKeyBoardGeneric(false);\r\n        setShowGenericTags(false);\r\n        \r\n        //Specific\r\n        setShowSpecificTags(false);\r\n        setShowEmojiPicker(false);\r\n        setShowKeyBoard(!showKeyBoard);\r\n    };\r\n\r\n    const handleSpecificEmojiPopover = () => {\r\n        // Generic\r\n        setShowEmojiPickerGeneric(false);\r\n        setShowKeyBoardGeneric(false);\r\n        setShowGenericTags(false);\r\n        \r\n        //Specific\r\n        setShowSpecificTags(false);\r\n        setShowKeyBoard(false);\r\n        setShowEmojiPicker(!showEmojiPicker);\r\n    };\r\n\r\n    const handleSpecificTagsPopover = (event) => {\r\n        // Generic\r\n        setShowEmojiPickerGeneric(false);\r\n        setShowKeyBoardGeneric(false);\r\n        setShowGenericTags(false);\r\n\r\n        // Specific\r\n        setShowEmojiPicker(false);\r\n        setShowKeyBoard(false);\r\n        SpecificPopover(false);\r\n        setShowSpecificTags(true);\r\n\r\n    };\r\n\r\n     const handleArabicKeyboardChange = (input,type) => {\r\n        if(type === \"generic\") {\r\n            let newGenericResponse = `${genericResponse}${input.charAt(input.length - 1)}`;\r\n            setGenericResponse(newGenericResponse);\r\n        } else {\r\n            let newSpecifiResponse = `${SpecificResponse}${input.charAt(input.length - 1)}`;\r\n            SetSpecificResponse(newSpecifiResponse);\r\n        }\r\n    };\r\n    \r\n    const onKeyPress = (button,type) => {\r\n        if(type === \"generic\") {\r\n            if (button.toString() == \"{enter}\") {\r\n                setShowKeyBoardGeneric(false);\r\n            }\r\n        } else {\r\n            if (button.toString() == \"{enter}\") {\r\n                setShowKeyBoard(false);\r\n            }\r\n        }\r\n    };\r\n    \r\n    const onEmojiClick = (event, emojiObject,type) => {\r\n        if(type === \"generic\") {\r\n            let newGenericResponse = `${genericResponse}${emojiObject.emoji}`;\r\n            setGenericResponse(newGenericResponse);\r\n        } else {\r\n            let newSpecifiResponse = `${SpecificResponse}${emojiObject.emoji}`;\r\n            SetSpecificResponse(newSpecifiResponse);\r\n        }\r\n    };\r\n\r\n    const pushSelectedTag = (tag,type) => {\r\n\r\n        if(type === \"generic\") {\r\n            let newGenericResponse = `${genericResponse} ${tag} `;\r\n            setGenericResponse(newGenericResponse);\r\n            setShowGenericTags(false);\r\n        } else {\r\n            let newSpecifiResponse = `${SpecificResponse} ${tag} `;\r\n            SetSpecificResponse(newSpecifiResponse);\r\n            setShowSpecificTags(false);\r\n        }\r\n    };\r\n\r\n\r\n    {/* Specific Tags modal \r\n    <Modal show={showSpecificTags} size=\"sm\" centered>   \r\n    <Row className=\"d-flex w-100\">\r\n        <IoIosClose className=\"ml-auto my-auto pt-1\" color={'#9F9F9F'} size={30} onClick={() => { setShowSpecificTags(false); SpecificPopover(true); }} style={{cursor: 'pointer'}} />\r\n    </Row>\r\n\r\n    <Row className=\"d-flex w-100\">\r\n        <h3 className=\"m-auto wizard-config-intent-title\">Choose one tag variable</h3>\r\n    </Row>\r\n   \r\n    <Modal.Body>  \r\n        <Row className=\"d-flex\">\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\" onClick={() => { pushSelectedTag('##FIRST_NAME##', \"specific\"); setShow(true); }}>First Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\" onClick={() => { pushSelectedTag('##LAST_NAME##', \"specific\"); setShow(true); }}>Last Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\" onClick={() => { pushSelectedTag('##FULL_NAME##', \"specific\"); setShow(true); }}>Full Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\" onClick={() => { pushSelectedTag('##PAGE_NAME##', \"specific\"); setShow(true); }}>Page Name</p>\r\n            </Col>\r\n        </Row>\r\n    </Modal.Body>\r\n</Modal>\r\n\r\n{/* Specific Btns (Quicks replies Modal) \r\n<Modal show={showButtonsModal} size=\"sm\" centered>   \r\n    <Modal.Body>  \r\n        <Row className=\"justify-content-center\">\r\n            <Col md={12}>\r\n                <Row>\r\n                    <Col md={12} className=\"mt-2 mb-3\">\r\n                        <Form.Control as=\"select\" onChange={(e) => setQuickReplyType(e.target.value)} defaultValue=\"url\">\r\n                            <option value=\"url\">Url</option>\r\n                            <option value=\"call\">Call</option>\r\n                        </Form.Control>\r\n                    </Col>\r\n                    \r\n                    <Col md={12} className=\"mt-2\">\r\n                        <Row className=\"d-flex\">\r\n                            <Col md={12}>\r\n                                <Form.Control type={\"text\"} onChange={(e) => setQuickReplyTitle(e.target.value)} value={quickReplyTitle}  placeholder=\"Title\" />\r\n                            </Col>\r\n\r\n                            <Col md={12} className=\"d-flex\">\r\n                                <p className=\"ml-auto wizard-config-input-feedback\">Remaining characters: 20</p>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Col md={12} className=\"mb-2\">\r\n                        <Form.Control type={quickReplyType === \"url\" ? \"text\" : \"number\"} onChange={(e) => setQuickReplyValue(e.target.value)} value={quickReplyValue}  placeholder={quickReplyType === \"url\" ? \"www.example.com\" : \"(+216) 99 999 999\"}  />\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n\r\n            <Col md={11} className=\"d-flex pl-1\">\r\n                <div className=\"wizard-pages-active-btn py-3 px-5\" onClick={() => addNewQuickReply()}>\r\n                    OK\r\n                </div>\r\n            </Col>\r\n           \r\n        </Row>\r\n    </Modal.Body>\r\n</Modal>\r\n\r\n\r\n\r\n <div className=\"m-2\">\r\n    <label className=\"wizard-config-textarea-label\">Specific response</label>\r\n    <Row>\r\n            <Col lg={12}>\r\n            <Row className=\"d-flex mb-1 ml-2\">\r\n                <div className=\"d-flex mr-2\">\r\n                    <Image src={showSpecificTags ? BALISE_ICON_ACTIVE : BALISE_ICON} onClick={handleSpecificTagsPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '19px', cursor: 'pointer'}} />    \r\n                </div>                                \r\n\r\n                <div className=\"d-flex mr-2\">\r\n                    <Image src={showEmojiPicker ? EMO_ICON_ACTIVE : EMO_ICON} onClick={handleSpecificEmojiPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '18px', cursor: 'pointer'}} />\r\n                </div>\r\n\r\n                <div className=\"d-flex mr-2\">\r\n                    <Image src={showKeyBoard ? LETTER_ICON_ACTIVE : LETTER_ICON} onClick={handleSpecificKeyboardPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '21px', cursor: 'pointer'}} />\r\n                    \r\n                    {showKeyBoard &&\r\n                        <div className=\"wizard-config-keyboard-container\">\r\n                            <Keyboard onChange={handleArabicKeyboardChange} onKeyPress={onKeyPress} layout={layout} />\r\n                        </div>\r\n                    }\r\n                    {showEmojiPicker &&\r\n                        <div className=\"wizard-config-emoji-container\" >\r\n                            <Picker onEmojiClick={onEmojiClick} />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Row>\r\n        </Col> \r\n\r\n        <Col lg={12} className=\"mb-2\">\r\n        <textarea onChange={(e) => setSpecificResponse(e.target.value)} value={SpecificResponse} className=\"wizard-config-textarea\" rows=\"5\"/>\r\n        <hr style={{borderColor: '#B4B4B4', borderWidth: '1.5px'}}/>\r\n    </Col> \r\n    \r\n        Quick replies \r\n        <Col lg={12} className=\"d-flex flex-row mb-2\">\r\n    \r\n        {quickReplies.map((quickReply,index) => \r\n            <Col key={index} lg={3} className=\"mr-2\">\r\n                <Row className=\"wizard-config-quick-replies-btn py-1\">\r\n                    <p className=\"m-auto\" data-for='quickReplyTip' data-tip={quickReply.value}>{quickReply.type}</p>\r\n                    <AiOutlineCloseCircle className=\"m-auto\" color={\"white\"} size={\"17\"} style={{cursor: 'pointer'}} onClick={() => deleteQuickReply(index)} />\r\n                </Row>\r\n                <ReactTooltip id='quickReplyTip' textColor='#fff' backgroundColor='#009EE3' />\r\n            </Col>\r\n        )}\r\n\r\n        // ADD BUTTON\r\n        {quickReplies.length < 3\r\n        &&\r\n        <Col lg={3}>\r\n            <Row \r\n                className=\"wizard-config-quick-replies-btn py-1\" \r\n                \r\n                onClick={() =>{ setShowButtonsModal(true); setShow(false); }}\r\n            >\r\n                <p className=\"m-auto\">Add button</p>\r\n            </Row>\r\n        </Col>\r\n        }\r\n\r\n    </Col>\r\n</Row>\r\n</div>\r\n\r\n */","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/app/Home/AutoWizard/WizardIntentDetails.js"],"names":["React","useState","useRef","useEffect","axios","connect","addGenericResponse","updateGenericResponse","host","Row","Col","Popover","Overlay","Modal","Form","Spinner","Image","WizardMiracleInput","ReactTooltip","Swal","FaTrashAlt","IoIosArrowDown","IoIosArrowUp","IoIosClose","AiOutlineCloseCircle","MdAddCircleOutline","WizardIntentDetails","props","indexOfIntent","intent","setIntents","selectedIntents","wizardExistingProjectIntents","intentStatus","swalWithBootstrapButtons","mixin","customClass","confirmButton","buttonsStyling","GenericResponse","setGenericResponse","GenericTags","setGenericTags","GenericEmojis","setGenericEmojis","GenericKeyboard","setGenericKeyboard","GenericBtnType","setGenericBtnType","GenericBtnTitle","setGenericBtnTitle","GenericBtnValue","setGenericBtnValue","GenericBtns","setGenericBtns","resetGeneric","handleSaveGenericResponse","wizardIdProject","handleUpdateModal","project","genericAnswer","buttons","fire","title","confirmButtonText","intentState","setSaveUpdateLoading","then","setIntentState","catch","SpecificResponse","SetSpecificResponse","SpecificKeyBoard","setSpecificKeyBoard","SpecificEmoji","setSpecificEmoji","SpecificTags","setSpecificTags","SpecificBtnType","setSpecificType","SpecificBtnTitle","setSpecificTitle","SpecificBtnValue","setSpecificValue","SpecificBtns","setSpecificBtns","SpecificPopover","setSpecificPopover","SpecificTarget","setSpecificTarget","SpecificRef","resetSpecific","setProductName","handleSpecificPopover","event","target","SpecificUpdateResponse","SetSpecificUpdateResponse","SpecificUpdateKeyBoard","setSpecificUpdateKeyBoard","SpecificUpdateEmoji","setSpecificUpdateEmoji","SpecificUpdateTags","setSpecificUpdateTags","SpecificUpdateBtnType","setSpecificUpdateType","SpecificUpdateBtnTitle","setSpecificUpdateTitle","SpecificUpdateBtnValue","setSpecificUpdateValue","SpecificUpdateBtns","setSpecificUpdateBtns","SpecificUpdatePopover","setSpecificUpdatePopover","SpecificUpdateTarget","setSpecificUpdateTarget","SpecificUpdateRef","resetUpdateSpecific","handleSpecificUpdatePopover","product","setProductUpdateName","preAnswer","productName","productUpdateName","savedProductToSend","setSavedProductToSend","products","setProducts","newCategory","setNewCategory","categorySelected","setCategorySelected","allCategories","setAllCategories","CategorieModal","setCategorieModal","showModalInput","setShowModalInput","handleCategoriesModal","saveUpdateLoading","updateModal","isOpen","setIsOpen","addNewProduct","idProjet","productToSend","idPage","wizardSelectedPage","id","typePage","platform","entity","name","specificAnswer","categorie","put","headers","localStorage","getItem","res","console","log","data","get","categories","length","map","cat","index","default","splice","err","newSelectedIntents","intents","answer","addNewProductViaModal","_","updateProduct","deleteProduct","newProducts","objectToSend","_id","pushNewCategory","categoryToPush","deleteIntent","newIntents","renderUpdateModal","cursor","hasOwnProperty","toLowerCase","background","color","Math","ceil","borderColor","fontFamily","fontSize","e","substring","current","value","category","backgroundColor","mapStateToProps","state","wizardR","wizardIntentType","wizardSelectedPost"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { addGenericResponse, updateGenericResponse } from '../../../redux/actions/wizardActions';\r\nimport { host } from '../../../config';\r\n\r\nimport {\r\n    Row,\r\n    Col,\r\n    Popover,\r\n    Overlay,\r\n    Modal,\r\n    Form,\r\n    Spinner,\r\n    Image,\r\n} from 'react-bootstrap';\r\nimport WizardMiracleInput from './WizardMiracleInput';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\n\r\nimport { FaTrashAlt } from 'react-icons/fa';\r\nimport { IoIosArrowDown, IoIosArrowUp, IoIosClose } from 'react-icons/io';\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\r\nimport { MdAddCircleOutline } from 'react-icons/md';\r\nimport {ReactComponent as TrashIntent} from '../../../assets/images/home/trash-intent.svg';\r\nimport {ReactComponent as TrashIntentWhite} from '../../../assets/images/home/TrashIntentWhite.svg';\r\n\r\nfunction WizardIntentDetails(props) {\r\n\r\n    // All Props from WizardConfig : \r\n    let {\r\n        indexOfIntent,\r\n        intent,\r\n        setIntents,\r\n        selectedIntents,\r\n        // isExistingProject,\r\n        wizardExistingProjectIntents,\r\n        intentStatus,\r\n    } = props;\r\n    \r\n    // Popup Config:\r\n    const swalWithBootstrapButtons = Swal.mixin({ customClass: {confirmButton: 'wizard-pages-active-btn-alert'}, buttonsStyling: false });\r\n    \r\n    // Generic:\r\n    const [GenericResponse,setGenericResponse] = useState('');\r\n    const [GenericTags,setGenericTags] = useState(false);\r\n    const [GenericEmojis,setGenericEmojis] = useState(false);\r\n    const [GenericKeyboard,setGenericKeyboard] = useState(false);\r\n    const [GenericBtnType, setGenericBtnType] = useState('web_url');\r\n    const [GenericBtnTitle, setGenericBtnTitle] = useState('');\r\n    const [GenericBtnValue, setGenericBtnValue] = useState('');\r\n    const [GenericBtns, setGenericBtns] = useState([]);\r\n    const resetGeneric = () => {\r\n        setGenericResponse('');\r\n        setGenericTags(false);\r\n        setGenericEmojis(false);\r\n        setGenericKeyboard(false);\r\n        setGenericBtnType('web_url');\r\n        setGenericBtnTitle('');\r\n        setGenericBtnValue('');\r\n        setGenericBtns([]);\r\n    };\r\n    const handleSaveGenericResponse = (intent,wizardIdProject) => {  \r\n        \r\n        handleUpdateModal(false);\r\n\r\n        let project = {\r\n            genericAnswer : GenericResponse,\r\n            intent: intent,\r\n            buttons: GenericBtns,\r\n        };\r\n\r\n        if(GenericResponse === \"\") {\r\n            swalWithBootstrapButtons.fire({\r\n                title: 'Generic Response is empty !',\r\n                confirmButtonText: 'Okay',\r\n            });\r\n        } else if (intentState === 'save' && GenericResponse !== '') {\r\n            setSaveUpdateLoading(true);\r\n\r\n            props.addGenericResponse(project,wizardIdProject)\r\n            .then(() => {\r\n                setIntentState('update');\r\n                setSaveUpdateLoading(false);\r\n            })\r\n            .catch(() => {\r\n                setSaveUpdateLoading(false);\r\n                swalWithBootstrapButtons.fire({\r\n                    title: 'Error while saving the generic response. Try Again !',\r\n                    confirmButtonText: 'Okay',\r\n                });\r\n            });\r\n\r\n        } else if (intentState === 'update' && GenericResponse !== '') {\r\n            setSaveUpdateLoading(true);\r\n\r\n            props.updateGenericResponse(project,wizardIdProject)\r\n            .then(() => {\r\n                setSaveUpdateLoading(false);\r\n            })\r\n            .catch(() => {\r\n                setSaveUpdateLoading(false);\r\n                swalWithBootstrapButtons.fire({\r\n                    title: 'Error while updating the generic response. Try Again !',\r\n                    confirmButtonText: 'Okay',\r\n                });\r\n            });\r\n        }\r\n        \r\n    };\r\n\r\n    // Specific:\r\n    const [SpecificResponse, SetSpecificResponse] = useState('');\r\n    const [SpecificKeyBoard, setSpecificKeyBoard] = useState(false);\r\n    const [SpecificEmoji, setSpecificEmoji] = useState(false);\r\n    const [SpecificTags, setSpecificTags] = useState(false);\r\n    const [SpecificBtnType, setSpecificType] = useState('web_url');\r\n    const [SpecificBtnTitle, setSpecificTitle] = useState('');\r\n    const [SpecificBtnValue, setSpecificValue] = useState('');\r\n    const [SpecificBtns, setSpecificBtns] = useState([]);\r\n    const [SpecificPopover, setSpecificPopover] = useState(false);\r\n    const [SpecificTarget, setSpecificTarget] = useState(null);\r\n    const SpecificRef = useRef(null);\r\n    const resetSpecific = () => {\r\n        setProductName('');\r\n        SetSpecificResponse('');\r\n        setSpecificTags(false);\r\n        setSpecificEmoji(false);\r\n        setSpecificKeyBoard(false);\r\n        setSpecificType('web_url');\r\n        setSpecificTitle('');\r\n        setSpecificValue('');\r\n        setSpecificBtns([]);\r\n    };\r\n    const handleSpecificPopover = (event) => {\r\n        setSpecificPopover(!SpecificPopover);\r\n        setSpecificTarget(event.target);\r\n    };\r\n\r\n    // Specific Update:\r\n    const [SpecificUpdateResponse, SetSpecificUpdateResponse] = useState('');\r\n    const [SpecificUpdateKeyBoard, setSpecificUpdateKeyBoard] = useState(false);\r\n    const [SpecificUpdateEmoji, setSpecificUpdateEmoji] = useState(false);\r\n    const [SpecificUpdateTags, setSpecificUpdateTags] = useState(false);\r\n    const [SpecificUpdateBtnType, setSpecificUpdateType] = useState('web_url');\r\n    const [SpecificUpdateBtnTitle, setSpecificUpdateTitle] = useState('');\r\n    const [SpecificUpdateBtnValue, setSpecificUpdateValue] = useState('');\r\n    const [SpecificUpdateBtns, setSpecificUpdateBtns] = useState([]);\r\n    const [SpecificUpdatePopover, setSpecificUpdatePopover] = useState(false);\r\n    const [SpecificUpdateTarget, setSpecificUpdateTarget] = useState(null);\r\n    const SpecificUpdateRef = useRef(null);\r\n    const resetUpdateSpecific = () => {\r\n        setSpecificUpdatePopover(false);\r\n        setSpecificUpdateTarget(null);\r\n        SetSpecificUpdateResponse('');\r\n        setSpecificUpdateKeyBoard(false);\r\n        setSpecificUpdateEmoji(false);\r\n        setSpecificUpdateTags(false);\r\n        setSpecificUpdateType('web_url');\r\n        setSpecificUpdateTitle('');\r\n        setSpecificUpdateValue('');\r\n        setSpecificUpdateBtns([]);\r\n    };\r\n    const handleSpecificUpdatePopover = (event,product) => {\r\n        // console.log(\"Product to update =>\", product);\r\n        setProductUpdateName(product.product);\r\n        SetSpecificUpdateResponse(product.preAnswer);\r\n        setSpecificUpdateBtns(product.buttons);\r\n        setSpecificUpdatePopover(!SpecificUpdatePopover);\r\n        setSpecificUpdateTarget(event.target);\r\n    };\r\n\r\n    // Products\r\n    const [productName, setProductName] = useState('');\r\n    const [productUpdateName, setProductUpdateName] = useState('');\r\n    const [savedProductToSend, setSavedProductToSend] = useState('');\r\n    const [products, setProducts] = useState([]);\r\n\r\n    // Categories\r\n    const [newCategory, setNewCategory] = useState('');\r\n    const [categorySelected, setCategorySelected] = useState('');\r\n    const [allCategories, setAllCategories] = useState([]);\r\n    const [CategorieModal, setCategorieModal] = useState(false);\r\n    const [showModalInput, setShowModalInput] = useState(false);\r\n    const handleCategoriesModal = () => {\r\n        setSpecificPopover(false);\r\n        setCategorieModal(!CategorieModal);\r\n    };\r\n    // other:\r\n    const [saveUpdateLoading,setSaveUpdateLoading] = useState(false);\r\n    const [intentState, setIntentState] = useState('save');\r\n    const [updateModal, handleUpdateModal] = useState(false);\r\n    const [isOpen, setIsOpen] = useState(intentStatus === \"old\" ? false : true);\r\n\r\n    // Categories & Products functions :\r\n    const addNewProduct = (idProjet) => {\r\n        \r\n        // First update api : entity === categorie :\r\n        let productToSend = {\r\n            idPage: props.wizardSelectedPage.id,\r\n            typePage : props.wizardSelectedPage.platform,\r\n            entity: productName,\r\n            intent: props.intent.name,\r\n            genericAnswer: GenericResponse,\r\n            specificAnswer: SpecificResponse,\r\n            categorie: productName,\r\n            buttons: SpecificBtns,\r\n        };\r\n\r\n        if(productName === \"\") {\r\n            swalWithBootstrapButtons.fire({\r\n                title: 'Product Name is empty !',\r\n                confirmButtonText: 'Okay',\r\n            });\r\n\r\n        } else if(SpecificResponse === \"\") {\r\n            swalWithBootstrapButtons.fire({\r\n                title: 'Specific Response is empty !',\r\n                confirmButtonText: 'Okay',\r\n            });\r\n\r\n        } else {\r\n\r\n            axios.put(`${host}/api/v1/secure/project/firstupdate/${idProjet}`, productToSend, {\r\n                headers: {\r\n                    'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n                }\r\n            })\r\n            .then( res => {\r\n                console.log('first update response =>', res.data.data);\r\n    \r\n                if (res.data.data === \"not exist\") {\r\n                    // Call the categories api :\r\n                    axios.get(`${host}/api/v1/secure/project/get/entitiesproject/${props.wizardSelectedPage.platform}/${props.wizardSelectedPage.id}`)\r\n                    .then((res) => {\r\n                        console.log(\"get categories for modal /get/entitiesproject =>\", res.data.data);\r\n                        \r\n                        // Eliminate default categories:\r\n                        let categories = res.data.data;\r\n    \r\n                        if(categories.length > 0) {\r\n                            categories.map((cat,index) => \r\n                                cat.default === true && categories.splice(index,1)\r\n                            );\r\n                            // console.log(\"Result after filtring the cats\", categories);\r\n                        };\r\n                        setAllCategories(categories);\r\n                        setSpecificPopover(!SpecificPopover);\r\n                        setSavedProductToSend(productToSend);\r\n                        setCategorieModal(true);\r\n                        \r\n                        // ==> Update the products array from addNewProductViaModal() <==\r\n                    })\r\n                    .catch((err) => console.log(\"addNewProduct WizardIntentDetails =>\", err))\r\n                } else if(res.data.data === \"exist\") {\r\n                    swalWithBootstrapButtons.fire({\r\n                        title: 'Product already exists !',\r\n                        confirmButtonText: 'Okay',\r\n                    });\r\n                } else {\r\n                    // Update the products array :\r\n                    let newSelectedIntents = [...selectedIntents];\r\n    \r\n                    newSelectedIntents.map((intent,index) => {\r\n                        if(index === props.indexOfIntent)  {\r\n                            // intent.products = res.data.data.intents[indexOfIntent].answer\r\n                            setProducts([]);\r\n                            setProducts(res.data.data.intents[indexOfIntent].answer);\r\n                        };\r\n                    });\r\n                    setIntents(newSelectedIntents);\r\n                    \r\n                    // Reset\r\n                    setSpecificPopover(!SpecificPopover);\r\n                    resetSpecific();\r\n                };\r\n            })\r\n            .catch( err => console.log(\"Wizard Intent Detail addNewProduct fct first Update API err ===>\", err))\r\n        } \r\n\r\n    };\r\n\r\n    const addNewProductViaModal = (idProjet) => {\r\n        // Send the update with the new category name :) :\r\n        let productToSend = savedProductToSend;\r\n        productToSend.categorie = categorySelected;\r\n    \r\n        // console.log(\"sendinnng product =>\",productToSend);\r\n        // console.log(\"Category Selected To sennnnd\", categorySelected,\" and product =>>>\", productToSend);\r\n        \r\n        return axios.put(host + `/api/v1/secure/project/update/${idProjet}`,productToSend, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('UPDATE API response =>', res.data);\r\n       \r\n            // set the products from the update api :\r\n            let newSelectedIntents = [...selectedIntents];\r\n\r\n            newSelectedIntents.map((_,index) => {\r\n                if(index === props.indexOfIntent)  {\r\n                    //intent.products = res.data.data.intents[indexOfIntent].answer\r\n                    setProducts([]);\r\n                    setProducts(res.data.data.intents[indexOfIntent].answer);\r\n                };\r\n            });\r\n            setIntents(newSelectedIntents);\r\n            \r\n            // Reset\r\n            resetSpecific();\r\n            setCategorySelected('');\r\n            setCategorieModal(false);\r\n        })\r\n        .catch((err) => console.log(\"addNewProductViaModal => api update err =>> \", err))\r\n    };\r\n\r\n    const updateProduct = (idProjet) => {\r\n       \r\n        let productToSend = {\r\n            idPage: props.wizardSelectedPage.id,\r\n            typePage : props.wizardSelectedPage.platform,\r\n            entity: productUpdateName,\r\n            intent: props.intent.name,\r\n            genericAnswer: GenericResponse,\r\n            specificAnswer: SpecificUpdateResponse,\r\n            buttons: SpecificUpdateBtns,\r\n            // categorie: productUpdateName,\r\n        };\r\n\r\n        axios.put(host + `/api/v1/secure/project/entitiesupdate/${props.wizardIdProject}`,productToSend,\r\n        {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('updateProduct API response =>', res.data);\r\n            // set the products from the update api :\r\n            let newSelectedIntents = [...selectedIntents];\r\n\r\n            newSelectedIntents.map((_,index) => {\r\n                if(index === props.indexOfIntent)  {\r\n                    //intent.products = res.data.data.intents[indexOfIntent].answer\r\n                    setProducts([]);\r\n                    setProducts(res.data.data.intents[indexOfIntent].answer);\r\n                };\r\n            });\r\n            setIntents(newSelectedIntents);\r\n            resetUpdateSpecific();\r\n            // setSpecificUpdatePopover(false);\r\n            \r\n        })\r\n        .catch((err) => {\r\n            console.log(\"updateProduct API error =>> \", err)\r\n            swalWithBootstrapButtons.fire({\r\n                title: 'Error while updating the product. Try Again!',\r\n                confirmButtonText: 'Okay',\r\n            });\r\n        });\r\n\r\n    };\r\n\r\n    const deleteProduct = (product,index) => {\r\n        \r\n        let newProducts = [...products];\r\n        \r\n        let objectToSend = {\r\n            intent: intent.name,\r\n            answer: product._id,\r\n        };\r\n        \r\n        console.log(\"To delete That\", objectToSend);\r\n\r\n        axios.put(host + `/api/v1/secure/project/${props.wizardIdProject}/remove/entity`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('deleteProduct API response =>', res.data);\r\n            newProducts.splice(index,1);\r\n            setProducts(newProducts);   \r\n        })\r\n        .catch((err) => {\r\n            console.log(\"deleteProduct api err =>> \", err)\r\n            swalWithBootstrapButtons.fire({\r\n                title: 'Error while deleting the product. Try Again!',\r\n                confirmButtonText: 'Okay',\r\n            });\r\n        });\r\n \r\n    };\r\n\r\n    const pushNewCategory = () => {  \r\n        \r\n        let categoryToPush = {\r\n            name : newCategory\r\n        };\r\n\r\n        setAllCategories(categories => [...categories, categoryToPush]);\r\n        setCategorySelected(categoryToPush.name);\r\n        \r\n         // Send the update with the new category name :) :\r\n         let productToSend = savedProductToSend;\r\n         productToSend.categorie = newCategory;\r\n\r\n         // console.log(\"sendinnng product =>\",productToSend);\r\n         // console.log(\"Category Selected To sennnnd\", categorySelected,\" and product =>>>\", productToSend);\r\n         \r\n         return axios.put(host + `/api/v1/secure/project/update/${props.wizardIdProject}`,productToSend, {\r\n             headers: {\r\n                 'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n             }\r\n         })\r\n         .then(res => {\r\n             console.log('pushNewCategory via Modal project/update API response =>', res.data);\r\n        \r\n            // set the products from the update api :\r\n            let newSelectedIntents = [...selectedIntents];\r\n \r\n            newSelectedIntents.map((_,index) => {\r\n                if(index === props.indexOfIntent)  {\r\n                    setProducts([]);\r\n                    setProducts(res.data.data.intents[indexOfIntent].answer);\r\n                };\r\n            });\r\n            setIntents(newSelectedIntents);\r\n             \r\n            // Reset\r\n            resetSpecific();\r\n            setCategorySelected('');\r\n            setShowModalInput(false); \r\n            setNewCategory('');\r\n            setCategorieModal(false);\r\n         })\r\n         .catch((err) => console.log(\"pushNewCategory via Modal project/update api error =>> \", err))\r\n    };\r\n\r\n    const deleteIntent = (intent,index) => {\r\n        // console.log(\"U want to delete this intent =>\", intent);\r\n        // intent: nom intent\r\n        let newIntents = [...selectedIntents];\r\n    \r\n        let objectToSend = {\r\n            intent: intent.name,\r\n        };\r\n\r\n        console.log(\"i'm gonna delete intent ya nour with =>\", objectToSend);\r\n\r\n        axios.put(host + `/api/v1/secure/project/intents/remove/${props.wizardIdProject}`, objectToSend, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('deleteIntent API response =>', res.data);\r\n            newIntents.splice(index,1);\r\n            setIntents(newIntents);   \r\n        })\r\n        .catch((err) => {\r\n            console.log(\"deleteIntent api err =>> \", err)\r\n            swalWithBootstrapButtons.fire({\r\n                title: 'Error while deleting the intent. Try Again!',\r\n                confirmButtonText: 'Okay',\r\n            });\r\n        });\r\n\r\n        // setIntents(selectedIntents.filter( intent =>( intent !== props.intent.name )))\r\n    };\r\n\r\n    const renderUpdateModal = () => (\r\n        <Modal show={updateModal} size=\"sm\" centered>\r\n        <Modal.Body>\r\n          <Col lg={12}>\r\n            <Row>\r\n              <Col lg={12} className=\"d-flex mb-3\">\r\n                <IoIosClose color={\"#B4B4B4\"} size={30} className=\"ml-auto\" style={{cursor: 'pointer'}} onClick={() => { handleUpdateModal(false) }} />\r\n              </Col>\r\n\r\n              {/* <Col lg={12} className=\"d-flex\">\r\n                <BiError color={\"#E5007D\"} size={65} className=\"mx-auto mb-3\" style={{cursor: 'pointer'}} />\r\n              </Col> */}\r\n\r\n              <Col lg={12} className=\"d-flex\">\r\n                <p className=\"mx-auto mb-3 confirm-modal-text\">\r\n                    Your update will be live and visible for your user\r\n                </p>\r\n              </Col>\r\n              \r\n              <Col lg={12}>\r\n                <Row className=\"justify-content-center\">\r\n                    <div className=\"team-invite-btn text-center px-3 mr-2\" onClick={() => handleSaveGenericResponse(props.intent.name,props.wizardIdProject)}>\r\n                        <p className=\"m-auto\">Yes</p>\r\n                    </div>\r\n                    \r\n                    <div className=\"team-invite-btn-no text-center px-3 ml-2\" onClick={() => { handleUpdateModal(false) }}>\r\n                        <p className=\"m-auto\">No</p>\r\n                    </div>\r\n\r\n                    {/* <p className=\"cancel-btn-modal-text text-center\" onClick={() => { handleUpdateModal(false) }}>No</p> */}\r\n                </Row>\r\n              </Col>\r\n\r\n            </Row>\r\n          </Col>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n     \r\n    useEffect(() => {\r\n        if(wizardExistingProjectIntents && intentStatus === \"old\") {\r\n\r\n            if(wizardExistingProjectIntents[indexOfIntent]) {\r\n                setGenericResponse(wizardExistingProjectIntents[indexOfIntent].hasOwnProperty('genericAnswer') ? wizardExistingProjectIntents[indexOfIntent].genericAnswer : \"\");\r\n                setGenericBtns(wizardExistingProjectIntents[indexOfIntent].hasOwnProperty('buttons') ? wizardExistingProjectIntents[indexOfIntent].buttons : [])\r\n                setProducts(wizardExistingProjectIntents[indexOfIntent].hasOwnProperty('answer') ? wizardExistingProjectIntents[indexOfIntent].answer : []);\r\n            }\r\n            setIntentState('update');\r\n        }\r\n\r\n        return () => {\r\n\r\n        };\r\n    },[wizardExistingProjectIntents]);\r\n\r\n    return (\r\n        <Col lg={6} className=\"mb-3\" key={indexOfIntent}>\r\n            <div className=\"d-flex flex-column wizard-config-intents-container\">\r\n                \r\n                {/* Header */}\r\n                <Row>\r\n                    <Col lg={12} >\r\n                    {intent.name.toLowerCase() === \"quiz\"\r\n                    ?\r\n                        <Row \r\n                            className={isOpen ? \"justify-content-between mx-0 p-0 wizard-config-intents-top-row-quiz pl-2 pr-1\" : \"justify-content-between mx-0 p-0 wizard-config-intents-top-row-quiz-closed pl-2 pr-1\"} \r\n                            style={{background: '#B0BBD0'}} \r\n                        >\r\n                            <div className=\"d-flex\">\r\n                                <p className=\"my-auto wizard-config-intent-title p-2\" style={{color: '#ffffff'}}>{intent.name}</p> \r\n                            </div>\r\n\r\n                            <div className=\"d-flex mr-1\">\r\n                                <TrashIntentWhite width={16} height={16} className=\"m-auto\" style={{cursor: 'pointer'}} onClick={ () => deleteIntent(intent,indexOfIntent)} />\r\n                                {isOpen\r\n                                ?\r\n                                <IoIosArrowUp color={\"#ffffff\"} size={17} className=\"ml-1 mt-auto mb-2\" style={{cursor: 'pointer'}} onClick={() => setIsOpen(!isOpen)} />\r\n                                :\r\n                                <IoIosArrowDown color={\"#ffffff\"} size={17} className=\"ml-1 mt-auto mb-2\" style={{cursor: 'pointer'}} onClick={() => setIsOpen(!isOpen)} />\r\n                                }\r\n                            </div>\r\n                        </Row>\r\n                    :\r\n                        <Row className={isOpen ? \"justify-content-between mx-0 p-0 wizard-config-intents-top-row pl-2 pr-1\" : \"justify-content-between mx-0 p-0 wizard-config-intents-top-row-closed pl-2 pr-1\"}\r\n                        style={{background:  \r\n                                 Math.ceil(((indexOfIntent+1)/2)) % 2 != 0 && (indexOfIntent+1) % 2 != 0 ?\r\n                                 '#E4E6EB' : \r\n                                 Math.ceil(((indexOfIntent+1)/2)) % 2 != 0 && (indexOfIntent+1) % 2 == 0 ?  \r\n                                 '#E5007D' :\r\n                                 Math.ceil(((indexOfIntent+1)/2)) % 2 == 0 && (indexOfIntent+1) % 2 != 0 ?\r\n                                '#E5007D' : \r\n                                 Math.ceil(((indexOfIntent+1)/2)) % 2 == 0 && (indexOfIntent+1) % 2 == 0 && \r\n                                '#E4E6EB' \r\n                                }}>\r\n                            <div className=\"d-flex\">\r\n                                <p className=\"my-auto wizard-config-intent-title p-2\" style={{color: \r\n                                    Math.ceil(((indexOfIntent+1)/2)) % 2 != 0 && (indexOfIntent+1) % 2 != 0 ?\r\n                                    '#818E94' : \r\n                                    Math.ceil(((indexOfIntent+1)/2)) % 2 != 0 && (indexOfIntent+1) % 2 == 0 ?  \r\n                                    '#ffffff' :\r\n                                    Math.ceil(((indexOfIntent+1)/2)) % 2 == 0 && (indexOfIntent+1) % 2 != 0 ?\r\n                                    '#ffffff' : \r\n                                    Math.ceil(((indexOfIntent+1)/2)) % 2 == 0 && (indexOfIntent+1) % 2 == 0 && \r\n                                    '#818E94' \r\n                                }}>{intent.name}</p> \r\n                            </div>\r\n\r\n                            <div className=\"d-flex mr-1\">\r\n                                {/* <TrashIntent  color={\"#818E94\"} width={16} height={16} className=\"m-auto\" style={{cursor: 'pointer'}} onClick={ () => deleteIntent(intent,indexOfIntent)} /> */}\r\n                                {                                \r\n                                    Math.ceil(((indexOfIntent+1)/2)) % 2 != 0 && (indexOfIntent+1) % 2 != 0 ?\r\n                                    <TrashIntent  width={16} height={16} className=\"m-auto\" style={{cursor: 'pointer'}} onClick={ () => deleteIntent(intent,indexOfIntent)} />\r\n                                    : \r\n                                    Math.ceil(((indexOfIntent+1)/2)) % 2 != 0 && (indexOfIntent+1) % 2 == 0 ?  \r\n                                    <TrashIntentWhite width={16} height={16} className=\"m-auto\" style={{cursor: 'pointer'}} onClick={ () => deleteIntent(intent,indexOfIntent)} />\r\n                                    :\r\n                                    Math.ceil(((indexOfIntent+1)/2)) % 2 == 0 && (indexOfIntent+1) % 2 != 0 ?\r\n                                    <TrashIntentWhite width={16} height={16} className=\"m-auto\" style={{cursor: 'pointer'}} onClick={ () => deleteIntent(intent,indexOfIntent)} />\r\n                                    : \r\n                                    Math.ceil(((indexOfIntent+1)/2)) % 2 == 0 && (indexOfIntent+1) % 2 == 0 && \r\n                                    <TrashIntent  width={16} height={16} className=\"m-auto\" style={{cursor: 'pointer'}} onClick={ () => deleteIntent(intent,indexOfIntent)} />\r\n                                }\r\n                                {isOpen\r\n                                ?\r\n                                <IoIosArrowUp color={\r\n                                    Math.ceil(((indexOfIntent+1)/2)) % 2 != 0 && (indexOfIntent+1) % 2 != 0 ?\r\n                                    '#818E94' : \r\n                                    Math.ceil(((indexOfIntent+1)/2)) % 2 != 0 && (indexOfIntent+1) % 2 == 0 ?  \r\n                                    '#ffffff' :\r\n                                    Math.ceil(((indexOfIntent+1)/2)) % 2 == 0 && (indexOfIntent+1) % 2 != 0 ?\r\n                                    '#ffffff' : \r\n                                    Math.ceil(((indexOfIntent+1)/2)) % 2 == 0 && (indexOfIntent+1) % 2 == 0 && \r\n                                    '#818E94' \r\n                                } size={17} className=\"ml-1 mt-auto mb-2\" style={{cursor: 'pointer'}} onClick={() => setIsOpen(!isOpen)} />\r\n                                :\r\n                                <IoIosArrowDown color={\r\n                                    Math.ceil(((indexOfIntent+1)/2)) % 2 != 0 && (indexOfIntent+1) % 2 != 0 ?\r\n                                    '#818E94' : \r\n                                    Math.ceil(((indexOfIntent+1)/2)) % 2 != 0 && (indexOfIntent+1) % 2 == 0 ?  \r\n                                    '#ffffff' :\r\n                                    Math.ceil(((indexOfIntent+1)/2)) % 2 == 0 && (indexOfIntent+1) % 2 != 0 ?\r\n                                   '#818E94' : \r\n                                    Math.ceil(((indexOfIntent+1)/2)) % 2 == 0 && (indexOfIntent+1) % 2 == 0 && \r\n                                   '#ffffff' \r\n                                } size={17} className=\"ml-1 mt-auto mb-2\" style={{cursor: 'pointer'}} onClick={() => setIsOpen(!isOpen)} />\r\n                                }\r\n                            </div>\r\n                        </Row>\r\n                    }\r\n                    </Col>\r\n                </Row>\r\n\r\n                {isOpen \r\n                &&\r\n                <div>\r\n\r\n                    <div className=\"mb-2\">\r\n                    <WizardMiracleInput  \r\n                        label={\"Generic Response\"}\r\n                        response={GenericResponse} handleResponse={setGenericResponse}\r\n                        showTags={GenericTags} handleTags={setGenericTags}\r\n                        showEmojis={GenericEmojis} handleEmojis={setGenericEmojis}\r\n                        showKeyboard={GenericKeyboard} handleKeyboard={setGenericKeyboard}\r\n                        BtnType={GenericBtnType} handleBtnType={setGenericBtnType}\r\n                        BtnTitle={GenericBtnTitle} handleBtnTitle={setGenericBtnTitle}\r\n                        BtnValue={GenericBtnValue} handleBtnValue={setGenericBtnValue}\r\n                        Btns={GenericBtns} handleBtns={setGenericBtns}\r\n                        reset={resetGeneric}\r\n                        platform={props.wizardSelectedPage.platform}\r\n                    />\r\n                    </div>\r\n\r\n                    <div className=\"px-2 mx-2\" >\r\n                        {/* Save Update Button */}\r\n                        <div  className=\"d-flex\" >\r\n                            <p className=\"ml-auto remaining-text mb-1 mt-1\" >Remaining characters:{ 640 - GenericResponse.length}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex\">\r\n                            {\r\n                                intentState === 'save' \r\n                                ?\r\n                                (\r\n                                !saveUpdateLoading \r\n                                ?\r\n                                <div onClick={() => handleSaveGenericResponse(props.intent.name,props.wizardIdProject)} className=\"ml-auto mb-2 wizard-config-update-btn\">\r\n                                    Save\r\n                                </div>\r\n                                :\r\n                                <div className=\"d-flex ml-auto  mb-2 py-2 px-4 wizard-config-update-btn\">\r\n                                    <Spinner animation=\"grow\" size=\"sm\" variant=\"light\" className=\"m-auto\" />\r\n                                </div>\r\n                                )\r\n                                :\r\n                                (\r\n                                !saveUpdateLoading \r\n                                ?\r\n                                // <div onClick={() => handleSaveGenericResponse(props.intent.name,props.wizardIdProject)} className=\"ml-auto  mb-2  wizard-config-update-btn\">\r\n                                <div onClick={() => handleUpdateModal(!updateModal)} className=\"ml-auto  mb-2  wizard-config-update-btn\">\r\n                                    Update\r\n                                </div>\r\n                                :\r\n                                <div className=\"d-flex ml-auto  mb-2 py-2 px-4 wizard-config-update-btn\">\r\n                                    <Spinner animation=\"grow\" size=\"sm\" variant=\"light\" className=\"m-auto\" />\r\n                                </div>\r\n                                )\r\n                            }\r\n                            {/* CONFIRMATION UPDATE RESPONSE */}\r\n                            {updateModal && renderUpdateModal()}\r\n                        </div>\r\n\r\n                        {/* ADD PRODUCTS DISABLED BEFORE SAVING A GENERIC RESPONSE JUST STATIC  */}\r\n                        {intentState === \"save\" &&\r\n                        <Col lg={12} className=\"mx-auto mt-1\">\r\n                            <Row>\r\n                                <Col lg={5} className=\"d-flex wizard-config-add-product-box mb-3 py-1 px-0\" style={{cursor: 'not-allowed', borderColor: '#B4B4B4'}}>\r\n                                    <div className=\"m-auto d-flex justify-content-around\" >\r\n                                        <MdAddCircleOutline className=\"m-auto\" color={\"#B4B4B4\"} size={18} />\r\n                                        <p className=\"wizard-config-add-product-name my-auto ml-3\" style={{fontFamily: 'Poppins SemiBold',fontSize: '13px', color: '#B4B4B4'}}>Add product</p>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        }\r\n\r\n                        \r\n                        \r\n                        {/* PRODUCTS */}\r\n                        {intentState === 'update' &&\r\n                        <Col lg={12} className=\"mx-auto mt-1\">\r\n                            <Row className=\"justify-content-between\">\r\n                                {products.length > 0 && products.map((product,index) => \r\n                                    product.product.length > 0 \r\n                                    &&\r\n                                    <Col key={index} lg={5}  className={product.default ? \"d-flex flex-row mb-3 py-1  wizard-config-product-box-exist\" : \"d-flex flex-row mb-3 py-1  wizard-config-product-box \"} style={{cursor: 'pointer'}}>\r\n                                        {\r\n                                            product.product.length > 11\r\n                                            ?\r\n                                            <p onClick={(e) => handleSpecificUpdatePopover(e,product)} data-for='entityTip' data-tip={product.product} className={product.default ? \"m-auto wizard-config-product-name-exist\" : \"m-auto wizard-config-product-name\"}>\r\n                                                {product.product.substring(0,9)}...\r\n                                            </p>\r\n                                            :\r\n                                            <p onClick={(e) => handleSpecificUpdatePopover(e,product)} className={product.default ? \"m-auto wizard-config-product-name-exist\" : \"m-auto wizard-config-product-name\"}>\r\n                                                {product.product}\r\n                                            </p>\r\n                                        }\r\n                                        <AiOutlineCloseCircle className=\"my-auto ml-1\" color={product.default ? \"#fff\" : \"#F49BCC\"} size={\"20\"} style={{cursor: 'pointer'}} onClick={() => deleteProduct(product,index)} />\r\n                                        <ReactTooltip id='entityTip' textColor='#fff' backgroundColor='#E5007D' />\r\n                                    </Col> \r\n                                    )\r\n                                } \r\n        \r\n                                <Col lg={5} onClick={handleSpecificPopover} className=\"d-flex wizard-config-add-product-box mb-3 py-1 px-0\" style={{cursor: 'pointer'}}>\r\n                                    <div className=\" m-auto  d-flex justify-content-around\" >\r\n                                        {/* <MdAddCircleOutline className=\"m-auto\" color={\"#E5007D\"} size={18} /> */}\r\n                                        <MdAddCircleOutline className=\"m-auto\" color={\"#4080FC\"} size={18} />\r\n                                        <p className=\"wizard-config-add-product-name my-auto ml-3\" style={{fontFamily: 'Poppins SemiBold',fontSize: '13px'}} >Add product</p>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        }\r\n                    </div>\r\n                \r\n                </div>\r\n                }\r\n            \r\n            </div>\r\n             \r\n            {/* Specific Response Popover */}\r\n            <div ref={SpecificRef} >\r\n                <Overlay\r\n                    show={SpecificPopover}\r\n                    target={SpecificTarget}\r\n                    container={SpecificRef.current}\r\n                    placement={indexOfIntent % 2 !== 0 ? \"left\" : \"right\"}\r\n                > \r\n                    <Popover id=\"popover-specific\"  > \r\n                    <Popover.Content  className=\"p-0\" >\r\n                            <div className=\"d-flex\">\r\n                                <IoIosClose className=\"ml-auto\" color={'#9F9F9F'} size={'25'} onClick={handleSpecificPopover} style={{cursor: 'pointer'}} />\r\n                            </div>\r\n                            {/* <div class=\"arrow\" style=\"\"></div> */}\r\n                            <div className=\"mx-2 px-2\">\r\n                                <label className=\"wizard-config-textarea-label\">Product name</label>\r\n                                <input onChange={(e) => setProductName(e.target.value)} value={productName} className=\"wizard-config-product-input\" />\r\n                            </div>\r\n\r\n                            <div className=\"mb-2\">\r\n                                <WizardMiracleInput  \r\n                                    label={\"Specific Response\"}\r\n                                    response={SpecificResponse} handleResponse={SetSpecificResponse}\r\n                                    showTags={SpecificTags} handleTags={setSpecificTags}\r\n                                    showEmojis={SpecificEmoji} handleEmojis={setSpecificEmoji}\r\n                                    showKeyboard={SpecificKeyBoard} handleKeyboard={setSpecificKeyBoard}\r\n                                    BtnType={SpecificBtnType} handleBtnType={setSpecificType}\r\n                                    BtnTitle={SpecificBtnTitle} handleBtnTitle={setSpecificTitle}\r\n                                    BtnValue={SpecificBtnValue} handleBtnValue={setSpecificValue}\r\n                                    Btns={SpecificBtns} handleBtns={setSpecificBtns}\r\n                                    reset={resetSpecific}\r\n                                    platform={props.wizardSelectedPage.platform}\r\n                                />\r\n                            </div>\r\n                            <div  className=\"d-flex mx-2\" >\r\n                                <p className=\"ml-auto mr-2 remaining-text mb-1 mt-1\" >Remaining characters:{ 640 - SpecificResponse.length}</p>\r\n                            </div>\r\n\r\n                            <div className=\"mr-2 px-2  d-flex\">\r\n                                <div className=\"ml-auto mb-2  wizard-config-update-btn\" onClick={() => addNewProduct(props.wizardIdProject)}>Add</div>\r\n                            </div>\r\n                        </Popover.Content>\r\n                        {/* <div className=\"triangle-intent-popover\" /> */}\r\n                    </Popover>\r\n                </Overlay>\r\n            </div>\r\n            \r\n            {/* Specific Response Update Popover */}\r\n            <div ref={SpecificUpdateRef} >\r\n                <Overlay\r\n                    show={SpecificUpdatePopover}\r\n                    target={SpecificUpdateTarget}\r\n                    container={SpecificUpdateRef.current}\r\n                    placement={indexOfIntent % 2 !== 0 ? \"left\" : \"right\"}\r\n                >\r\n                    <Popover id=\"popover-specific\"   > \r\n                        <Popover.Content  className=\"p-0\">\r\n                            <div className=\"d-flex\">\r\n                                <IoIosClose className=\"ml-auto\" color={'#9F9F9F'} size={'25'} onClick={resetUpdateSpecific} style={{cursor: 'pointer'}} />\r\n                            </div>\r\n\r\n                            <div className=\"mx-2 px-2\">\r\n                                <label className=\"wizard-config-textarea-label\">Product name</label>\r\n                                <input onChange={(e) => setProductUpdateName(e.target.value)} value={productUpdateName} disabled={true} style={{cursor: 'not-allowed'}} className=\"wizard-config-product-input\" />\r\n                            </div>\r\n\r\n                            <div className=\"mb-2\">\r\n                                <WizardMiracleInput  \r\n                                    label={\"Update Specific Response\"}\r\n                                    response={SpecificUpdateResponse} handleResponse={SetSpecificUpdateResponse}\r\n                                    showTags={SpecificUpdateKeyBoard} handleTags={setSpecificUpdateKeyBoard}\r\n                                    showEmojis={SpecificUpdateEmoji} handleEmojis={setSpecificUpdateEmoji}\r\n                                    showKeyboard={SpecificUpdateTags} handleKeyboard={setSpecificUpdateTags}\r\n                                    BtnType={SpecificUpdateBtnType} handleBtnType={setSpecificUpdateType}\r\n                                    BtnTitle={SpecificUpdateBtnTitle} handleBtnTitle={setSpecificUpdateTitle}\r\n                                    BtnValue={SpecificUpdateBtnValue} handleBtnValue={setSpecificUpdateValue}\r\n                                    Btns={SpecificUpdateBtns} handleBtns={setSpecificUpdateBtns}\r\n                                    reset={resetUpdateSpecific}\r\n                                    platform={props.wizardSelectedPage.platform}\r\n                                />\r\n                            </div>\r\n                            <div  className=\"d-flex mx-2\" >\r\n                                <p className=\"ml-auto mr-2 remaining-text mb-1 mt-1\" >Remaining characters:{ 640 - SpecificResponse.length}</p>\r\n                            </div>\r\n                            <div className=\"mr-2 px-2 d-flex\">\r\n                                <div className=\"ml-auto mb-2  wizard-config-update-btn\" onClick={() => updateProduct(props.wizardIdProject)}>Update</div>\r\n                            </div>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Overlay>\r\n            </div>\r\n\r\n            {/* Categories Modal */}\r\n            <Modal show={CategorieModal} onHide={handleCategoriesModal} centered>\r\n                <Modal.Body>          \r\n                    <Row className=\"d-flex mb-3\">\r\n                        <IoIosClose className=\"ml-auto mr-3\" color={'#9F9F9F'} size={'28'} onClick={handleCategoriesModal} style={{cursor: 'pointer'}} />\r\n                    </Row>\r\n\r\n                    <Row className=\"d-flex mb-3\">\r\n                        <p className=\"m-auto wizard-config-intent-title\">Please specify the category</p>\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\">\r\n                        <Col lg={1} />\r\n\r\n                        <Col lg={10} className=\"d-flex justify-content-between p-0 mx-0\">\r\n                            <Col lg={8} className=\"d-flex\">\r\n                                {showModalInput && \r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"mr-auto w-100 my-auto add-new-category-input-container\" \r\n                                        onChange={(e) => setNewCategory(e.target.value)}\r\n                                        value={newCategory}\r\n                                        // onKeyDown={(e) => e.key === 'Enter' && pushNewCategory()}\r\n                                    />\r\n                                }\r\n                            </Col>\r\n\r\n                            <Col lg={4} className=\"d-flex\">\r\n                                {!showModalInput\r\n                                &&\r\n                                <p className=\"ml-auto my-auto wizard-config-intent-name\" style={{cursor: 'pointer'}} onClick={() => setShowModalInput(true)}>\r\n                                    Create new\r\n                                </p>\r\n                                }\r\n                            </Col>\r\n                        </Col>\r\n\r\n                        <Col lg={1} />\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col lg={1} />\r\n\r\n                        <Col lg={10}>\r\n                            <Form.Group className=\"d-flex w-100\">\r\n                                <Form.Control \r\n                                    className=\"wizard-config-intent-title\" \r\n                                    as=\"select\" \r\n                                    disabled={showModalInput || allCategories.length === 0} \r\n                                    onChange={(e) => setCategorySelected(e.target.value)}\r\n                                    value={categorySelected} \r\n                                    custom\r\n                                >\r\n                                    <option className=\"wizard-config-intent-title\">Choose Category...</option>\r\n                                    {allCategories.length > 0 \r\n                                    && \r\n                                    allCategories.map((category,index) => \r\n                                        <option key={index} className=\"wizard-config-intent-title\" value={category.name}>{category.name}</option>\r\n                                    )}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                        <Col lg={1} /> \r\n                    </Row>\r\n                    \r\n                    <Row className=\"mb-3\">\r\n                        {showModalInput\r\n                        ?\r\n                        <div \r\n                            className=\"m-auto mb-2 py-3 px-4 wizard-config-update-btn\" \r\n                            style={{backgroundColor: '#009EE3', cursor:'pointer' }} \r\n                            onClick={() => pushNewCategory()}\r\n                        >\r\n                        Create\r\n                        </div>\r\n                        :\r\n                        <div \r\n                        className=\"m-auto mb-2 py-3 px-4 wizard-config-update-btn\" \r\n                        style={{backgroundColor: allCategories.length > 0 && categorySelected ? '#009EE3' : '#707070', cursor: allCategories.length > 0 && categorySelected ? 'pointer' : 'not-allowed', }} \r\n                        onClick={() => allCategories.length > 0 && categorySelected ? addNewProductViaModal(props.wizardIdProject) : null}\r\n                        >\r\n                        Add\r\n                        </div>\r\n                        }\r\n                        {/* <div \r\n                            className=\"m-auto mb-2 py-3 px-4 wizard-config-update-btn\" \r\n                            style={{backgroundColor: allCategories.length > 0 && categorySelected ? '#009EE3' : '#707070', cursor: allCategories.length > 0 && categorySelected ? 'pointer' : 'not-allowed', }} \r\n                            onClick={() => allCategories.length > 0 && categorySelected ? addNewProductViaModal(props.wizardIdProject) : null}\r\n                        >\r\n                        Add\r\n                        </div> */}\r\n                    </Row>\r\n                </Modal.Body>\r\n            </Modal>\r\n            \r\n        </Col>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    wizardIdProject: state.wizardR.wizardIdProject,\r\n    wizardIntentType: state.wizardR.wizardIntentType,\r\n    wizardSelectedPage: state.wizardR.wizardSelectedPage,\r\n    wizardSelectedPost: state.wizardR.wizardSelectedPost,\r\n    wizardExistingProjectIntents: state.wizardR.wizardExistingProjectIntents,\r\n    // wizardStep: state.wizardR.wizardStep,\r\n})\r\n\r\nexport default connect(mapStateToProps, { addGenericResponse, updateGenericResponse })(WizardIntentDetails)\r\n\r\n\r\n/**\r\n *\r\n * \r\n * \r\n *  {\r\n        products.length > 0 &&\r\n        products[props.indexOfIntent].products.map((product,index) => \r\n            <Col key={index} lg={5} className={product.default ? \"d-flex flex-row mb-3  wizard-config-product-box-exist\" : \"d-flex flex-row mb-3  wizard-config-product-box \"}>\r\n                {\r\n                    product.product.length > 8\r\n                    ?\r\n                    <p data-for='entityTip' data-tip={product.product} className=\"m-auto wizard-config-product-name\">{product.product.substring(0,7)}...</p>\r\n                    :\r\n                    <p className={product.default ? \"m-auto wizard-config-product-name-exist\" : \"m-auto wizard-config-product-name\"}>\r\n                        {product.product}\r\n                    </p>\r\n                }\r\n                <AiOutlineCloseCircle className=\"my-auto ml-1\" color={\"#F49BCC\"} size={\"20\"} style={{cursor: 'pointer'}} onClick={() => deleteProduct(product,index)} />\r\n                <ReactTooltip id='entityTip' textColor='#fff' backgroundColor='#E5007D' />\r\n            </Col> \r\n        )\r\n    }  \r\n * \r\n * {\r\n    products.length > 0 &&\r\n    products.map((product,index) => \r\n\r\n        <Col key={index} lg={5} className=\"d-flex flex-row mb-3  wizard-config-product-box \">\r\n            {\r\n                product.entity.length > 8\r\n                ?\r\n                <p data-for='entityTip' data-tip={product.entity} className=\"m-auto wizard-config-product-name\">{product.entity.substring(0,7)}...</p>\r\n                :\r\n                <p className=\"m-auto wizard-config-product-name\">{product.entity}</p>\r\n            }\r\n            <AiOutlineCloseCircle className=\"my-auto ml-1\" color={\"#F49BCC\"} size={\"20\"} style={{cursor: 'pointer'}} onClick={() => deleteProduct(product,index)} />\r\n            <ReactTooltip id='entityTip' textColor='#fff' backgroundColor='#E5007D' />\r\n        </Col> \r\n    )\r\n}   \r\n* \r\n * \r\n * \r\n * Generic Input\r\n <div className=\"mr-2 ml-2 mt-2 mb-2\">\r\n <label className=\"wizard-config-textarea-label\">Generic Response</label>\r\n <Col lg={12}>\r\n     <Row className=\"d-flex mb-1\">\r\n         <div className=\"d-flex mr-2\">\r\n             <Image src={showGenericTags ? BALISE_ICON_ACTIVE : BALISE_ICON} onClick={handleGenericTagsPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '19px', cursor: 'pointer'}} />    \r\n         </div>                                \r\n\r\n         <div className=\"d-flex mr-2\">\r\n             <Image src={showEmojiPickerGeneric ? EMO_ICON_ACTIVE : EMO_ICON} onClick={handleGenericEmojiPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '18px', cursor: 'pointer'}} />\r\n         </div>\r\n\r\n         <div className=\"d-flex mr-2\">\r\n             <Image src={showKeyBoardGeneric ? LETTER_ICON_ACTIVE : LETTER_ICON} onClick={handleGenericKeyboardPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '21px', cursor: 'pointer'}} />\r\n             \r\n             {showKeyBoardGeneric &&\r\n                 <div className=\"wizard-config-keyboard-container\">\r\n                     <Keyboard onChange={(input) => handleArabicKeyboardChange(input,\"generic\")} onKeyPress={(button) => onKeyPress(button,\"generic\")} layout={layout} />\r\n                 </div>\r\n             }\r\n             {showEmojiPickerGeneric &&\r\n                 <div className=\"wizard-config-emoji-container\" >\r\n                     <Picker onEmojiClick={(e,obj) => onEmojiClick(e,obj,\"generic\")} />\r\n                 </div>\r\n             }\r\n         </div>\r\n     </Row>\r\n </Col>\r\n <textarea onChange={(e) => setGenericResponse(e.target.value)} onFocus={() => console.log(\"Hey I'm Focused\")} value={genericResponse} className=\"wizard-config-textarea\" rows=\"5\"/>\r\n</div>\r\n\r\n\r\n\r\n Generic Tags modal \r\n<Modal show={showGenericTags} size=\"sm\" centered>\r\n<Row className=\"d-flex w-100\">\r\n    <IoIosClose className=\"ml-auto my-auto pt-1\" color={'#9F9F9F'} size={30} onClick={() => setShowGenericTags(false)} style={{cursor: 'pointer'}} />\r\n</Row>\r\n\r\n<Row className=\"d-flex w-100\">\r\n    <h3 className=\"m-auto wizard-config-intent-title\">Choose one tag variable</h3>\r\n</Row>\r\n\r\n<Modal.Body>  \r\n    <Row className=\"d-flex\">\r\n        <Col xs={12} className=\"m-auto d-flex\">\r\n            <p className=\"m-auto wizard-config-tag\" onClick={() => pushSelectedTag('##FIRST_NAME##',\"generic\")}>First Name</p>\r\n        </Col>\r\n        <Col xs={12} className=\"m-auto d-flex\">\r\n            <p className=\"m-auto wizard-config-tag\" onClick={() => pushSelectedTag('##LAST_NAME##',\"generic\")}>Last Name</p>\r\n        </Col>\r\n        <Col xs={12} className=\"m-auto d-flex\">\r\n            <p className=\"m-auto wizard-config-tag\" onClick={() => pushSelectedTag('##FULL_NAME##',\"generic\")}>Full Name</p>\r\n        </Col>\r\n        <Col xs={12} className=\"m-auto d-flex\">\r\n            <p className=\"m-auto wizard-config-tag\" onClick={() => pushSelectedTag('##PAGE_NAME##',\"generic\")}>Page Name</p>\r\n        </Col>\r\n    </Row>\r\n</Modal.Body>\r\n</Modal>\r\n\r\n  FUNCTIONS \r\n    // Generic :\r\n    const handleGenericTagsPopover = (event) => {\r\n        setShowEmojiPickerGeneric(false);\r\n        setShowKeyBoardGeneric(false);\r\n        setShowGenericTags(!showGenericTags);\r\n        setTargetGenericTags(event.target);\r\n\r\n        //Specific\r\n        setShowSpecificTags(false);\r\n        setShowEmojiPicker(false);\r\n        setShowKeyBoard(false);\r\n    };\r\n\r\n    const handleGenericKeyboardPopover = () => {\r\n        setShowEmojiPickerGeneric(false);\r\n        setShowGenericTags(false);\r\n        setShowKeyBoardGeneric(!showKeyBoardGeneric);\r\n\r\n        //Specific\r\n        setShowSpecificTags(false);\r\n        setShowEmojiPicker(false);\r\n        setShowKeyBoard(false);\r\n    };\r\n\r\n    const handleGenericEmojiPopover = () => {\r\n        setShowGenericTags(false);\r\n        setShowKeyBoardGeneric(false);\r\n        setShowEmojiPickerGeneric(!showEmojiPickerGeneric);\r\n\r\n        //Specific\r\n        setShowSpecificTags(false);\r\n        setShowEmojiPicker(false);\r\n        setShowKeyBoard(false);\r\n    };\r\n\r\n\r\n\r\n     Specific Tags Popover \r\n    <div ref={refSepecificTags}>\r\n    <Overlay\r\n        show={showSpecificTags}\r\n        target={targetSpecificTags}\r\n        placement=\"top\"\r\n        container={refSepecificTags.current}\r\n        containerPadding={20}\r\n    >\r\n        <Row className=\"d-flex\" style={{ width: '200px', height: '200px', background: '#fff', borderRadius: '0.3rem', marginBottom: \"9px\"}}>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\">First Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\">Last Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\">Full Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\">Page Name</p>\r\n            </Col>\r\n        </Row>\r\n    </Overlay>\r\n</div>\r\n\r\n\r\n const handleSpecificKeyboardPopover = () => {\r\n        // Generic\r\n        setShowEmojiPickerGeneric(false);\r\n        setShowKeyBoardGeneric(false);\r\n        setShowGenericTags(false);\r\n        \r\n        //Specific\r\n        setShowSpecificTags(false);\r\n        setShowEmojiPicker(false);\r\n        setShowKeyBoard(!showKeyBoard);\r\n    };\r\n\r\n    const handleSpecificEmojiPopover = () => {\r\n        // Generic\r\n        setShowEmojiPickerGeneric(false);\r\n        setShowKeyBoardGeneric(false);\r\n        setShowGenericTags(false);\r\n        \r\n        //Specific\r\n        setShowSpecificTags(false);\r\n        setShowKeyBoard(false);\r\n        setShowEmojiPicker(!showEmojiPicker);\r\n    };\r\n\r\n    const handleSpecificTagsPopover = (event) => {\r\n        // Generic\r\n        setShowEmojiPickerGeneric(false);\r\n        setShowKeyBoardGeneric(false);\r\n        setShowGenericTags(false);\r\n\r\n        // Specific\r\n        setShowEmojiPicker(false);\r\n        setShowKeyBoard(false);\r\n        SpecificPopover(false);\r\n        setShowSpecificTags(true);\r\n\r\n    };\r\n\r\n     const handleArabicKeyboardChange = (input,type) => {\r\n        if(type === \"generic\") {\r\n            let newGenericResponse = `${genericResponse}${input.charAt(input.length - 1)}`;\r\n            setGenericResponse(newGenericResponse);\r\n        } else {\r\n            let newSpecifiResponse = `${SpecificResponse}${input.charAt(input.length - 1)}`;\r\n            SetSpecificResponse(newSpecifiResponse);\r\n        }\r\n    };\r\n    \r\n    const onKeyPress = (button,type) => {\r\n        if(type === \"generic\") {\r\n            if (button.toString() == \"{enter}\") {\r\n                setShowKeyBoardGeneric(false);\r\n            }\r\n        } else {\r\n            if (button.toString() == \"{enter}\") {\r\n                setShowKeyBoard(false);\r\n            }\r\n        }\r\n    };\r\n    \r\n    const onEmojiClick = (event, emojiObject,type) => {\r\n        if(type === \"generic\") {\r\n            let newGenericResponse = `${genericResponse}${emojiObject.emoji}`;\r\n            setGenericResponse(newGenericResponse);\r\n        } else {\r\n            let newSpecifiResponse = `${SpecificResponse}${emojiObject.emoji}`;\r\n            SetSpecificResponse(newSpecifiResponse);\r\n        }\r\n    };\r\n\r\n    const pushSelectedTag = (tag,type) => {\r\n\r\n        if(type === \"generic\") {\r\n            let newGenericResponse = `${genericResponse} ${tag} `;\r\n            setGenericResponse(newGenericResponse);\r\n            setShowGenericTags(false);\r\n        } else {\r\n            let newSpecifiResponse = `${SpecificResponse} ${tag} `;\r\n            SetSpecificResponse(newSpecifiResponse);\r\n            setShowSpecificTags(false);\r\n        }\r\n    };\r\n\r\n\r\n    {/* Specific Tags modal \r\n    <Modal show={showSpecificTags} size=\"sm\" centered>   \r\n    <Row className=\"d-flex w-100\">\r\n        <IoIosClose className=\"ml-auto my-auto pt-1\" color={'#9F9F9F'} size={30} onClick={() => { setShowSpecificTags(false); SpecificPopover(true); }} style={{cursor: 'pointer'}} />\r\n    </Row>\r\n\r\n    <Row className=\"d-flex w-100\">\r\n        <h3 className=\"m-auto wizard-config-intent-title\">Choose one tag variable</h3>\r\n    </Row>\r\n   \r\n    <Modal.Body>  \r\n        <Row className=\"d-flex\">\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\" onClick={() => { pushSelectedTag('##FIRST_NAME##', \"specific\"); setShow(true); }}>First Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\" onClick={() => { pushSelectedTag('##LAST_NAME##', \"specific\"); setShow(true); }}>Last Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\" onClick={() => { pushSelectedTag('##FULL_NAME##', \"specific\"); setShow(true); }}>Full Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\" onClick={() => { pushSelectedTag('##PAGE_NAME##', \"specific\"); setShow(true); }}>Page Name</p>\r\n            </Col>\r\n        </Row>\r\n    </Modal.Body>\r\n</Modal>\r\n\r\n{/* Specific Btns (Quicks replies Modal) \r\n<Modal show={showButtonsModal} size=\"sm\" centered>   \r\n    <Modal.Body>  \r\n        <Row className=\"justify-content-center\">\r\n            <Col md={12}>\r\n                <Row>\r\n                    <Col md={12} className=\"mt-2 mb-3\">\r\n                        <Form.Control as=\"select\" onChange={(e) => setQuickReplyType(e.target.value)} defaultValue=\"url\">\r\n                            <option value=\"url\">Url</option>\r\n                            <option value=\"call\">Call</option>\r\n                        </Form.Control>\r\n                    </Col>\r\n                    \r\n                    <Col md={12} className=\"mt-2\">\r\n                        <Row className=\"d-flex\">\r\n                            <Col md={12}>\r\n                                <Form.Control type={\"text\"} onChange={(e) => setQuickReplyTitle(e.target.value)} value={quickReplyTitle}  placeholder=\"Title\" />\r\n                            </Col>\r\n\r\n                            <Col md={12} className=\"d-flex\">\r\n                                <p className=\"ml-auto wizard-config-input-feedback\">Remaining characters: 20</p>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Col md={12} className=\"mb-2\">\r\n                        <Form.Control type={quickReplyType === \"url\" ? \"text\" : \"number\"} onChange={(e) => setQuickReplyValue(e.target.value)} value={quickReplyValue}  placeholder={quickReplyType === \"url\" ? \"www.example.com\" : \"(+216) 99 999 999\"}  />\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n\r\n            <Col md={11} className=\"d-flex pl-1\">\r\n                <div className=\"wizard-pages-active-btn py-3 px-5\" onClick={() => addNewQuickReply()}>\r\n                    OK\r\n                </div>\r\n            </Col>\r\n           \r\n        </Row>\r\n    </Modal.Body>\r\n</Modal>\r\n\r\n\r\n\r\n <div className=\"m-2\">\r\n    <label className=\"wizard-config-textarea-label\">Specific response</label>\r\n    <Row>\r\n            <Col lg={12}>\r\n            <Row className=\"d-flex mb-1 ml-2\">\r\n                <div className=\"d-flex mr-2\">\r\n                    <Image src={showSpecificTags ? BALISE_ICON_ACTIVE : BALISE_ICON} onClick={handleSpecificTagsPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '19px', cursor: 'pointer'}} />    \r\n                </div>                                \r\n\r\n                <div className=\"d-flex mr-2\">\r\n                    <Image src={showEmojiPicker ? EMO_ICON_ACTIVE : EMO_ICON} onClick={handleSpecificEmojiPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '18px', cursor: 'pointer'}} />\r\n                </div>\r\n\r\n                <div className=\"d-flex mr-2\">\r\n                    <Image src={showKeyBoard ? LETTER_ICON_ACTIVE : LETTER_ICON} onClick={handleSpecificKeyboardPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '21px', cursor: 'pointer'}} />\r\n                    \r\n                    {showKeyBoard &&\r\n                        <div className=\"wizard-config-keyboard-container\">\r\n                            <Keyboard onChange={handleArabicKeyboardChange} onKeyPress={onKeyPress} layout={layout} />\r\n                        </div>\r\n                    }\r\n                    {showEmojiPicker &&\r\n                        <div className=\"wizard-config-emoji-container\" >\r\n                            <Picker onEmojiClick={onEmojiClick} />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Row>\r\n        </Col> \r\n\r\n        <Col lg={12} className=\"mb-2\">\r\n        <textarea onChange={(e) => setSpecificResponse(e.target.value)} value={SpecificResponse} className=\"wizard-config-textarea\" rows=\"5\"/>\r\n        <hr style={{borderColor: '#B4B4B4', borderWidth: '1.5px'}}/>\r\n    </Col> \r\n    \r\n        Quick replies \r\n        <Col lg={12} className=\"d-flex flex-row mb-2\">\r\n    \r\n        {quickReplies.map((quickReply,index) => \r\n            <Col key={index} lg={3} className=\"mr-2\">\r\n                <Row className=\"wizard-config-quick-replies-btn py-1\">\r\n                    <p className=\"m-auto\" data-for='quickReplyTip' data-tip={quickReply.value}>{quickReply.type}</p>\r\n                    <AiOutlineCloseCircle className=\"m-auto\" color={\"white\"} size={\"17\"} style={{cursor: 'pointer'}} onClick={() => deleteQuickReply(index)} />\r\n                </Row>\r\n                <ReactTooltip id='quickReplyTip' textColor='#fff' backgroundColor='#009EE3' />\r\n            </Col>\r\n        )}\r\n\r\n        // ADD BUTTON\r\n        {quickReplies.length < 3\r\n        &&\r\n        <Col lg={3}>\r\n            <Row \r\n                className=\"wizard-config-quick-replies-btn py-1\" \r\n                \r\n                onClick={() =>{ setShowButtonsModal(true); setShow(false); }}\r\n            >\r\n                <p className=\"m-auto\">Add button</p>\r\n            </Row>\r\n        </Col>\r\n        }\r\n\r\n    </Col>\r\n</Row>\r\n</div>\r\n\r\n */"]},"metadata":{},"sourceType":"module"}