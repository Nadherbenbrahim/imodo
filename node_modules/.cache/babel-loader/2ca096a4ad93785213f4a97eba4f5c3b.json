{"ast":null,"code":"import axios from 'axios';\nimport { host } from '../../config';\nexport const getConnectedPagesProject = () => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/project/get/user`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      // console.log('all projects for this user', res.data.data)\n      dispatch({\n        type: 'GET_WIZARD_ACTIVE_PAGE_POSTS',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"err \", err));\n  };\n};\nexport const getWizardPagesPosts = wizardPage => {\n  return dispatch => {\n    if (wizardPage.id !== null && wizardPage.id !== undefined) {\n      return axios.get(host + `/api/v1/secure/post/get/${wizardPage.id}/all`, {\n        headers: {\n          'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n        }\n      }).then(res => {\n        // console.log(\"posts\",res.data.data);\n        dispatch({\n          type: 'GET_WIZARD_PAGE_POSTS',\n          payload: res.data.data\n        });\n      }).catch(err => console.log(\"getWizardPagesPosts \", err));\n    }\n  };\n};\nexport const setWizardSelectedPost = post => {\n  return async dispatch => {\n    // const selectedPage = {\n    //     platform: platform,\n    //     name: pageName,\n    //     picture_url : picture !== null ? picture : `https://graph.facebook.com/v8.0/${idPage}/picture?access_token=${accessToken}`,\n    //     id: idPage,\n    //     accessToken: accessToken,\n    // };\n    dispatch({\n      type: 'SELECT_WIZARD_POST',\n      payload: post\n    });\n  };\n};\nexport const setWizardSelectedPage = (platform, pageName, picture, idPage, accessToken) => {\n  return async dispatch => {\n    const selectedPage = {\n      platform: platform,\n      name: pageName,\n      picture_url: picture !== null ? picture : `https://graph.facebook.com/v8.0/${idPage}/picture?access_token=${accessToken}`,\n      id: idPage,\n      accessToken: accessToken\n    };\n    dispatch({\n      type: 'SELECT_WIZARD_PAGE',\n      payload: selectedPage\n    });\n  };\n};\nexport const nextWizardStep = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'NEXT_WIZARD_STEP'\n    });\n  };\n};\nexport const prevWizardStep = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'PREV_WIZARD_STEP'\n    });\n  };\n};\nexport const resetWizardStep = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'RESET_WIZARD_STEP'\n    });\n  };\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/wizardActions.js"],"names":["axios","host","getConnectedPagesProject","dispatch","get","headers","localStorage","getItem","then","res","type","payload","data","catch","err","console","log","getWizardPagesPosts","wizardPage","id","undefined","setWizardSelectedPost","post","setWizardSelectedPage","platform","pageName","picture","idPage","accessToken","selectedPage","name","picture_url","nextWizardStep","prevWizardStep","resetWizardStep"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { host } from '../../config';\r\n\r\n\r\nexport const getConnectedPagesProject = () => {\r\n    return (dispatch) => {\r\n        return axios.get(host + `/api/v1/secure/project/get/user`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('all projects for this user', res.data.data)\r\n            \r\n            dispatch({\r\n                type: 'GET_WIZARD_ACTIVE_PAGE_POSTS',\r\n                payload: res.data.data\r\n            })\r\n        }).catch((err) => console.log(\"err \", err))\r\n    }\r\n}\r\n\r\nexport const getWizardPagesPosts = (wizardPage) => {\r\n    return (dispatch) => {\r\n                \r\n        if(wizardPage.id !== null && wizardPage.id !== undefined) {\r\n            return axios.get(host + `/api/v1/secure/post/get/${wizardPage.id}/all`, {\r\n                headers: {\r\n                    'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n                }\r\n            })\r\n            .then(res => {\r\n\r\n                // console.log(\"posts\",res.data.data);\r\n\r\n                dispatch({\r\n                    type: 'GET_WIZARD_PAGE_POSTS',\r\n                    payload: res.data.data\r\n                })\r\n            }).catch((err) => console.log(\"getWizardPagesPosts \", err))\r\n        }\r\n    }\r\n}\r\n\r\nexport const setWizardSelectedPost = (post) => {\r\n    return async (dispatch) => {\r\n\r\n        // const selectedPage = {\r\n        //     platform: platform,\r\n        //     name: pageName,\r\n        //     picture_url : picture !== null ? picture : `https://graph.facebook.com/v8.0/${idPage}/picture?access_token=${accessToken}`,\r\n        //     id: idPage,\r\n        //     accessToken: accessToken,\r\n        // };\r\n\r\n        dispatch({\r\n            type: 'SELECT_WIZARD_POST', \r\n            payload: post,\r\n        });\r\n    }\r\n};\r\n\r\nexport const setWizardSelectedPage = (platform,pageName,picture,idPage,accessToken) => {\r\n    return async (dispatch) => {\r\n\r\n        const selectedPage = {\r\n            platform: platform,\r\n            name: pageName,\r\n            picture_url : picture !== null ? picture : `https://graph.facebook.com/v8.0/${idPage}/picture?access_token=${accessToken}`,\r\n            id: idPage,\r\n            accessToken: accessToken,\r\n        };\r\n\r\n        dispatch({\r\n            type: 'SELECT_WIZARD_PAGE', \r\n            payload: selectedPage,\r\n        });\r\n    }\r\n};\r\n\r\nexport const nextWizardStep = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'NEXT_WIZARD_STEP' });\r\n    }\r\n};\r\n\r\nexport const prevWizardStep = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'PREV_WIZARD_STEP' });\r\n    }\r\n};\r\n\r\nexport const resetWizardStep = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'RESET_WIZARD_STEP' });\r\n    }\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}