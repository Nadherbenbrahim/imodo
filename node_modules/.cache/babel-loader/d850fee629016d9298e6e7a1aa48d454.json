{"ast":null,"code":"import axios from 'axios';\nimport { host } from '../../config';\nexport const setPreferences = (spam, likes, delay, Page) => {\n  return dispatch => {\n    console.log(\"Preferences\", {\n      spam: spam,\n      likes: likes,\n      delay: delay,\n      platform: Page.platform\n    });\n    /*\r\n    platfrome (facebook ou instagram ){\r\n       \"likesComment\" : ( boolean),\r\n       \"spam\" :  ( boolean),\r\n        \"respReplies\":{\r\n        \"statut\": string,\r\n        \"time\": array}\r\n             }NB : \r\n        \"respReplies\":{\r\n                    \"statut\": Exactly,\r\n                    \"time\": [0]}\r\n        ou\r\n        \"respReplies\":{\r\n                    \"statut\": \"Randomly\" ,\r\n                    \"time\": [3000,50000]} \r\n        ou \r\n        \"respReplies\":{\r\n                    \"statut\": immediatly,\r\n                    \"time\": [0]}\r\n    */\n\n    return axios.get(host + `/api/v1/secure/project/get/user`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {// console.log('all projects for this user', res.data.data)\n      // dispatch({\n      //     type: 'GET_WIZARD_ACTIVE_PAGE_POSTS',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err getConnectedPagesProject\", err));\n  };\n};\nexport const getConnectedPagesProject = () => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/project/get/user`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('all projects for this user', res.data.data);\n      dispatch({\n        type: 'GET_WIZARD_ACTIVE_PAGE_POSTS',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"err getConnectedPagesProject\", err));\n  };\n};\nexport const addPageEntity = page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/pages/entities/add/${page.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('add entity', res.data.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err addPageEntity\", err));\n  };\n};\nexport const getPageEntities = page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/project/get/entitiesproject/${page.platform}/${page.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      // console.log('entities mtaaa page', res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_ENTITIES_OF_A_PAGE',\n        payload: categories\n      });\n    }).catch(err => console.log(\"err getPageEntities\", err));\n  };\n}; // TEAM:\n\nexport const sendMailTeam = (wizardSelectedPage, emailTeamMember) => {\n  return dispatch => {\n    return axios.post(host + `/api/v1/secure/membership/sendMail/${wizardSelectedPage.id}/${wizardSelectedPage.platform}/`, {\n      email: emailTeamMember\n    }, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('Sending the maiiiiiil  => ', res.data.data); // dispatch({\n      //     type: 'GET_ALL_PRODUCT_CATEGORIES',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err getConnectedPagesProject\", err));\n  };\n};\nexport const inviteMember = page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/membership/get/${page.id}/${page.platform}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }); // .then(res => {\n    //     console.log('Token of invitation', res.data.data);\n    //     // dispatch({\n    //     //     type: 'GET_ENTITIES_OF_A_PAGE',\n    //     //     payload: res.data.data\n    //     // })\n    // })\n    // .catch((err) => console.log(\"err inviteMember\", err))\n  };\n};\nexport const deleteTeamMember = (page, idFacebook) => {\n  return dispatch => {\n    let type = page.platform;\n    let idPage = page.id;\n    return axios.post(host + `/api/v1/secure/membership/deleteMember/`, {\n      idFacebook,\n      idPage,\n      type\n    }, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {// console.log('deleteTeamMember', res.data.data);\n      // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"deleteTeamMember error\", err));\n  };\n};\n/* INSTAGRAM */\n\nexport const connectInstagramPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/connect/`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de connect page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err connect page insta\", err));\n  };\n};\nexport const disconnectInstagramPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/disconnect`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err disconnect page instagram\", err));\n  };\n};\nexport const deleteInstagramPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/delete`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err disconnect page instagram\", err));\n  };\n};\nexport const makeOwnerInstagramPage = (idPage, idFacebook) => {\n  return dispatch => {\n    let page = {\n      id: idPage,\n      idFacebook: idFacebook // idFacebook of the new owner\n\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/owner`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de owner page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err owner page instagram\", err));\n  };\n};\n/* FACEBOOK */\n\nexport const connectFacebookPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pages/connect/`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de connect page facebook', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err de connect page facebook\", err));\n  };\n};\nexport const disconnectFacebookPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pages/disconnect/disconnect`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page facebok', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err de disconnect page facebok\", err));\n  };\n};\nexport const deleteFacebookPage = (idPage, idFacebook) => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pages/disconnect/delete`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page facebok', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err de disconnect page facebok\", err));\n  };\n};\nexport const makeOwnerFacebookPage = (idPage, idFacebook) => {\n  return dispatch => {\n    let page = {\n      id: idPage,\n      idFacebook: idFacebook // idFacebook of the new owner\n\n    };\n    return axios.post(host + `/api/v1/secure/pages/disconnect/owner`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de owner page facebook', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err owner page facebook\", err));\n  };\n};\nexport const selectSocialMediaPage = (page, platform, status) => {\n  return async dispatch => {\n    // console.log(\"Full page data =>\", page );\n    // let userData = JSON.parse(localStorage.getItem('userData'));\n    // console.log(\"Full userData\", userData.user.idFacebook);\n\n    /*\r\n        ALL STATUS :\r\n        props.status === \"listPageConnectedOwner\" \r\n        ? \r\n        #E5007D\" \r\n        : \r\n        props.status === \"listPageInvite\" \r\n        ?\r\n        #139216\"\r\n        : \r\n        \"listPageInviteAdmin\" \r\n        ?\r\n        #199EE3\" \r\n        :\r\n        #B4B4B4\"\r\n    */\n    const selectedPage = {\n      platform: platform === \"fb\" ? \"facebook\" : \"instagram\",\n      name: page.name,\n      picture_url: page.imageUrl ? page.imageUrl : `https://graph.facebook.com/v8.0/${page.idPage}/picture?access_token=${page.access_token}`,\n      id: page.idPage,\n      accessToken: page.access_token,\n      team: page.user,\n      admins: page.admins,\n      status: status\n    };\n    dispatch({\n      type: 'SELECT_SOCIAL_MEDIA_PAGE',\n      payload: selectedPage\n    });\n  };\n};\nexport const getFbData = () => {\n  return async dispatch => {\n    /*\r\n        platform={\"fb\"} \r\n        isConnectedPage={page.isConnected}\r\n        namePage={page.name} \r\n        idPage={page.idPage} \r\n        picture={null} \r\n        accessToken={page.access_token} \r\n        status={key} \r\n        team={page.user} \r\n        admins={page.admins}\r\n    */\n    let token = await localStorage.getItem('authtoken');\n    return axios.get(host + '/api/v1/secure/pages/get/all/', {\n      headers: {\n        'authorization': 'Bearer ' + token\n      }\n    }).then(res => {\n      let allFbPages = [];\n      Object.entries(res.data.data).map(([key, tab]) => tab.map(page => {\n        page.status = key;\n        allFbPages.push(page);\n      }));\n      allFbPages.sort((page, nextPage) => {\n        let nameA = page.name.toLowerCase(),\n            nameB = nextPage.name.toLowerCase(); //sort ascending \n\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0; // default return value (no sorting)\n      });\n      dispatch({\n        type: 'GET_FB_DATA',\n        payload: allFbPages,\n        payload2: res.data.data\n      });\n    }).catch(err => {\n      console.log(\"GetFbData err\", JSON.stringify(err));\n    });\n  };\n};\nexport const getInstaData = () => {\n  return async dispatch => {\n    /*\r\n        platform={\"fb\"} \r\n        isConnectedPage={page.isConnected}\r\n        namePage={page.name} \r\n        idPage={page.idPage} \r\n        picture={null} \r\n        accessToken={page.access_token} \r\n        status={key} \r\n        team={page.user} \r\n        admins={page.admins}\r\n    */\n    let token = await localStorage.getItem('authtoken');\n    return axios.get(host + '/api/v1/secure/pagesInsta/get/all/', {\n      headers: {\n        'authorization': 'Bearer ' + token\n      }\n    }).then(res => {\n      // console.log('Instagram pages ya haider =>', res.data.data)\n      let allInstaPages = [];\n      Object.entries(res.data.data).map(([key, tab]) => tab.map(page => {\n        page.status = key;\n        allInstaPages.push(page);\n      }));\n      allInstaPages.sort((page, nextPage) => {\n        let nameA = page.name.toLowerCase(),\n            nameB = nextPage.name.toLowerCase(); //sort ascending \n\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0; // default return value (no sorting)\n      });\n      dispatch({\n        type: 'GET_INSTA_DATA',\n        payload: allInstaPages,\n        payload2: res.data.data\n      });\n    }).catch(err => {\n      console.log(\"getInstaData error\", JSON.stringify(err));\n    });\n  };\n};\nexport const resetSocialMediaSelections = () => {\n  return async dispatch => dispatch({\n    type: 'RESET_SM_SELECTIONS'\n  });\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/socialMediaActions.js"],"names":["axios","host","setPreferences","spam","likes","delay","Page","dispatch","console","log","platform","get","headers","localStorage","getItem","then","res","catch","err","getConnectedPagesProject","data","type","payload","addPageEntity","page","id","getPageEntities","categories","length","map","cat","index","default","splice","sendMailTeam","wizardSelectedPage","emailTeamMember","post","email","inviteMember","deleteTeamMember","idFacebook","idPage","connectInstagramPage","disconnectInstagramPage","deleteInstagramPage","makeOwnerInstagramPage","connectFacebookPage","disconnectFacebookPage","deleteFacebookPage","makeOwnerFacebookPage","selectSocialMediaPage","status","selectedPage","name","picture_url","imageUrl","access_token","accessToken","team","user","admins","getFbData","token","allFbPages","Object","entries","key","tab","push","sort","nextPage","nameA","toLowerCase","nameB","payload2","JSON","stringify","getInstaData","allInstaPages","resetSocialMediaSelections"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { host } from '../../config';\r\n\r\n\r\nexport const setPreferences = (spam,likes,delay,Page) => {\r\n    return (dispatch) => {\r\n        \r\n        console.log(\"Preferences\",{\r\n            spam: spam,\r\n            likes: likes,\r\n            delay: delay,\r\n            platform: Page.platform\r\n        });\r\n\r\n        /*\r\n        platfrome (facebook ou instagram ){\r\n           \"likesComment\" : ( boolean),\r\n           \"spam\" :  ( boolean),\r\n            \"respReplies\":{\r\n            \"statut\": string,\r\n            \"time\": array}\r\n   \r\n            }NB : \r\n            \"respReplies\":{\r\n                        \"statut\": Exactly,\r\n                        \"time\": [0]}\r\n            ou\r\n            \"respReplies\":{\r\n                        \"statut\": \"Randomly\" ,\r\n                        \"time\": [3000,50000]} \r\n            ou \r\n            \"respReplies\":{\r\n                        \"statut\": immediatly,\r\n                        \"time\": [0]}\r\n        */\r\n        \r\n        return axios.get(host + `/api/v1/secure/project/get/user`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('all projects for this user', res.data.data)\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_WIZARD_ACTIVE_PAGE_POSTS',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err getConnectedPagesProject\", err))\r\n    }\r\n};\r\n\r\nexport const getConnectedPagesProject = () => {\r\n    return (dispatch) => {\r\n    \r\n        return axios.get(host + `/api/v1/secure/project/get/user`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('all projects for this user', res.data.data)\r\n            \r\n            dispatch({\r\n                type: 'GET_WIZARD_ACTIVE_PAGE_POSTS',\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch((err) => console.log(\"err getConnectedPagesProject\", err))\r\n    }\r\n};\r\n\r\nexport const addPageEntity = (page) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + `/api/v1/secure/pages/entities/add/${page.id}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('add entity', res.data.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err addPageEntity\", err))\r\n    }\r\n};\r\n\r\nexport const getPageEntities = (page) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + `/api/v1/secure/project/get/entitiesproject/${page.platform}/${page.id}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('entities mtaaa page', res.data.data);\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n\r\n\r\n            dispatch({\r\n                type: 'GET_ENTITIES_OF_A_PAGE',\r\n                payload: categories\r\n            })\r\n        })\r\n        .catch((err) => console.log(\"err getPageEntities\", err))\r\n    }\r\n};\r\n\r\n\r\n// TEAM:\r\nexport const sendMailTeam = (wizardSelectedPage,emailTeamMember) => {\r\n    return (dispatch) => {\r\n    \r\n        return axios.post(host + `/api/v1/secure/membership/sendMail/${wizardSelectedPage.id}/${wizardSelectedPage.platform}/`, {\r\n            email: emailTeamMember,\r\n        },\r\n        {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('Sending the maiiiiiil  => ', res.data.data)\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ALL_PRODUCT_CATEGORIES',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err getConnectedPagesProject\", err))\r\n    }\r\n};\r\n\r\nexport const inviteMember = (page) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + `/api/v1/secure/membership/get/${page.id}/${page.platform}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        // .then(res => {\r\n        //     console.log('Token of invitation', res.data.data);\r\n        \r\n        //     // dispatch({\r\n        //     //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n        //     //     payload: res.data.data\r\n        //     // })\r\n        // })\r\n        // .catch((err) => console.log(\"err inviteMember\", err))\r\n    }\r\n};\r\n\r\nexport const deleteTeamMember = (page,idFacebook) => {\r\n    return (dispatch) => {\r\n       let type = page.platform;\r\n       let idPage = page.id;\r\n\r\n        return axios.post(host + `/api/v1/secure/membership/deleteMember/`,{\r\n            idFacebook,\r\n            idPage,\r\n            type,\r\n        },{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('deleteTeamMember', res.data.data);\r\n        \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"deleteTeamMember error\", err))\r\n    }\r\n};\r\n\r\n\r\n/* INSTAGRAM */\r\nexport const connectInstagramPage = (idPage) => {\r\n    return (dispatch) => {\r\n\r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/connect/`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de connect page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err connect page insta\", err))\r\n    }\r\n};\r\n\r\nexport const disconnectInstagramPage = (idPage) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/disconnect`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err disconnect page instagram\", err))\r\n    };\r\n};\r\n\r\nexport const deleteInstagramPage = (idPage) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/delete`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err disconnect page instagram\", err))\r\n    };\r\n};\r\n\r\nexport const makeOwnerInstagramPage = (idPage,idFacebook) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n            idFacebook: idFacebook // idFacebook of the new owner\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/owner`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de owner page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err owner page instagram\", err))\r\n    };\r\n};\r\n\r\n/* FACEBOOK */\r\nexport const connectFacebookPage = (idPage) => {\r\n    return (dispatch) => {\r\n        \r\n        let page ={\r\n            id: idPage,\r\n        };\r\n\r\n        return axios.post(host + `/api/v1/secure/pages/connect/`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de connect page facebook', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err de connect page facebook\", err))\r\n    }\r\n};\r\n\r\nexport const disconnectFacebookPage = (idPage) => {\r\n    return (dispatch) => {\r\n\r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pages/disconnect/disconnect`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page facebok', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err de disconnect page facebok\", err))\r\n\r\n    };\r\n};\r\n\r\nexport const deleteFacebookPage = (idPage,idFacebook) => {\r\n    return (dispatch) => {\r\n\r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pages/disconnect/delete`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page facebok', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err de disconnect page facebok\", err))\r\n\r\n    };\r\n};\r\n\r\nexport const makeOwnerFacebookPage = (idPage,idFacebook) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n            idFacebook: idFacebook // idFacebook of the new owner\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pages/disconnect/owner`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de owner page facebook', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err owner page facebook\", err))\r\n    };\r\n};\r\n\r\n\r\nexport const selectSocialMediaPage = (page,platform,status) => {\r\n    return async (dispatch) => {\r\n\r\n        // console.log(\"Full page data =>\", page );\r\n        // let userData = JSON.parse(localStorage.getItem('userData'));\r\n        // console.log(\"Full userData\", userData.user.idFacebook);\r\n\r\n        /*\r\n            ALL STATUS :\r\n            props.status === \"listPageConnectedOwner\" \r\n            ? \r\n            #E5007D\" \r\n            : \r\n            props.status === \"listPageInvite\" \r\n            ?\r\n            #139216\"\r\n            : \r\n            \"listPageInviteAdmin\" \r\n            ?\r\n            #199EE3\" \r\n            :\r\n            #B4B4B4\"\r\n        */\r\n \r\n        const selectedPage = {\r\n            platform: platform === \"fb\" ? \"facebook\" : \"instagram\",\r\n            name: page.name,\r\n            picture_url : page.imageUrl ? page.imageUrl : `https://graph.facebook.com/v8.0/${page.idPage}/picture?access_token=${page.access_token}`,\r\n            id: page.idPage,\r\n            accessToken: page.access_token,\r\n            team: page.user,\r\n            admins: page.admins,\r\n            status: status,\r\n        };\r\n        \r\n        dispatch({\r\n            type: 'SELECT_SOCIAL_MEDIA_PAGE',\r\n            payload: selectedPage\r\n        })\r\n    }\r\n};\r\n\r\nexport const getFbData = () => {\r\n    return async (dispatch) => {\r\n        \r\n        /*\r\n            platform={\"fb\"} \r\n            isConnectedPage={page.isConnected}\r\n            namePage={page.name} \r\n            idPage={page.idPage} \r\n            picture={null} \r\n            accessToken={page.access_token} \r\n            status={key} \r\n            team={page.user} \r\n            admins={page.admins}\r\n        */\r\n        \r\n        let token = await localStorage.getItem('authtoken');\r\n\r\n        return axios.get(host + '/api/v1/secure/pages/get/all/', {\r\n            headers: {\r\n                'authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n        .then(res => {\r\n        \r\n            let allFbPages = [];\r\n            Object.entries(res.data.data).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.status = key;\r\n                    allFbPages.push(page);\r\n            }));\r\n\r\n            allFbPages.sort((page,nextPage) =>  {\r\n                let  nameA = page.name.toLowerCase(), nameB = nextPage.name.toLowerCase()\r\n                //sort ascending \r\n                if (nameA < nameB) return -1; \r\n\r\n                if (nameA > nameB) return 1;\r\n                \r\n                return 0; // default return value (no sorting)\r\n            });\r\n\r\n            dispatch({\r\n                type: 'GET_FB_DATA',\r\n                payload: allFbPages,\r\n                payload2: res.data.data,\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"GetFbData err\", JSON.stringify(err))\r\n        })\r\n    }\r\n};\r\n\r\nexport const getInstaData = () => {\r\n    return async (dispatch) => {\r\n        /*\r\n            platform={\"fb\"} \r\n            isConnectedPage={page.isConnected}\r\n            namePage={page.name} \r\n            idPage={page.idPage} \r\n            picture={null} \r\n            accessToken={page.access_token} \r\n            status={key} \r\n            team={page.user} \r\n            admins={page.admins}\r\n        */\r\n       let token = await localStorage.getItem('authtoken');\r\n        \r\n        return axios.get(host + '/api/v1/secure/pagesInsta/get/all/', {\r\n            headers: {\r\n                'authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('Instagram pages ya haider =>', res.data.data)\r\n            let allInstaPages = [];\r\n            \r\n            Object.entries(res.data.data).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.status = key;\r\n                    allInstaPages.push(page);\r\n                }\r\n            ));\r\n\r\n            allInstaPages.sort((page,nextPage) =>  {                \r\n                let  nameA = page.name.toLowerCase(), nameB = nextPage.name.toLowerCase()\r\n                //sort ascending \r\n                if (nameA < nameB) return -1; \r\n\r\n                if (nameA > nameB) return 1;\r\n                \r\n                return 0; // default return value (no sorting)\r\n            });\r\n            \r\n            dispatch({\r\n                type: 'GET_INSTA_DATA',\r\n                payload: allInstaPages,\r\n                payload2: res.data.data\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"getInstaData error\", JSON.stringify(err))\r\n        })\r\n    }\r\n};\r\n\r\nexport const resetSocialMediaSelections = () => {\r\n    return async (dispatch) => dispatch({ type: 'RESET_SM_SELECTIONS' });\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}