{"ast":null,"code":"var _jsxFileName = \"/usr/work/smart_front_oussema/src/app/Home/ManageProducts/ProductDetails.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport AddSynonymInput from './AddSynonymInput';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { FiEdit } from 'react-icons/fi';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport ReactTooltip from 'react-tooltip';\nimport { Col, Row } from 'react-bootstrap';\nexport const ProductDetails = props => {\n  const {\n    product,\n    index,\n    addSynonym,\n    allProducts\n  } = props;\n  const inputRef = useRef();\n  const [modifyProductContent, setModifyProductContent] = useState(allProducts[index].content);\n  const [enableProductInput, setEnableProductInput] = useState(false);\n  const [synonymBoxBorder, setSynonymBoxBorder] = useState(false);\n\n  const modifyProduct = () => {\n    let {\n      allProducts,\n      index\n    } = props;\n    allProducts[index].content = modifyProductContent;\n    setEnableProductInput(false);\n  };\n\n  const deleteProduct = () => {\n    let {\n      allProducts,\n      setAllProducts\n    } = props;\n    let oldProducts = [...allProducts];\n    oldProducts.splice(index, 1);\n    setAllProducts(oldProducts);\n  };\n\n  const deleteSynonym = (indexProduct, indexSyn) => {\n    let {\n      allProducts,\n      setAllProducts\n    } = props;\n    let oldProducts = [...allProducts];\n    oldProducts[indexProduct].synonyms.splice(indexSyn, 1);\n    setAllProducts(oldProducts);\n  };\n\n  useEffect(() => {\n    enableProductInput && inputRef.current.focus();\n  }, [enableProductInput]);\n  return /*#__PURE__*/React.createElement(Row, {\n    className: \"p-3\",\n    key: index,\n    style: {\n      borderBottom: '1px solid #EBEDF0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 5,\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr-auto d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, enableProductInput ? /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    ref: inputRef,\n    value: modifyProductContent,\n    onChange: e => setModifyProductContent(e.target.value),\n    className: \"my-auto synonym-box-white w-100\",\n    style: {\n      border: '1px solid #818E94',\n      fontSize: '15px',\n      fontFamily: 'Poppins SemiBold',\n      color: '#818E94'\n    },\n    onKeyDown: e => {\n      if (e.key === 'Enter') modifyProduct();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-auto manage-product-entity-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, product.content))), /*#__PURE__*/React.createElement(Col, {\n    lg: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mx-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, product.synonyms.length > 0 && product.synonyms.map((synonym, indexSyn) => /*#__PURE__*/React.createElement(Col, {\n    key: indexSyn,\n    lg: 5,\n    className: \"synonym-box-gray d-flex mr-1 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  }, synonym.length > 11 ? /*#__PURE__*/React.createElement(\"p\", {\n    \"data-for\": \"synonymTip\",\n    \"data-tip\": synonym,\n    className: \"my-auto\",\n    style: {\n      cursor: 'help'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 41\n    }\n  }, synonym.substring(0, 10), \"...\") : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 41\n    }\n  }, synonym), /*#__PURE__*/React.createElement(AiOutlineCloseCircle, {\n    className: \"my-auto ml-1\",\n    color: '#818E94',\n    size: '17',\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => deleteSynonym(index, indexSyn),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(ReactTooltip, {\n    id: \"synonymTip\" // className='custom-color-no-arrow' \n    ,\n    delayHide: 1000,\n    textColor: \"#5F4B8BFF\",\n    backgroundColor: \"#E69A8DFF\",\n    effect: \"solid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: 4,\n    className: \"synonym-box-white d-flex mr-1 mb-2\",\n    style: {\n      border: synonymBoxBorder ? '1px solid #818E94' : '1px dashed #818E94'\n    },\n    onClick: () => setSynonymBoxBorder(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AddSynonymInput, {\n    addSynonym: addSynonym,\n    index: index,\n    product: product,\n    setSynonymBoxBorder: setSynonymBoxBorder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    lg: 2,\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"ml-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FiEdit, {\n    className: \"my-auto\",\n    color: '#E5007D',\n    size: '25',\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => setEnableProductInput(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FaTrashAlt, {\n    className: \"my-auto ml-3\",\n    color: '#E5007D',\n    size: '25',\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => deleteProduct(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }))))));\n};\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, {})(ProductDetails);","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/app/Home/ManageProducts/ProductDetails.js"],"names":["React","useState","useRef","useEffect","connect","AddSynonymInput","FaTrashAlt","FiEdit","AiOutlineCloseCircle","ReactTooltip","Col","Row","ProductDetails","props","product","index","addSynonym","allProducts","inputRef","modifyProductContent","setModifyProductContent","content","enableProductInput","setEnableProductInput","synonymBoxBorder","setSynonymBoxBorder","modifyProduct","deleteProduct","setAllProducts","oldProducts","splice","deleteSynonym","indexProduct","indexSyn","synonyms","current","focus","borderBottom","e","target","value","border","fontSize","fontFamily","color","key","length","map","synonym","cursor","substring","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAiCC,SAAjC,QAAkD,OAAlD;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,oBAAT,QAAqC,gBAArC;AACA,OAAOC,YAAP,MAAyB,eAAzB;AAEA,SACIC,GADJ,EAEIC,GAFJ,QAGO,iBAHP;AAKA,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAErC,QAAM;AAAEC,IAAAA,OAAF;AAAUC,IAAAA,KAAV;AAAgBC,IAAAA,UAAhB;AAA2BC,IAAAA;AAA3B,MAA2CJ,KAAjD;AACA,QAAMK,QAAQ,GAAGhB,MAAM,EAAvB;AACA,QAAM,CAACiB,oBAAD,EAAuBC,uBAAvB,IAAkDnB,QAAQ,CAACgB,WAAW,CAACF,KAAD,CAAX,CAAmBM,OAApB,CAAhE;AACA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CtB,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACuB,gBAAD,EAAmBC,mBAAnB,IAA0CxB,QAAQ,CAAC,KAAD,CAAxD;;AAGA,QAAMyB,aAAa,GAAG,MAAM;AACxB,QAAI;AAAET,MAAAA,WAAF;AAAeF,MAAAA;AAAf,QAAyBF,KAA7B;AACAI,IAAAA,WAAW,CAACF,KAAD,CAAX,CAAmBM,OAAnB,GAA6BF,oBAA7B;AACAI,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACH,GAJD;;AAMA,QAAMI,aAAa,GAAG,MAAM;AACxB,QAAI;AAAEV,MAAAA,WAAF;AAAcW,MAAAA;AAAd,QAAiCf,KAArC;AACA,QAAIgB,WAAW,GAAG,CAAC,GAAGZ,WAAJ,CAAlB;AAEAY,IAAAA,WAAW,CAACC,MAAZ,CAAmBf,KAAnB,EAAyB,CAAzB;AACAa,IAAAA,cAAc,CAACC,WAAD,CAAd;AACH,GAND;;AAQA,QAAME,aAAa,GAAG,CAACC,YAAD,EAAcC,QAAd,KAA2B;AAC7C,QAAI;AAAEhB,MAAAA,WAAF;AAAcW,MAAAA;AAAd,QAAiCf,KAArC;AACA,QAAIgB,WAAW,GAAG,CAAC,GAAGZ,WAAJ,CAAlB;AAEAY,IAAAA,WAAW,CAACG,YAAD,CAAX,CAA0BE,QAA1B,CAAmCJ,MAAnC,CAA0CG,QAA1C,EAAmD,CAAnD;AACAL,IAAAA,cAAc,CAACC,WAAD,CAAd;AACH,GAND;;AAQA1B,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,kBAAkB,IAAIJ,QAAQ,CAACiB,OAAT,CAAiBC,KAAjB,EAAtB;AACH,GAFQ,EAEP,CAACd,kBAAD,CAFO,CAAT;AAIA,sBACA,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,GAAG,EAAEP,KAA1B;AAAiC,IAAA,KAAK,EAAE;AAAEsB,MAAAA,YAAY,EAAE;AAAhB,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKf,kBAAkB,gBAEnB;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,GAAG,EAAEJ,QAFT;AAGI,IAAA,KAAK,EAAEC,oBAHX;AAII,IAAA,QAAQ,EAAGmB,CAAD,IAAOlB,uBAAuB,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ5C;AAKI,IAAA,SAAS,EAAC,iCALd;AAMI,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,mBAAV;AAA8BC,MAAAA,QAAQ,EAAE,MAAxC;AAAgDC,MAAAA,UAAU,EAAE,kBAA5D;AAAgFC,MAAAA,KAAK,EAAE;AAAvF,KANX;AAOI,IAAA,SAAS,EAAGN,CAAD,IAAO;AAAE,UAAGA,CAAC,CAACO,GAAF,KAAU,OAAb,EAAsBnB,aAAa;AAAK,KAPhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFmB,gBAYnB;AAAG,IAAA,SAAS,EAAC,oCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmDZ,OAAO,CAACO,OAA3D,CAbJ,CADJ,CADJ,eAoBI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,OAAO,CAACoB,QAAR,CAAiBY,MAAjB,GAA0B,CAA1B,IAEDhC,OAAO,CAACoB,QAAR,CAAiBa,GAAjB,CAAqB,CAACC,OAAD,EAASf,QAAT,kBACjB,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,QAAV;AAAoB,IAAA,EAAE,EAAE,CAAxB;AAA2B,IAAA,SAAS,EAAC,mCAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQe,OAAO,CAACF,MAAR,GAAiB,EAAjB,gBAEA;AAAG,gBAAS,YAAZ;AAAyB,gBAAUE,OAAnC;AAA4C,IAAA,SAAS,EAAC,SAAtD;AAAgE,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0FD,OAAO,CAACE,SAAR,CAAkB,CAAlB,EAAoB,EAApB,CAA1F,QAFA,gBAIA;AAAG,IAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBF,OAAxB,CANR,eAQI,oBAAC,oBAAD;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,KAAK,EAAE,SAFX;AAGI,IAAA,IAAI,EAAE,IAHV;AAII,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAJX;AAKI,IAAA,OAAO,EAAE,MAAMlB,aAAa,CAAChB,KAAD,EAAOkB,QAAP,CALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ,eAqBI,oBAAC,YAAD;AACI,IAAA,EAAE,EAAC,YADP,CAEI;AAFJ;AAGI,IAAA,SAAS,EAAE,IAHf;AAII,IAAA,SAAS,EAAC,WAJd;AAKI,IAAA,eAAe,EAAC,WALpB;AAMI,IAAA,MAAM,EAAC,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,CADJ,CAHJ,eAoCI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,SAAS,EAAC,oCAAtB;AAA2D,IAAA,KAAK,EAAE;AAACQ,MAAAA,MAAM,EAAEjB,gBAAgB,GAAG,mBAAH,GAAyB;AAAlD,KAAlE;AAA2I,IAAA,OAAO,EAAE,MAAMC,mBAAmB,CAAC,IAAD,CAA7K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAiB,IAAA,UAAU,EAAET,UAA7B;AAAyC,IAAA,KAAK,EAAED,KAAhD;AAAuD,IAAA,OAAO,EAAED,OAAhE;AAAyE,IAAA,mBAAmB,EAAEW,mBAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CApCJ,CADJ,CADJ,eA4CI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,KAAK,EAAE,SAAnC;AAA8C,IAAA,IAAI,EAAE,IAApD;AAA0D,IAAA,KAAK,EAAE;AAAEwB,MAAAA,MAAM,EAAE;AAAV,KAAjE;AAAwF,IAAA,OAAO,EAAG,MAAM1B,qBAAqB,CAAC,IAAD,CAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,cAAtB;AAAqC,IAAA,KAAK,EAAE,SAA5C;AAAuD,IAAA,IAAI,EAAE,IAA7D;AAAmE,IAAA,KAAK,EAAE;AAAE0B,MAAAA,MAAM,EAAE;AAAV,KAA1E;AAAiG,IAAA,OAAO,EAAG,MAAMtB,aAAa,EAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CA5CJ,CADJ,CApBJ,CADA;AA4EH,CA/GM;;AAiHP,MAAMwB,eAAe,GAAIC,KAAD,KAAY,EAAZ,CAAxB;;AAIA,eAAehD,OAAO,CAAC+C,eAAD,EAAkB,EAAlB,CAAP,CAA6BvC,cAA7B,CAAf","sourcesContent":["import React, { useState, useRef,useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AddSynonymInput from './AddSynonymInput';\r\nimport { FaTrashAlt } from 'react-icons/fa';\r\nimport { FiEdit } from 'react-icons/fi';\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport {\r\n    Col,\r\n    Row,\r\n} from 'react-bootstrap';\r\n\r\nexport const ProductDetails = (props) => {\r\n\r\n    const { product,index,addSynonym,allProducts } = props;\r\n    const inputRef = useRef();\r\n    const [modifyProductContent, setModifyProductContent] = useState(allProducts[index].content);\r\n    const [enableProductInput, setEnableProductInput] = useState(false);\r\n    const [synonymBoxBorder, setSynonymBoxBorder] = useState(false);\r\n\r\n\r\n    const modifyProduct = () => {\r\n        let { allProducts, index } = props;\r\n        allProducts[index].content = modifyProductContent;\r\n        setEnableProductInput(false);\r\n    };\r\n\r\n    const deleteProduct = () => {\r\n        let { allProducts,setAllProducts } = props;\r\n        let oldProducts = [...allProducts];\r\n\r\n        oldProducts.splice(index,1);\r\n        setAllProducts(oldProducts);    \r\n    };\r\n\r\n    const deleteSynonym = (indexProduct,indexSyn) => {\r\n        let { allProducts,setAllProducts } = props;\r\n        let oldProducts = [...allProducts];\r\n\r\n        oldProducts[indexProduct].synonyms.splice(indexSyn,1);\r\n        setAllProducts(oldProducts);\r\n    }\r\n\r\n    useEffect(() => {\r\n        enableProductInput && inputRef.current.focus();\r\n    },[enableProductInput]);\r\n\r\n    return (\r\n    <Row className=\"p-3\" key={index} style={{ borderBottom: '1px solid #EBEDF0' }}>\r\n        <Col lg={5} className=\"d-flex\">\r\n            <div className=\"mr-auto d-flex\">\r\n                {enableProductInput\r\n                ?\r\n                <input \r\n                    type=\"text\" \r\n                    ref={inputRef} \r\n                    value={modifyProductContent}\r\n                    onChange={(e) => setModifyProductContent(e.target.value)}\r\n                    className=\"my-auto synonym-box-white w-100\" \r\n                    style={{ border: '1px solid #818E94',fontSize: '15px', fontFamily: 'Poppins SemiBold', color: '#818E94' }}\r\n                    onKeyDown={(e) => { if(e.key === 'Enter') modifyProduct(); }}\r\n                />\r\n                :\r\n                <p className=\"my-auto manage-product-entity-name\">{product.content}</p>\r\n                }\r\n            </div>\r\n        </Col>\r\n\r\n        <Col lg={7}>\r\n            <Row>\r\n                <Col lg={10}>\r\n                    <Row className=\"mx-0\">\r\n                        {product.synonyms.length > 0\r\n                        &&\r\n                        product.synonyms.map((synonym,indexSyn) => \r\n                            <Col key={indexSyn} lg={5} className=\"synonym-box-gray d-flex mr-1 mb-2\">\r\n                                <Row className=\"d-flex mx-auto\">\r\n                                    {\r\n                                        synonym.length > 11\r\n                                        ?\r\n                                        <p data-for='synonymTip' data-tip={synonym} className=\"my-auto\" style={{cursor: 'help'}}>{synonym.substring(0,10)}...</p>\r\n                                        :\r\n                                        <p className=\"my-auto\">{synonym}</p>\r\n                                    }\r\n                                    <AiOutlineCloseCircle \r\n                                        className=\"my-auto ml-1\" \r\n                                        color={'#818E94'} \r\n                                        size={'17'} \r\n                                        style={{ cursor: 'pointer' }} \r\n                                        onClick={() => deleteSynonym(index,indexSyn)}\r\n                                    />\r\n                                </Row>\r\n                                {/* <ReactTooltip id='synonymTooltip' type='error'>\r\n                                    <span>Show happy face</span>\r\n                                </ReactTooltip> */}\r\n\r\n                                <ReactTooltip \r\n                                    id='synonymTip'\r\n                                    // className='custom-color-no-arrow' \r\n                                    delayHide={1000} \r\n                                    textColor='#5F4B8BFF' \r\n                                    backgroundColor='#E69A8DFF' \r\n                                    effect='solid'\r\n                                />\r\n                            </Col>    \r\n                        )}\r\n\r\n                        <Col lg={4} className=\"synonym-box-white d-flex mr-1 mb-2\" style={{border: synonymBoxBorder ? '1px solid #818E94' : '1px dashed #818E94'}} onClick={() => setSynonymBoxBorder(true)}>\r\n                            <AddSynonymInput addSynonym={addSynonym} index={index} product={product} setSynonymBoxBorder={setSynonymBoxBorder} />\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n                <Col lg={2} className=\"d-flex\">\r\n                    <Row className=\"ml-auto\">\r\n                        <FiEdit className=\"my-auto\" color={'#E5007D'} size={'25'} style={{ cursor: 'pointer' }} onClick={ () => setEnableProductInput(true) }/>\r\n                        <FaTrashAlt className=\"my-auto ml-3\" color={'#E5007D'} size={'25'} style={{ cursor: 'pointer' }} onClick={ () => deleteProduct() }/>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Col>\r\n    </Row> \r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    \r\n});\r\n\r\nexport default connect(mapStateToProps, {})(ProductDetails)\r\n"]},"metadata":{},"sourceType":"module"}