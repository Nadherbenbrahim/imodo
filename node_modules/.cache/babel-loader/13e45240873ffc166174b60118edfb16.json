{"ast":null,"code":"import axios from 'axios';\nimport { host } from '../../config';\nexport const removeSynonym = (synonymValue, product, indexSyn, idPage, categorySelected) => {\n  return dispatch => {\n    let objectToSend = {\n      index: indexSyn,\n      id: product._id,\n      synonym: synonymValue\n    };\n    console.log(\"Let's removeSynonym to the product => \", objectToSend);\n    let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/removesyn/\" : \"/api/v1/secure/pagesInsta/removesyn/\";\n    let fullUrl = `${host}${detectHost}${Page.id}`;\n    return axios.put(fullUrl, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"removeSynonym response api =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      }); // To update the existing products\n\n      let findCategorySelected = categories.find(cat => {\n        return cat._id === categorySelected._id;\n      });\n\n      if (findCategorySelected) {\n        dispatch({\n          type: 'SELECT_CATEGORIE',\n          payload: findCategorySelected\n        });\n      }\n\n      ;\n    }).catch(err => {\n      console.log(\"removeSynonym error api =>\", err);\n    });\n  };\n};\nexport const addSynonym = (synonymValue, categorySelected, product, Page) => {\n  return dispatch => {\n    let objectToSend = {\n      idEntity: categorySelected._id,\n      idChildren: product._id,\n      synonyms: synonymValue\n    };\n    console.log(\"Let's addSynonym to the product => \", objectToSend);\n    let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/synonymssupdate/\" : \"/api/v1/secure/pagesInsta/synonymssupdate/\";\n    let fullUrl = `${host}${detectHost}${Page.id}`;\n    return axios.put(fullUrl, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"addSynonym response api =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      }); // To update the existing products\n\n      let findCategorySelected = categories.find(cat => {\n        return cat._id === categorySelected._id;\n      });\n\n      if (findCategorySelected) {\n        dispatch({\n          type: 'SELECT_CATEGORIE',\n          payload: findCategorySelected\n        });\n      }\n\n      ;\n    }).catch(err => {\n      console.log(\"addSynonym error api =>\", err);\n    });\n  };\n};\nexport const removeProduct = (categorySelected, product, Page) => {\n  return dispatch => {\n    let objectToSend = {\n      entity: categorySelected._id,\n      id: product._id,\n      productName: product.content\n    };\n    console.log(\"Let's removeProduct => \", objectToSend);\n    let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/contentremove/\" : \"/api/v1/secure/pagesInsta/contentremove/\";\n    let fullUrl = `${host}${detectHost}${Page.id}`;\n    return axios.put(fullUrl, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"removeProduct response api =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      }); // To update the existing products\n\n      let findCategorySelected = categories.find(cat => {\n        return cat._id === categorySelected._id;\n      });\n\n      if (findCategorySelected) {\n        dispatch({\n          type: 'SELECT_CATEGORIE',\n          payload: findCategorySelected\n        });\n      }\n\n      ;\n    }).catch(err => {\n      console.log(\"removeProduct error api =>\", err);\n    });\n  };\n};\nexport const updateProductName = (newProductName, categorySelected, product, Page) => {\n  return dispatch => {\n    let objectToSend = {\n      name: newProductName,\n      productName: categorySelected.name,\n      id: categorySelected._id,\n      idChildren: product._id\n    }; // console.log(\"Let's update the product => \", objectToSend);\n\n    let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/contentupdate/\" : \"/api/v1/secure/pagesInsta/contentupdate/\";\n    let fullUrl = `${host}${detectHost}${Page.id}`;\n    return axios.put(fullUrl, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"updateProductName response api =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      }); // To update the existing products\n\n      let findCategorySelected = categories.find(cat => {\n        return cat._id === categorySelected._id;\n      });\n\n      if (findCategorySelected) {\n        dispatch({\n          type: 'SELECT_CATEGORIE',\n          payload: findCategorySelected\n        });\n      }\n\n      ;\n    }).catch(err => {\n      console.log(\"updateProductName error api =>\", err);\n    });\n  };\n};\nexport const updateCategoryName = (categorySelected, categoryName, Page) => {\n  return dispatch => {\n    let objectToSend = {\n      id: categorySelected._id,\n      name: categoryName\n    }; // console.log(\"Let's update the category\", objectToSend, 'id Page', Page.id);\n\n    let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/nameentiteupdate/\" : \"/api/v1/secure/pagesInsta/nameentiteupdate/\";\n    let fullUrl = `${host}${detectHost}${Page.id}`;\n    return axios.put(fullUrl, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"updateCategoryName response api =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      });\n    }).catch(err => {\n      console.log(\"updateCategoryName error api =>\", err);\n    });\n  };\n};\nexport const addCategory = objectToSend => {\n  return dispatch => {\n    // console.log(\"add New category\", objectToSend);\n    return axios.post(host + `/api/v1/secure/pages/entities/add/${objectToSend.idPage}`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"addCategory response api =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      });\n    }).catch(err => {\n      console.log(\"addCategory error api =>\", err);\n    });\n  };\n};\nexport const addProductInCategory = (category, page, newProductName) => {\n  return dispatch => {\n    let objectToSend = {\n      id: category._id,\n      entity: {\n        synonyms: [newProductName],\n        content: newProductName\n      }\n    }; // console.log(\"add New Product in category\", objectToSend);\n\n    return axios.put(host + `/api/v1/secure/pages/valuesadd/${page.id}`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"addProductInCategory response api =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      }); // To update the existing products\n\n      let findCategorySelected = categories.find(cat => {\n        return cat._id === category._id;\n      });\n\n      if (findCategorySelected) {\n        dispatch({\n          type: 'SELECT_CATEGORIE',\n          payload: findCategorySelected\n        });\n      }\n\n      ;\n    }).catch(err => {\n      console.log(\"addProductInCategory error api =>\", err);\n    });\n  };\n};\nexport const deleteCategory = (category, page) => {\n  return dispatch => {\n    // console.log(\"Rak bech tfasakh l category hedhu =>\", category);\n    // console.log(\"Rak bech tfasakh l category men page hedhi =>\", page);\n    let objectToSend = {\n      id: category._id\n    };\n    return axios.put(host + `/api/v1/secure/pages/entiteremove/${page.id}`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"deleteCategory response api =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      }); // dispatch({\n      //     type: 'GET_CATEGORIES',\n      //     payload: categories\n      // });\n    }).catch(err => {\n      console.log(\"deleteCategory error api =>\", err);\n    });\n  };\n};\nexport const selectProduct = product => {\n  return dispatch => {\n    console.log(\"Redux selected Product =>\", product);\n    dispatch({\n      type: 'SELECT_PRODUCT',\n      payload: product\n    });\n  };\n};\nexport const selectCategory = (category, history) => {\n  return dispatch => {\n    // console.log(\"Redux selected Category! =>\", category);\n    dispatch({\n      type: 'SELECT_CATEGORIE',\n      payload: category\n    });\n    history.push('update-products');\n  };\n};\nexport const getCategories = page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/project/get/entitiesproject/${page.platform}/${page.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      // console.log(\"all Categories of this page => =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      });\n    }).catch(err => console.log(\"err getCategories\", err));\n  };\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/myProductsActions.js"],"names":["axios","host","removeSynonym","synonymValue","product","indexSyn","idPage","categorySelected","dispatch","objectToSend","index","id","_id","synonym","console","log","detectHost","Page","platform","fullUrl","put","headers","localStorage","getItem","then","res","data","categories","length","map","cat","default","splice","type","payload","findCategorySelected","find","catch","err","addSynonym","idEntity","idChildren","synonyms","removeProduct","entity","productName","content","updateProductName","newProductName","name","updateCategoryName","categoryName","addCategory","post","addProductInCategory","category","page","deleteCategory","selectProduct","selectCategory","history","push","getCategories","get"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { host } from '../../config';\r\n\r\nexport const removeSynonym = (synonymValue, product, indexSyn, idPage, categorySelected) => {\r\n    return (dispatch) => {\r\n       \r\n        let objectToSend = {\r\n            index : indexSyn,\r\n            id : product._id,\r\n            synonym: synonymValue,\r\n        }\r\n        console.log(\"Let's removeSynonym to the product => \", objectToSend);\r\n\r\n        let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/removesyn/\" : \"/api/v1/secure/pagesInsta/removesyn/\";\r\n        let fullUrl = `${host}${detectHost}${Page.id}`;\r\n\r\n        return axios.put(fullUrl,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"removeSynonym response api =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n\r\n            // To update the existing products\r\n            let findCategorySelected = categories.find((cat) => {\r\n                return cat._id === categorySelected._id\r\n            })\r\n\r\n            if(findCategorySelected) {\r\n                dispatch({\r\n                    type: 'SELECT_CATEGORIE',\r\n                    payload: findCategorySelected\r\n                });\r\n            };\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"removeSynonym error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const addSynonym = (synonymValue, categorySelected, product, Page) => {\r\n    return (dispatch) => {\r\n        \r\n        let objectToSend = {\r\n            idEntity : categorySelected._id,\r\n            idChildren : product._id,\r\n            synonyms: synonymValue,\r\n        }\r\n        console.log(\"Let's addSynonym to the product => \", objectToSend);\r\n\r\n        let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/synonymssupdate/\" : \"/api/v1/secure/pagesInsta/synonymssupdate/\";\r\n        let fullUrl = `${host}${detectHost}${Page.id}`;\r\n\r\n        return axios.put(fullUrl,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"addSynonym response api =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n\r\n            // To update the existing products\r\n            let findCategorySelected = categories.find((cat) => {\r\n                return cat._id === categorySelected._id\r\n            })\r\n\r\n            if(findCategorySelected) {\r\n                dispatch({\r\n                    type: 'SELECT_CATEGORIE',\r\n                    payload: findCategorySelected\r\n                });\r\n            };\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"addSynonym error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const removeProduct = (categorySelected, product, Page) => {\r\n    return (dispatch) => {\r\n        \r\n        let objectToSend = {\r\n            entity : categorySelected._id,\r\n            id: product._id,\r\n            productName: product.content\r\n        }\r\n        console.log(\"Let's removeProduct => \", objectToSend);\r\n\r\n        let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/contentremove/\" : \"/api/v1/secure/pagesInsta/contentremove/\";\r\n        let fullUrl = `${host}${detectHost}${Page.id}`;\r\n\r\n        return axios.put(fullUrl,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"removeProduct response api =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n\r\n            // To update the existing products\r\n            let findCategorySelected = categories.find((cat) => {\r\n                return cat._id === categorySelected._id\r\n            })\r\n\r\n            if(findCategorySelected) {\r\n                dispatch({\r\n                    type: 'SELECT_CATEGORIE',\r\n                    payload: findCategorySelected\r\n                });\r\n            };\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"removeProduct error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const updateProductName = (newProductName, categorySelected, product, Page) => {\r\n    return (dispatch) => {\r\n        \r\n        let objectToSend = {\r\n            name : newProductName,\r\n            productName: categorySelected.name,\r\n            id : categorySelected._id,\r\n            idChildren : product._id,\r\n        }\r\n        // console.log(\"Let's update the product => \", objectToSend);\r\n\r\n        let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/contentupdate/\" : \"/api/v1/secure/pagesInsta/contentupdate/\";\r\n        let fullUrl = `${host}${detectHost}${Page.id}`;\r\n\r\n        return axios.put(fullUrl,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"updateProductName response api =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n\r\n            // To update the existing products\r\n            let findCategorySelected = categories.find((cat) => {\r\n                return cat._id === categorySelected._id\r\n            })\r\n\r\n            if(findCategorySelected) {\r\n                dispatch({\r\n                    type: 'SELECT_CATEGORIE',\r\n                    payload: findCategorySelected\r\n                });\r\n            };\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"updateProductName error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const updateCategoryName = (categorySelected,categoryName,Page) => {\r\n    return (dispatch) => {\r\n        \r\n        let objectToSend = {\r\n            id : categorySelected._id,\r\n            name: categoryName,\r\n        };\r\n        // console.log(\"Let's update the category\", objectToSend, 'id Page', Page.id);\r\n        \r\n        let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/nameentiteupdate/\" : \"/api/v1/secure/pagesInsta/nameentiteupdate/\";\r\n        let fullUrl = `${host}${detectHost}${Page.id}`;\r\n        \r\n        return axios.put(fullUrl,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"updateCategoryName response api =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"updateCategoryName error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const addCategory = (objectToSend) => {\r\n    return (dispatch) => {\r\n        // console.log(\"add New category\", objectToSend);\r\n\r\n        return axios.post(host + `/api/v1/secure/pages/entities/add/${objectToSend.idPage}`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"addCategory response api =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"addCategory error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const addProductInCategory = (category,page,newProductName) => {\r\n    return (dispatch) => {\r\n     \r\n        let objectToSend = {\r\n            id: category._id,\r\n            entity: {\r\n                synonyms: [newProductName],\r\n                content: newProductName,\r\n            },\r\n        };\r\n\r\n        // console.log(\"add New Product in category\", objectToSend);\r\n\r\n        return axios.put(host + `/api/v1/secure/pages/valuesadd/${page.id}`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"addProductInCategory response api =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n\r\n            // To update the existing products\r\n            let findCategorySelected = categories.find((cat) => {\r\n                return cat._id === category._id\r\n            })\r\n\r\n            if(findCategorySelected) {\r\n                dispatch({\r\n                    type: 'SELECT_CATEGORIE',\r\n                    payload: findCategorySelected\r\n                });\r\n            };\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"addProductInCategory error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const deleteCategory = (category,page) => {\r\n    return (dispatch) => {\r\n        // console.log(\"Rak bech tfasakh l category hedhu =>\", category);\r\n        // console.log(\"Rak bech tfasakh l category men page hedhi =>\", page);\r\n        \r\n        let objectToSend = {\r\n            id: category._id\r\n        };\r\n\r\n        return axios.put(host + `/api/v1/secure/pages/entiteremove/${page.id}`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"deleteCategory response api =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n\r\n            // dispatch({\r\n            //     type: 'GET_CATEGORIES',\r\n            //     payload: categories\r\n            // });\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"deleteCategory error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const selectProduct = (product) => {\r\n    return (dispatch) => {\r\n        console.log(\"Redux selected Product =>\", product);\r\n        \r\n        dispatch({\r\n            type: 'SELECT_PRODUCT',\r\n            payload: product,\r\n        });\r\n    };\r\n};\r\n\r\nexport const selectCategory = (category,history) => {\r\n    return (dispatch) => {\r\n        // console.log(\"Redux selected Category! =>\", category);\r\n        \r\n        dispatch({\r\n            type: 'SELECT_CATEGORIE',\r\n            payload: category\r\n        });\r\n        history.push('update-products');\r\n    };\r\n};\r\n\r\nexport const getCategories = (page) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + `/api/v1/secure/project/get/entitiesproject/${page.platform}/${page.id}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log(\"all Categories of this page => =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n        })\r\n        .catch((err) => console.log(\"err getCategories\", err))\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}