{"ast":null,"code":"import react from 'react';\nimport io from 'socket.io-client';\nimport { host } from '../config';\nimport { connect } from 'react-redux'; // import { connect } from 'react-redux';\n\nimport { chatAction } from '../actions/index';\nlet socket = io.connect(host, {\n  secure: true\n});\nexport function sendMessage(obj) {\n  socket.emit(\"chat.message\", obj);\n}\nexport function getMessage(props) {\n  socket.on(\"chat.message\", message => {\n    console.log('test message', message);\n    props.chat(message);\n  });\n}\n\nconst mapDispatchToProps = dispatch => ({\n  chat: message => dispatch(chatAction(message))\n});\n\nexport default connect(null, mapDispatchToProps)(socket);","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/sockets/chat.js"],"names":["react","io","host","connect","chatAction","socket","secure","sendMessage","obj","emit","getMessage","props","on","message","console","log","chat","mapDispatchToProps","dispatch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,IAAIC,MAAM,GAAGJ,EAAE,CAACE,OAAH,CAAWD,IAAX,EAAiB;AAAEI,EAAAA,MAAM,EAAE;AAAV,CAAjB,CAAb;AAEA,OAAO,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AAC7BH,EAAAA,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA4BD,GAA5B;AACH;AAED,OAAO,SAASE,UAAT,CAAoBC,KAApB,EAA2B;AAC9BN,EAAAA,MAAM,CAACO,EAAP,CAAU,cAAV,EAA2BC,OAAD,IAAa;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,OAA5B;AACAF,IAAAA,KAAK,CAACK,IAAN,CAAWH,OAAX;AACH,GAHD;AAIH;;AACD,MAAMI,kBAAkB,GAAIC,QAAD,KAAe;AACtCF,EAAAA,IAAI,EAAGH,OAAD,IAAaK,QAAQ,CAACd,UAAU,CAACS,OAAD,CAAX;AADW,CAAf,CAA3B;;AAGA,eAAeV,OAAO,CAAC,IAAD,EAAOc,kBAAP,CAAP,CAAkCZ,MAAlC,CAAf","sourcesContent":["import react from 'react'\r\nimport io from 'socket.io-client';\r\nimport { host } from '../config'\r\nimport { connect } from 'react-redux';\r\n// import { connect } from 'react-redux';\r\nimport { chatAction } from '../actions/index'\r\nlet socket = io.connect(host, { secure: true });\r\n\r\nexport function sendMessage(obj) {\r\n    socket.emit(\"chat.message\", obj)\r\n}\r\n\r\nexport function getMessage(props) {\r\n    socket.on(\"chat.message\", (message) => {\r\n        console.log('test message', message)\r\n        props.chat(message)\r\n    })\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    chat: (message) => dispatch(chatAction(message))\r\n})\r\nexport default connect(null, mapDispatchToProps)(socket)"]},"metadata":{},"sourceType":"module"}