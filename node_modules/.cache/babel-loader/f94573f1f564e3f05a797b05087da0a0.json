{"ast":null,"code":"var _jsxFileName = \"/usr/work/smart_front_oussema/src/components/Stats.js\";\nimport React, { useEffect } from 'react';\n\nfunction Stats(props) {\n  useEffect(() => {\n    props.comments(props.postId.post.postId);\n  }, []);\n  return React.createElement(\"div\", {\n    style: {\n      fontSize: 17,\n      display: \"block\",\n      margin: \"20px 0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Comments: \", props.comments[0].events ? props.comments[0].events.length : 0), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Matched: \", props.comments[0].events ? props.comments[0].events.filter(el => el.success == true).length : 0), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Performance: 56%\"));\n}\n\nconst mapStateToProps = state => ({\n  comments: state.comments\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    comments: id => dispatch(getComments(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stats);","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/components/Stats.js"],"names":["React","useEffect","Stats","props","comments","postId","post","fontSize","display","margin","events","length","filter","el","success","mapStateToProps","state","mapDispatchToProps","dispatch","id","getComments","connect"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClBF,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACC,QAAN,CAAeD,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBD,MAAjC;AACH,GAFQ,EAEN,EAFM,CAAT;AAGA,SACI;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,OAAO,EAAE,OAAzB;AAAkCC,MAAAA,MAAM,EAAE;AAA1C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAiBN,KAAK,CAACC,QAAN,CAAe,CAAf,EAAkBM,MAAlB,GAA2BP,KAAK,CAACC,QAAN,CAAe,CAAf,EAAkBM,MAAlB,CAAyBC,MAApD,GAA6D,CAA9E,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgBR,KAAK,CAACC,QAAN,CAAe,CAAf,EAAkBM,MAAlB,GAA2BP,KAAK,CAACC,QAAN,CAAe,CAAf,EAAkBM,MAAlB,CAAyBE,MAAzB,CAAgCC,EAAE,IAAIA,EAAE,CAACC,OAAH,IAAc,IAApD,EAA0DH,MAArF,GAA8F,CAA9G,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,CADJ;AAQH;;AAED,MAAMI,eAAe,GAAIC,KAAD,KAAY;AAChCZ,EAAAA,QAAQ,EAAEY,KAAK,CAACZ;AADgB,CAAZ,CAAxB;;AAIA,MAAMa,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHd,IAAAA,QAAQ,EAAGe,EAAD,IAAQD,QAAQ,CAACE,WAAW,CAACD,EAAD,CAAZ;AADvB,GAAP;AAGH,CAJD;;AAMA,eAAeE,OAAO,CAACN,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,KAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\n\r\nfunction Stats(props) {\r\n    useEffect(() => {\r\n        props.comments(props.postId.post.postId)\r\n    }, [])\r\n    return (\r\n        <div style={{ fontSize: 17, display: \"block\", margin: \"20px 0\" }}>\r\n            {/* <span style={{ fontSize: 17, color: \"#3B5998\", display: \"block\", margin: \"20px 0\" }}>{el.post.hasOwnProperty(\"message\") ? (el.post.message.length < 30 ? el.post.message : el.post.message.slice(0, 30) + \"...\") : \"Timeline Post\"}</span> */}\r\n            <span>Comments: {props.comments[0].events ? props.comments[0].events.length : 0}</span>\r\n            <span>Matched: {props.comments[0].events ? props.comments[0].events.filter(el => el.success == true).length : 0}</span>\r\n            <span>Performance: 56%</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    comments: state.comments\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        comments: (id) => dispatch(getComments(id)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Stats)\r\n"]},"metadata":{},"sourceType":"module"}