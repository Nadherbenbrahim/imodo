{"ast":null,"code":"import axios from 'axios';\nimport { host, trainAgentHost } from '../../config';\nexport const answerComment = (Page, project, comment, answer) => {\n  return dispatch => {\n    // console.log(\"Get from here\", project);\n    let objectToSend = {\n      logs: comment,\n      answer: answer,\n      project: project\n    };\n    console.log(\"im sending answerComment to nour\", objectToSend);\n    return axios.post(host + `/api/v1/secure/logEvent/answer/comment/${Page.platform}`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('answerComment post APi Response =>', res.data.data); // let commentsMatched = [];\n      // let commentsNotMatched = []; \n      // if(res.data.data[0].events) {\n      //     res.data.data[0].events.map(comment => {\n      //         if(comment.success) {\n      //             commentsMatched.push(comment);\n      //         } else {\n      //             commentsNotMatched.push(comment);\n      //         }\n      //     });\n      // }\n      // dispatch({\n      //     type: 'GET_LOGS_BY_PAGE',\n      //     payload: res.data.data,\n      //     payload1: commentsMatched,\n      //     payload2: commentsNotMatched,\n      // });\n    }).catch(err => console.log(\"answerComment post Api error  =>\", err));\n  };\n};\nexport const getLogs = idPostOrPage => {\n  return dispatch => {\n    // console.log(\"Get from here\", project);\n    return axios.get(host + `/api/v1/secure/logEvent/post/${idPostOrPage}/all`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('getLogs post APi Response =>', res.data.data);\n      let commentsMatched = [];\n      let commentsNotMatched = [];\n\n      if (res.data.data[0].events) {\n        console.log(\"Seeing Events ....\");\n        res.data.data[0].events.map(comment => {\n          if (comment.success) {\n            commentsMatched.push(comment);\n          } else {\n            commentsNotMatched.push(comment);\n          }\n        });\n        console.log(\"Matched =>\", commentsMatched);\n        console.log(\"Not Matched =>\", commentsNotMatched);\n      }\n\n      dispatch({\n        type: 'GET_LOGS_BY_PAGE',\n        payload: res.data.data,\n        payload1: commentsMatched,\n        payload2: commentsNotMatched\n      });\n    }).catch(err => console.log(\"getLogs post Api error  =>\", err));\n  };\n};\nexport const deleteProjectByPage = projet => {\n  return dispatch => {\n    let objectToSend = {\n      project: projet\n    };\n    return axios.put(host + `/api/v1/secure/project/remove/project`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('deleteProjectByPage post APi Response =>', res.data.data);\n      dispatch({\n        type: 'GET_PROJECT_BY_PAGE',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"deleteProjectByPage post Api error  =>\", err));\n  };\n};\nexport const goToWizardConfig = (projet, Page, history) => {\n  return dispatch => {\n    // Detect intent Type \n    let intentDetection = projet.post.idPost === projet.post.page.idPage;\n    projet.post.id = projet.post.idPost;\n    console.log('Before going to wizard Config', projet.post);\n    dispatch({\n      type: 'FROM_MY_AGENTS_TO_STEP_3_WIZARD',\n      payload: 2,\n      payload1: projet._id,\n      payload2: intentDetection ? \"generic\" : \"default\",\n      payload3: Page,\n      payload4: projet.post\n    });\n    history.push('/home/auto-wizard');\n    dispatch({\n      type: 'SELECT_WIZARD_PAGE',\n      payload: Page\n    });\n  };\n};\nexport const setAgentsSelectedProject = (project, history) => {\n  return dispatch => {\n    dispatch({\n      type: 'SET_AGENTS_PROJECT',\n      payload: project\n    });\n    history.push('/home/my-agents-messages');\n  };\n};\nexport const getProjectByPage = Page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/pages/get/project/${Page.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('getProjectByPage post APi Response =>', res.data.data);\n      dispatch({\n        type: 'GET_PROJECT_BY_PAGE',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"getProjectByPage post Api error  =>\", err));\n  };\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/myAgentsActions.js"],"names":["axios","host","trainAgentHost","answerComment","Page","project","comment","answer","dispatch","objectToSend","logs","console","log","post","platform","headers","localStorage","getItem","then","res","data","catch","err","getLogs","idPostOrPage","get","commentsMatched","commentsNotMatched","events","map","success","push","type","payload","payload1","payload2","deleteProjectByPage","projet","put","goToWizardConfig","history","intentDetection","idPost","page","idPage","id","_id","payload3","payload4","setAgentsSelectedProject","getProjectByPage"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { host,trainAgentHost } from '../../config';\r\n\r\n\r\n\r\nexport const answerComment = (Page,project,comment,answer) => {\r\n    return (dispatch) => {\r\n        // console.log(\"Get from here\", project);\r\n    \r\n        let objectToSend = {\r\n            logs: comment,\r\n            answer: answer,\r\n            project: project, \r\n        };\r\n\r\n        console.log(\"im sending answerComment to nour\", objectToSend);\r\n\r\n        return axios.post(host + `/api/v1/secure/logEvent/answer/comment/${Page.platform}`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('answerComment post APi Response =>', res.data.data);\r\n\r\n            // let commentsMatched = [];\r\n            // let commentsNotMatched = []; \r\n\r\n            // if(res.data.data[0].events) {\r\n            //     res.data.data[0].events.map(comment => {\r\n            //         if(comment.success) {\r\n            //             commentsMatched.push(comment);\r\n            //         } else {\r\n            //             commentsNotMatched.push(comment);\r\n            //         }\r\n            //     });\r\n            // }\r\n\r\n            // dispatch({\r\n            //     type: 'GET_LOGS_BY_PAGE',\r\n            //     payload: res.data.data,\r\n            //     payload1: commentsMatched,\r\n            //     payload2: commentsNotMatched,\r\n            // });\r\n            \r\n        })\r\n        .catch((err) => console.log(\"answerComment post Api error  =>\", err))\r\n    }\r\n};\r\n\r\nexport const getLogs = (idPostOrPage) => {\r\n    return (dispatch) => {\r\n        // console.log(\"Get from here\", project);\r\n\r\n        return axios.get(host + `/api/v1/secure/logEvent/post/${idPostOrPage}/all`,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('getLogs post APi Response =>', res.data.data);\r\n\r\n            let commentsMatched = [];\r\n            let commentsNotMatched = []; \r\n\r\n            if(res.data.data[0].events) {\r\n                console.log(\"Seeing Events ....\");\r\n                res.data.data[0].events.map(comment => {\r\n                    if(comment.success) {\r\n                        commentsMatched.push(comment);\r\n                    } else {\r\n                        commentsNotMatched.push(comment);\r\n                    }\r\n                });\r\n\r\n                console.log(\"Matched =>\", commentsMatched)\r\n                console.log(\"Not Matched =>\", commentsNotMatched)\r\n\r\n\r\n            }\r\n\r\n            dispatch({\r\n                type: 'GET_LOGS_BY_PAGE',\r\n                payload: res.data.data,\r\n                payload1: commentsMatched,\r\n                payload2: commentsNotMatched,\r\n            });\r\n            \r\n        })\r\n        .catch((err) => console.log(\"getLogs post Api error  =>\", err))\r\n    }\r\n};\r\n\r\nexport const deleteProjectByPage = (projet) => {\r\n    return (dispatch) => {\r\n\r\n        let objectToSend = {\r\n            project: projet,\r\n        };\r\n\r\n        return axios.put(host + `/api/v1/secure/project/remove/project`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('deleteProjectByPage post APi Response =>', res.data.data);\r\n\r\n            dispatch({\r\n                type: 'GET_PROJECT_BY_PAGE',\r\n                payload: res.data.data,\r\n            });\r\n        })\r\n        .catch((err) => console.log(\"deleteProjectByPage post Api error  =>\", err) )\r\n    }\r\n};\r\n\r\nexport const goToWizardConfig = (projet,Page,history) => {\r\n    return (dispatch) => {\r\n        // Detect intent Type \r\n        let intentDetection = projet.post.idPost === projet.post.page.idPage;\r\n\r\n        projet.post.id = projet.post.idPost;\r\n\r\n        console.log('Before going to wizard Config', projet.post);\r\n        dispatch({\r\n            type: 'FROM_MY_AGENTS_TO_STEP_3_WIZARD',\r\n            payload: 2,\r\n            payload1: projet._id,\r\n            payload2: intentDetection ? \"generic\" : \"default\",\r\n            payload3: Page,\r\n            payload4: projet.post,\r\n        });\r\n\r\n        history.push('/home/auto-wizard');\r\n\r\n        dispatch({\r\n            type: 'SELECT_WIZARD_PAGE', \r\n            payload: Page,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const setAgentsSelectedProject = (project,history) => {\r\n    return (dispatch) => {\r\n \r\n        dispatch({\r\n            type: 'SET_AGENTS_PROJECT',\r\n            payload: project,\r\n        });\r\n       \r\n        history.push('/home/my-agents-messages');\r\n    }\r\n};\r\n\r\nexport const getProjectByPage = (Page) => {\r\n    return (dispatch) => {\r\n \r\n        return axios.get(host + `/api/v1/secure/pages/get/project/${Page.id}`,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('getProjectByPage post APi Response =>', res.data.data);\r\n\r\n            dispatch({\r\n                type: 'GET_PROJECT_BY_PAGE',\r\n                payload: res.data.data,\r\n            });\r\n        })\r\n        .catch((err) => console.log(\"getProjectByPage post Api error  =>\", err) )\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}