{"ast":null,"code":"import axios from 'axios';\nimport { host } from '../../config';\nexport const updateProductName = (newProductName, categorySelected, product, idPage) => {\n  return dispatch => {\n    let objectToSend = {\n      name: newProductName,\n      productName: categorySelected.name,\n      id: categorySelected._id,\n      idChildren: product._id\n    }; // console.log(\"Let's update the product => \", objectToSend);\n\n    return axios.put(host + `/api/v1/secure/pages/contentupdate/${idPage}`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"updateProductName response api =>\", res.data.data); // let categories = res.data.data;\n      // if(categories.length > 0) {\n      //     categories.map((cat,index) =>\n      //         cat.default === true && categories.splice(index,1)\n      //     );\n      // };\n      // dispatch({\n      //     type: 'GET_CATEGORIES',\n      //     payload: categories\n      // });\n    }).catch(err => {\n      console.log(\"updateProductName error api =>\", err);\n    });\n  };\n};\nexport const updateCategoryName = (categorySelected, categoryName, idPage) => {\n  return dispatch => {\n    let objectToSend = {\n      id: categorySelected._id,\n      name: categoryName\n    };\n    console.log(\"Let's update the category\", objectToSend, 'id Page', idPage);\n    return axios.put(host + `/api/v1/secure/pages/nameentiteupdate/${idPage}`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"updateCategoryName response api =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      });\n    }).catch(err => {\n      console.log(\"updateCategoryName error api =>\", err);\n    });\n  };\n};\nexport const addCategory = objectToSend => {\n  return dispatch => {\n    // console.log(\"add New category\", objectToSend);\n    return axios.post(host + `/api/v1/secure/pages/entities/add/${objectToSend.idPage}`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"addCategory response api =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      });\n    }).catch(err => {\n      console.log(\"addCategory error api =>\", err);\n    });\n  };\n};\nexport const addProductInCategory = (category, page, newProductName) => {\n  return dispatch => {\n    let objectToSend = {\n      id: category._id,\n      entity: {\n        synonyms: [newProductName],\n        content: newProductName\n      }\n    }; // console.log(\"add New Product in category\", objectToSend);\n\n    return axios.put(host + `/api/v1/secure/pages/valuesadd/${page.id}`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"addProductInCategory response api =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      }); // To update the existing products\n\n      let findCategorySelected = categories.find(cat => {\n        return cat._id === category._id;\n      });\n\n      if (findCategorySelected) {\n        dispatch({\n          type: 'SELECT_CATEGORIE',\n          payload: findCategorySelected\n        });\n      }\n\n      ;\n    }).catch(err => {\n      console.log(\"addProductInCategory error api =>\", err);\n    });\n  };\n};\nexport const deleteCategory = (category, page) => {\n  return dispatch => {\n    // console.log(\"Rak bech tfasakh l category hedhu =>\", category);\n    // console.log(\"Rak bech tfasakh l category men page hedhi =>\", page);\n    let objectToSend = {\n      id: category._id\n    };\n    return axios.put(host + `/api/v1/secure/pages/entiteremove/${page.id}`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"deleteCategory response api =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      }); // dispatch({\n      //     type: 'GET_CATEGORIES',\n      //     payload: categories\n      // });\n    }).catch(err => {\n      console.log(\"deleteCategory error api =>\", err);\n    });\n  };\n};\nexport const selectProduct = product => {\n  return dispatch => {\n    console.log(\"Redux selected Product =>\", product);\n    dispatch({\n      type: 'SELECT_PRODUCT',\n      payload: product\n    });\n  };\n};\nexport const selectCategory = (category, history) => {\n  return dispatch => {\n    // console.log(\"Redux selected Category! =>\", category);\n    dispatch({\n      type: 'SELECT_CATEGORIE',\n      payload: category\n    });\n    history.push('update-products');\n  };\n};\nexport const getCategories = page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/project/get/entitiesproject/${page.platform}/${page.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      // console.log(\"all Categories of this page => =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      });\n    }).catch(err => console.log(\"err getCategories\", err));\n  };\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/myProductsActions.js"],"names":["axios","host","updateProductName","newProductName","categorySelected","product","idPage","dispatch","objectToSend","name","productName","id","_id","idChildren","put","headers","localStorage","getItem","then","res","console","log","data","catch","err","updateCategoryName","categoryName","categories","length","map","cat","index","default","splice","type","payload","addCategory","post","addProductInCategory","category","page","entity","synonyms","content","findCategorySelected","find","deleteCategory","selectProduct","selectCategory","history","push","getCategories","get","platform"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { host } from '../../config';\r\n\r\nexport const updateProductName = (newProductName, categorySelected, product, idPage) => {\r\n    return (dispatch) => {\r\n        \r\n        let objectToSend = {\r\n            name : newProductName,\r\n            productName: categorySelected.name,\r\n            id : categorySelected._id,\r\n            idChildren : product._id,\r\n        }\r\n        \r\n        // console.log(\"Let's update the product => \", objectToSend);\r\n\r\n        return axios.put(host + `/api/v1/secure/pages/contentupdate/${idPage}`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"updateProductName response api =>\", res.data.data);\r\n\r\n            // let categories = res.data.data;\r\n\r\n            // if(categories.length > 0) {\r\n            //     categories.map((cat,index) =>\r\n            //         cat.default === true && categories.splice(index,1)\r\n            //     );\r\n            // };\r\n\r\n            // dispatch({\r\n            //     type: 'GET_CATEGORIES',\r\n            //     payload: categories\r\n            // });\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"updateProductName error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const updateCategoryName = (categorySelected,categoryName,idPage) => {\r\n    return (dispatch) => {\r\n        \r\n        let objectToSend = {\r\n            id : categorySelected._id,\r\n            name: categoryName,\r\n        };\r\n        \r\n        console.log(\"Let's update the category\", objectToSend, 'id Page', idPage);\r\n        \r\n        return axios.put(host + `/api/v1/secure/pages/nameentiteupdate/${idPage}`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"updateCategoryName response api =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"updateCategoryName error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const addCategory = (objectToSend) => {\r\n    return (dispatch) => {\r\n        // console.log(\"add New category\", objectToSend);\r\n\r\n        return axios.post(host + `/api/v1/secure/pages/entities/add/${objectToSend.idPage}`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"addCategory response api =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"addCategory error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const addProductInCategory = (category,page,newProductName) => {\r\n    return (dispatch) => {\r\n     \r\n        let objectToSend = {\r\n            id: category._id,\r\n            entity: {\r\n                synonyms: [newProductName],\r\n                content: newProductName,\r\n            },\r\n        };\r\n\r\n        // console.log(\"add New Product in category\", objectToSend);\r\n\r\n        return axios.put(host + `/api/v1/secure/pages/valuesadd/${page.id}`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"addProductInCategory response api =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n\r\n            // To update the existing products\r\n            let findCategorySelected = categories.find((cat) => {\r\n                return cat._id === category._id\r\n            })\r\n\r\n            if(findCategorySelected) {\r\n                dispatch({\r\n                    type: 'SELECT_CATEGORIE',\r\n                    payload: findCategorySelected\r\n                });\r\n            };\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"addProductInCategory error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const deleteCategory = (category,page) => {\r\n    return (dispatch) => {\r\n        // console.log(\"Rak bech tfasakh l category hedhu =>\", category);\r\n        // console.log(\"Rak bech tfasakh l category men page hedhi =>\", page);\r\n        \r\n        let objectToSend = {\r\n            id: category._id\r\n        };\r\n\r\n        return axios.put(host + `/api/v1/secure/pages/entiteremove/${page.id}`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"deleteCategory response api =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n\r\n            // dispatch({\r\n            //     type: 'GET_CATEGORIES',\r\n            //     payload: categories\r\n            // });\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"deleteCategory error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const selectProduct = (product) => {\r\n    return (dispatch) => {\r\n        console.log(\"Redux selected Product =>\", product);\r\n        \r\n        dispatch({\r\n            type: 'SELECT_PRODUCT',\r\n            payload: product,\r\n        });\r\n    };\r\n};\r\n\r\nexport const selectCategory = (category,history) => {\r\n    return (dispatch) => {\r\n        // console.log(\"Redux selected Category! =>\", category);\r\n        \r\n        dispatch({\r\n            type: 'SELECT_CATEGORIE',\r\n            payload: category\r\n        });\r\n        history.push('update-products');\r\n    };\r\n};\r\n\r\nexport const getCategories = (page) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + `/api/v1/secure/project/get/entitiesproject/${page.platform}/${page.id}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log(\"all Categories of this page => =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n        })\r\n        .catch((err) => console.log(\"err getCategories\", err))\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}