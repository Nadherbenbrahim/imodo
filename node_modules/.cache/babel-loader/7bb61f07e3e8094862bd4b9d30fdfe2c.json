{"ast":null,"code":"import axios from 'axios';\nimport { host, trainAgentHost } from '../../config';\nexport const getLogs = project => {\n  return dispatch => {\n    console.log(\"Get from here\", project); // return axios.get(host + ` /api/v1/secure/logEvent/post/${idPostOrPage}/all`,{\n    //     headers: {\n    //         'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n    //     }\n    // })\n    // .then(res => {\n    //     console.log('deleteProjectByPage post APi Response =>', res.data.data);\n    //     // dispatch({\n    //     //     type: 'GET_LOGS_BY_PAGE',\n    //     //     payload: res.data.data,\n    //     // });\n    // })\n    // .catch((err) => console.log(\"deleteProjectByPage post Api error  =>\", err) )\n  };\n};\nexport const deleteProjectByPage = projet => {\n  return dispatch => {\n    let objectToSend = {\n      project: projet\n    };\n    return axios.put(host + `/api/v1/secure/project/remove/project`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('deleteProjectByPage post APi Response =>', res.data.data);\n      dispatch({\n        type: 'GET_PROJECT_BY_PAGE',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"deleteProjectByPage post Api error  =>\", err));\n  };\n};\nexport const goToWizardConfig = (projet, Page, history) => {\n  return dispatch => {\n    // Detect intent Type \n    let intentDetection = projet.post.idPost === projet.post.page.idPage;\n    dispatch({\n      type: 'FROM_MY_AGENTS_TO_STEP_3_WIZARD',\n      payload: 2,\n      payload1: projet._id,\n      payload2: intentDetection ? \"generic\" : \"default\"\n    });\n    dispatch({\n      type: 'SELECT_WIZARD_PAGE',\n      payload: Page\n    });\n    history.push('/home/auto-wizard');\n  };\n};\nexport const setAgentsSelectedProject = (project, history) => {\n  return dispatch => {\n    dispatch({\n      type: 'SET_AGENTS_PROJECT',\n      payload: project\n    });\n    history.push('/home/my-agents-messages');\n  };\n};\nexport const getProjectByPage = Page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/pages/get/project/${Page.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('getProjectByPage post APi Response =>', res.data.data);\n      dispatch({\n        type: 'GET_PROJECT_BY_PAGE',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"getProjectByPage post Api error  =>\", err));\n  };\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/myAgentsActions.js"],"names":["axios","host","trainAgentHost","getLogs","project","dispatch","console","log","deleteProjectByPage","projet","objectToSend","put","headers","localStorage","getItem","then","res","data","type","payload","catch","err","goToWizardConfig","Page","history","intentDetection","post","idPost","page","idPage","payload1","_id","payload2","push","setAgentsSelectedProject","getProjectByPage","get","id"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { host,trainAgentHost } from '../../config';\r\n\r\nexport const getLogs = (project) => {\r\n    return (dispatch) => {\r\n\r\n        console.log(\"Get from here\", project);\r\n\r\n        // return axios.get(host + ` /api/v1/secure/logEvent/post/${idPostOrPage}/all`,{\r\n        //     headers: {\r\n        //         'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n        //     }\r\n        // })\r\n        // .then(res => {\r\n        //     console.log('deleteProjectByPage post APi Response =>', res.data.data);\r\n\r\n        //     // dispatch({\r\n        //     //     type: 'GET_LOGS_BY_PAGE',\r\n        //     //     payload: res.data.data,\r\n        //     // });\r\n        // })\r\n        // .catch((err) => console.log(\"deleteProjectByPage post Api error  =>\", err) )\r\n    }\r\n};\r\n\r\nexport const deleteProjectByPage = (projet) => {\r\n    return (dispatch) => {\r\n\r\n        let objectToSend = {\r\n            project: projet,\r\n        };\r\n\r\n        return axios.put(host + `/api/v1/secure/project/remove/project`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('deleteProjectByPage post APi Response =>', res.data.data);\r\n\r\n            dispatch({\r\n                type: 'GET_PROJECT_BY_PAGE',\r\n                payload: res.data.data,\r\n            });\r\n        })\r\n        .catch((err) => console.log(\"deleteProjectByPage post Api error  =>\", err) )\r\n    }\r\n};\r\n\r\nexport const goToWizardConfig = (projet,Page,history) => {\r\n    return (dispatch) => {\r\n        // Detect intent Type \r\n        let intentDetection = projet.post.idPost === projet.post.page.idPage;\r\n\r\n        dispatch({\r\n            type: 'FROM_MY_AGENTS_TO_STEP_3_WIZARD',\r\n            payload: 2,\r\n            payload1: projet._id,\r\n            payload2: intentDetection ? \"generic\" : \"default\",\r\n        });\r\n\r\n        dispatch({\r\n            type: 'SELECT_WIZARD_PAGE', \r\n            payload: Page,\r\n        });\r\n        history.push('/home/auto-wizard'); \r\n    }\r\n};\r\n\r\n\r\n\r\nexport const setAgentsSelectedProject = (project,history) => {\r\n    return (dispatch) => {\r\n \r\n        dispatch({\r\n            type: 'SET_AGENTS_PROJECT',\r\n            payload: project,\r\n        });\r\n       \r\n        history.push('/home/my-agents-messages');\r\n    }\r\n};\r\n\r\nexport const getProjectByPage = (Page) => {\r\n    return (dispatch) => {\r\n \r\n        return axios.get(host + `/api/v1/secure/pages/get/project/${Page.id}`,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('getProjectByPage post APi Response =>', res.data.data);\r\n\r\n            dispatch({\r\n                type: 'GET_PROJECT_BY_PAGE',\r\n                payload: res.data.data,\r\n            });\r\n        })\r\n        .catch((err) => console.log(\"getProjectByPage post Api error  =>\", err) )\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}