{"ast":null,"code":"import _toConsumableArray from\"/usr/work/smart_front_oussema/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import axios from'axios';import{host,trainAgentHost}from'../../config';export var answerComment=function answerComment(Page,project,comment,answer,btns){return function(dispatch){// console.log(\"Get from here\", project);\nvar objectToSend={logs:comment,answer:answer,project:project,buttons:btns};console.log(\"im sending answerComment to nour\",objectToSend);return axios.post(host+\"/api/v1/secure/logEvent/answer/comment/\".concat(Page.platform),objectToSend,{headers:{'authorization':'Bearer '+localStorage.getItem('authtoken')}})// .then(res => {\n//     console.log('answerComment post APi Response =>', res.data.data);\n// })\n.catch(function(err){return console.log(\"answerComment post Api error  =>\",err);});};};export var resetLogs=function resetLogs(){return function(dispatch){dispatch({type:'RESET_LOGS_BY_PAGE'});};};export var getLogs=function getLogs(idPostOrPage,Page){return function(dispatch){// console.log(\"Get from here\", project);\nreturn axios.get(host+\"/api/v1/secure/logEvent/post/\".concat(idPostOrPage,\"/all\"),{headers:{'authorization':'Bearer '+localStorage.getItem('authtoken')}}).then(function(res){console.log('getLogs post APi Response =>',res.data.data);var commentsMatched=[];var commentsNotMatched=[];var allMatchedIntents=[];var allNotMatchedIntents=[];if(res.data.data[0].events){res.data.data[0].events.map(function(comment){if(comment.success){comment.intent.map(function(intent){return allMatchedIntents.push(intent.intent);});commentsMatched.push(comment);}else{comment.intent.map(function(intent){return allNotMatchedIntents.push(intent.intent);});commentsNotMatched.push(comment);}});console.log(\"Matched =>\",commentsMatched);console.log(\"Not Matched =>\",commentsNotMatched);}dispatch({type:'GET_LOGS_BY_PAGE',payload:res.data.data,payload1:commentsMatched.reverse(),payload2:commentsNotMatched.reverse(),payload3:_toConsumableArray(new Set(allMatchedIntents)),payload4:_toConsumableArray(new Set(allNotMatchedIntents))});}).catch(function(err){return console.log(\"getLogs post Api error  =>\",err);});};};export var deleteProjectByPage=function deleteProjectByPage(projet){return function(dispatch){var objectToSend={project:projet};return axios.put(host+\"/api/v1/secure/project/remove/project\",objectToSend,{headers:{'authorization':'Bearer '+localStorage.getItem('authtoken')}}).then(function(res){console.log('deleteProjectByPage post APi Response =>',res.data.data);dispatch({type:'GET_PROJECT_BY_PAGE',payload:res.data.data});}).catch(function(err){return console.log(\"deleteProjectByPage post Api error  =>\",err);});};};export var goToWizardConfig=function goToWizardConfig(projet,Page,history){return function(dispatch){// Detect intent Type \nvar intentDetection=projet.post.idPost===projet.post.page.idPage;// Because in the wizard variable Name is id not idPost :D sorry for that\nprojet.post.id=projet.post.idPost;dispatch({type:'FROM_MY_AGENTS_TO_STEP_3_WIZARD',payload:2,payload1:projet._id,payload2:intentDetection?\"generic\":\"default\",payload3:Page,payload4:intentDetection?null:projet.post});history.push({pathname:'/home/auto-wizard',state:{imFrom:'MyAgents'}});dispatch({type:'SELECT_WIZARD_PAGE',payload:Page});};};export var setAgentsSelectedProject=function setAgentsSelectedProject(project,history){return function(dispatch){dispatch({type:'SET_AGENTS_PROJECT',payload:project});history.push('/home/my-agents-messages');};};export var getProjectByPage=function getProjectByPage(Page){return function(dispatch){return axios.get(host+\"/api/v1/secure/pages/get/project/\".concat(Page.id),{headers:{'authorization':'Bearer '+localStorage.getItem('authtoken')}}).then(function(res){console.log('getProjectByPage post APi Response =>',res.data.data);res.data.data.sort(function(a,b){return new Date(b.createDate)-new Date(a.createDate);});dispatch({type:'GET_PROJECT_BY_PAGE',payload:res.data.data});}).catch(function(err){return console.log(\"getProjectByPage post Api error  =>\",err);});};};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/myAgentsActions.js"],"names":["axios","host","trainAgentHost","answerComment","Page","project","comment","answer","btns","dispatch","objectToSend","logs","buttons","console","log","post","platform","headers","localStorage","getItem","catch","err","resetLogs","type","getLogs","idPostOrPage","get","then","res","data","commentsMatched","commentsNotMatched","allMatchedIntents","allNotMatchedIntents","events","map","success","intent","push","payload","payload1","reverse","payload2","payload3","Set","payload4","deleteProjectByPage","projet","put","goToWizardConfig","history","intentDetection","idPost","page","idPage","id","_id","pathname","state","imFrom","setAgentsSelectedProject","getProjectByPage","sort","a","b","Date","createDate"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAcC,cAAd,KAAoC,cAApC,CAIA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,IAAD,CAAMC,OAAN,CAAcC,OAAd,CAAsBC,MAAtB,CAA6BC,IAA7B,CAAsC,CAC/D,MAAO,UAACC,QAAD,CAAc,CACjB;AAEA,GAAIC,CAAAA,YAAY,CAAG,CACfC,IAAI,CAAEL,OADS,CAEfC,MAAM,CAAEA,MAFO,CAGfF,OAAO,CAAEA,OAHM,CAIfO,OAAO,CAAEJ,IAJM,CAAnB,CAOAK,OAAO,CAACC,GAAR,CAAY,kCAAZ,CAAgDJ,YAAhD,EAEA,MAAOV,CAAAA,KAAK,CAACe,IAAN,CAAWd,IAAI,kDAA6CG,IAAI,CAACY,QAAlD,CAAf,CAA4EN,YAA5E,CAAyF,CAC5FO,OAAO,CAAE,CACL,gBAAiB,UAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB,CADxB,CADmF,CAAzF,CAKP;AACA;AACA;AAPO,CAQNC,KARM,CAQA,SAACC,GAAD,QAASR,CAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,CAAgDO,GAAhD,CAAT,EARA,CAAP,CASH,CArBD,CAsBH,CAvBM,CA0BP,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAC3B,MAAO,UAACb,QAAD,CAAc,CACjBA,QAAQ,CAAC,CACLc,IAAI,CAAE,oBADD,CAAD,CAAR,CAGH,CAJD,CAKH,CANM,CAQP,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,YAAD,CAAcrB,IAAd,CAAuB,CAC1C,MAAO,UAACK,QAAD,CAAc,CACjB;AAGA,MAAOT,CAAAA,KAAK,CAAC0B,GAAN,CAAUzB,IAAI,wCAAmCwB,YAAnC,QAAd,CAAoE,CACvER,OAAO,CAAE,CACL,gBAAiB,UAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB,CADxB,CAD8D,CAApE,EAKNQ,IALM,CAKD,SAAAC,GAAG,CAAI,CACTf,OAAO,CAACC,GAAR,CAAY,8BAAZ,CAA4Cc,GAAG,CAACC,IAAJ,CAASA,IAArD,EAEA,GAAIC,CAAAA,eAAe,CAAG,EAAtB,CACA,GAAIC,CAAAA,kBAAkB,CAAG,EAAzB,CACA,GAAIC,CAAAA,iBAAiB,CAAG,EAAxB,CACA,GAAIC,CAAAA,oBAAoB,CAAG,EAA3B,CAEA,GAAGL,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAc,CAAd,EAAiBK,MAApB,CAA4B,CACxBN,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAc,CAAd,EAAiBK,MAAjB,CAAwBC,GAAxB,CAA4B,SAAA7B,OAAO,CAAI,CAEnC,GAAGA,OAAO,CAAC8B,OAAX,CAAoB,CAChB9B,OAAO,CAAC+B,MAAR,CAAeF,GAAf,CAAmB,SAACE,MAAD,QAAYL,CAAAA,iBAAiB,CAACM,IAAlB,CAAuBD,MAAM,CAACA,MAA9B,CAAZ,EAAnB,EACAP,eAAe,CAACQ,IAAhB,CAAqBhC,OAArB,EACH,CAHD,IAGO,CACHA,OAAO,CAAC+B,MAAR,CAAeF,GAAf,CAAmB,SAACE,MAAD,QAAYJ,CAAAA,oBAAoB,CAACK,IAArB,CAA0BD,MAAM,CAACA,MAAjC,CAAZ,EAAnB,EACAN,kBAAkB,CAACO,IAAnB,CAAwBhC,OAAxB,EACH,CACJ,CATD,EAWAO,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0BgB,eAA1B,EACAjB,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8BiB,kBAA9B,EACH,CAEDtB,QAAQ,CAAC,CACLc,IAAI,CAAE,kBADD,CAELgB,OAAO,CAAEX,GAAG,CAACC,IAAJ,CAASA,IAFb,CAGLW,QAAQ,CAAEV,eAAe,CAACW,OAAhB,EAHL,CAILC,QAAQ,CAAEX,kBAAkB,CAACU,OAAnB,EAJL,CAKLE,QAAQ,oBAAM,GAAIC,CAAAA,GAAJ,CAAQZ,iBAAR,CAAN,CALH,CAMLa,QAAQ,oBAAM,GAAID,CAAAA,GAAJ,CAAQX,oBAAR,CAAN,CANH,CAAD,CAAR,CASH,CAtCM,EAuCNb,KAvCM,CAuCA,SAACC,GAAD,QAASR,CAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAA0CO,GAA1C,CAAT,EAvCA,CAAP,CAwCH,CA5CD,CA6CH,CA9CM,CAgDP,MAAO,IAAMyB,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,MAAD,CAAY,CAC3C,MAAO,UAACtC,QAAD,CAAc,CAEjB,GAAIC,CAAAA,YAAY,CAAG,CACfL,OAAO,CAAE0C,MADM,CAAnB,CAIA,MAAO/C,CAAAA,KAAK,CAACgD,GAAN,CAAU/C,IAAI,wCAAd,CAAyDS,YAAzD,CAAsE,CACzEO,OAAO,CAAE,CACL,gBAAiB,UAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB,CADxB,CADgE,CAAtE,EAKNQ,IALM,CAKD,SAAAC,GAAG,CAAI,CACTf,OAAO,CAACC,GAAR,CAAY,0CAAZ,CAAwDc,GAAG,CAACC,IAAJ,CAASA,IAAjE,EAEApB,QAAQ,CAAC,CACLc,IAAI,CAAE,qBADD,CAELgB,OAAO,CAAEX,GAAG,CAACC,IAAJ,CAASA,IAFb,CAAD,CAAR,CAIH,CAZM,EAaNT,KAbM,CAaA,SAACC,GAAD,QAASR,CAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ,CAAsDO,GAAtD,CAAT,EAbA,CAAP,CAcH,CApBD,CAqBH,CAtBM,CAwBP,MAAO,IAAM4B,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACF,MAAD,CAAQ3C,IAAR,CAAa8C,OAAb,CAAyB,CACrD,MAAO,UAACzC,QAAD,CAAc,CACjB;AACA,GAAI0C,CAAAA,eAAe,CAAGJ,MAAM,CAAChC,IAAP,CAAYqC,MAAZ,GAAuBL,MAAM,CAAChC,IAAP,CAAYsC,IAAZ,CAAiBC,MAA9D,CAEA;AACAP,MAAM,CAAChC,IAAP,CAAYwC,EAAZ,CAAiBR,MAAM,CAAChC,IAAP,CAAYqC,MAA7B,CAEA3C,QAAQ,CAAC,CACLc,IAAI,CAAE,iCADD,CAELgB,OAAO,CAAE,CAFJ,CAGLC,QAAQ,CAAEO,MAAM,CAACS,GAHZ,CAILd,QAAQ,CAAES,eAAe,CAAG,SAAH,CAAe,SAJnC,CAKLR,QAAQ,CAAEvC,IALL,CAMLyC,QAAQ,CAAEM,eAAe,CAAG,IAAH,CAAUJ,MAAM,CAAChC,IANrC,CAAD,CAAR,CASAmC,OAAO,CAACZ,IAAR,CAAa,CACTmB,QAAQ,CAAE,mBADD,CAETC,KAAK,CAAE,CAAEC,MAAM,CAAG,UAAX,CAFE,CAAb,EAKAlD,QAAQ,CAAC,CACLc,IAAI,CAAE,oBADD,CAELgB,OAAO,CAAEnC,IAFJ,CAAD,CAAR,CAIH,CAzBD,CA0BH,CA3BM,CA8BP,MAAO,IAAMwD,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACvD,OAAD,CAAS6C,OAAT,CAAqB,CACzD,MAAO,UAACzC,QAAD,CAAc,CAEjBA,QAAQ,CAAC,CACLc,IAAI,CAAE,oBADD,CAELgB,OAAO,CAAElC,OAFJ,CAAD,CAAR,CAKA6C,OAAO,CAACZ,IAAR,CAAa,0BAAb,EACH,CARD,CASH,CAVM,CAYP,MAAO,IAAMuB,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACzD,IAAD,CAAU,CACtC,MAAO,UAACK,QAAD,CAAc,CAEjB,MAAOT,CAAAA,KAAK,CAAC0B,GAAN,CAAUzB,IAAI,4CAAuCG,IAAI,CAACmD,EAA5C,CAAd,CAA+D,CAClEtC,OAAO,CAAE,CACL,gBAAiB,UAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB,CADxB,CADyD,CAA/D,EAKNQ,IALM,CAKD,SAAAC,GAAG,CAAI,CACTf,OAAO,CAACC,GAAR,CAAY,uCAAZ,CAAqDc,GAAG,CAACC,IAAJ,CAASA,IAA9D,EAGAD,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAciC,IAAd,CAAoB,SAACC,CAAD,CAAGC,CAAH,CAAS,CACzB,MAAO,IAAIC,CAAAA,IAAJ,CAASD,CAAC,CAACE,UAAX,EAAyB,GAAID,CAAAA,IAAJ,CAASF,CAAC,CAACG,UAAX,CAAhC,CACH,CAFD,EAIAzD,QAAQ,CAAC,CACLc,IAAI,CAAE,qBADD,CAELgB,OAAO,CAAEX,GAAG,CAACC,IAAJ,CAASA,IAFb,CAAD,CAAR,CAIH,CAjBM,EAkBNT,KAlBM,CAkBA,SAACC,GAAD,QAASR,CAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,CAAmDO,GAAnD,CAAT,EAlBA,CAAP,CAmBH,CArBD,CAsBH,CAvBM","sourcesContent":["import axios from 'axios'\r\nimport { host,trainAgentHost } from '../../config';\r\n\r\n\r\n\r\nexport const answerComment = (Page,project,comment,answer,btns) => {\r\n    return (dispatch) => {\r\n        // console.log(\"Get from here\", project);\r\n    \r\n        let objectToSend = {\r\n            logs: comment,\r\n            answer: answer,\r\n            project: project, \r\n            buttons: btns,\r\n        };\r\n\r\n        console.log(\"im sending answerComment to nour\", objectToSend);\r\n\r\n        return axios.post(host + `/api/v1/secure/logEvent/answer/comment/${Page.platform}`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        // .then(res => {\r\n        //     console.log('answerComment post APi Response =>', res.data.data);\r\n        // })\r\n        .catch((err) => console.log(\"answerComment post Api error  =>\", err))\r\n    }\r\n};\r\n\r\n\r\nexport const resetLogs = () => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'RESET_LOGS_BY_PAGE',\r\n        });\r\n    }\r\n};\r\n\r\nexport const getLogs = (idPostOrPage,Page) => {\r\n    return (dispatch) => {\r\n        // console.log(\"Get from here\", project);\r\n\r\n\r\n        return axios.get(host + `/api/v1/secure/logEvent/post/${idPostOrPage}/all`,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('getLogs post APi Response =>', res.data.data);\r\n\r\n            let commentsMatched = [];\r\n            let commentsNotMatched = []; \r\n            let allMatchedIntents = [];\r\n            let allNotMatchedIntents = [];\r\n\r\n            if(res.data.data[0].events) {\r\n                res.data.data[0].events.map(comment => {\r\n                    \r\n                    if(comment.success) {\r\n                        comment.intent.map((intent) => allMatchedIntents.push(intent.intent))\r\n                        commentsMatched.push(comment);\r\n                    } else {\r\n                        comment.intent.map((intent) => allNotMatchedIntents.push(intent.intent));\r\n                        commentsNotMatched.push(comment);\r\n                    }\r\n                });\r\n\r\n                console.log(\"Matched =>\", commentsMatched)\r\n                console.log(\"Not Matched =>\", commentsNotMatched)\r\n            }\r\n\r\n            dispatch({\r\n                type: 'GET_LOGS_BY_PAGE',\r\n                payload: res.data.data,\r\n                payload1: commentsMatched.reverse(),\r\n                payload2: commentsNotMatched.reverse(),\r\n                payload3: [...new Set(allMatchedIntents)],\r\n                payload4: [...new Set(allNotMatchedIntents)],\r\n            });\r\n            \r\n        })\r\n        .catch((err) => console.log(\"getLogs post Api error  =>\", err))\r\n    }\r\n};\r\n\r\nexport const deleteProjectByPage = (projet) => {\r\n    return (dispatch) => {\r\n\r\n        let objectToSend = {\r\n            project: projet,\r\n        };\r\n\r\n        return axios.put(host + `/api/v1/secure/project/remove/project`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('deleteProjectByPage post APi Response =>', res.data.data);\r\n\r\n            dispatch({\r\n                type: 'GET_PROJECT_BY_PAGE',\r\n                payload: res.data.data,\r\n            });\r\n        })\r\n        .catch((err) => console.log(\"deleteProjectByPage post Api error  =>\", err) )\r\n    }\r\n};\r\n\r\nexport const goToWizardConfig = (projet,Page,history) => {\r\n    return (dispatch) => {\r\n        // Detect intent Type \r\n        let intentDetection = projet.post.idPost === projet.post.page.idPage;\r\n\r\n        // Because in the wizard variable Name is id not idPost :D sorry for that\r\n        projet.post.id = projet.post.idPost;\r\n\r\n        dispatch({\r\n            type: 'FROM_MY_AGENTS_TO_STEP_3_WIZARD',\r\n            payload: 2,\r\n            payload1: projet._id,\r\n            payload2: intentDetection ? \"generic\" : \"default\",\r\n            payload3: Page,\r\n            payload4: intentDetection ? null : projet.post,\r\n        });\r\n\r\n        history.push({\r\n            pathname: '/home/auto-wizard',\r\n            state: { imFrom : 'MyAgents' }\r\n        });\r\n\r\n        dispatch({\r\n            type: 'SELECT_WIZARD_PAGE', \r\n            payload: Page,\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const setAgentsSelectedProject = (project,history) => {\r\n    return (dispatch) => {\r\n \r\n        dispatch({\r\n            type: 'SET_AGENTS_PROJECT',\r\n            payload: project,\r\n        });\r\n       \r\n        history.push('/home/my-agents-messages');\r\n    }\r\n};\r\n\r\nexport const getProjectByPage = (Page) => {\r\n    return (dispatch) => {\r\n \r\n        return axios.get(host + `/api/v1/secure/pages/get/project/${Page.id}`,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('getProjectByPage post APi Response =>', res.data.data);\r\n\r\n\r\n            res.data.data.sort( (a,b) => {\r\n                return new Date(b.createDate) - new Date(a.createDate);\r\n            });\r\n\r\n            dispatch({\r\n                type: 'GET_PROJECT_BY_PAGE',\r\n                payload: res.data.data,\r\n            });\r\n        })\r\n        .catch((err) => console.log(\"getProjectByPage post Api error  =>\", err) )\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}