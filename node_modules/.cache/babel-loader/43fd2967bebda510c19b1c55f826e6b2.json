{"ast":null,"code":"import axios from 'axios';\nimport { host } from '../../config';\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nexport const reDisptachPage = (Page, history) => {\n  return async dispatch => {\n    if (history) {\n      history.push('manage-products');\n      dispatch({\n        type: 'SELECT_SOCIAL_MEDIA_PAGE',\n        payload: Page\n      });\n    } else {\n      dispatch({\n        type: 'SELECT_SOCIAL_MEDIA_PAGE',\n        payload: Page\n      });\n    }\n\n    ;\n  };\n};\nexport const removeSynonym = (synonymValue, product, indexSyn, Page, categorySelected) => {\n  return dispatch => {\n    let objectToSend = {\n      index: indexSyn,\n      id: product._id,\n      synonym: synonymValue\n    };\n    console.log(\"Let's removeSynonym to the product => \", objectToSend);\n    let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/removesyn/\" : \"/api/v1/secure/pagesInsta/removesyn/\";\n    let fullUrl = `${host}${detectHost}${Page.id}`;\n    return axios.put(fullUrl, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"removeSynonym response api =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      }); // To update the existing products\n\n      let findCategorySelected = categories.find(cat => {\n        return cat._id === categorySelected._id;\n      });\n\n      if (findCategorySelected) {\n        dispatch({\n          type: 'SELECT_CATEGORIE',\n          payload: findCategorySelected\n        });\n      }\n\n      ;\n    }).catch(err => {\n      console.log(\"removeSynonym error api =>\", err);\n    });\n  };\n};\nexport const addSynonym = (synonymValue, categorySelected, product, Page) => {\n  return dispatch => {\n    let objectToSend = {\n      idEntity: categorySelected._id,\n      idChildren: product._id,\n      synonyms: synonymValue\n    };\n    console.log(\"Let's addSynonym to the product => \", objectToSend);\n    let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/synonymssupdate/\" : \"/api/v1/secure/pagesInsta/synonymssupdate/\";\n    let fullUrl = `${host}${detectHost}${Page.id}`;\n    return axios.put(fullUrl, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"addSynonym response api =>\", res.data.data);\n\n      if (typeof res.data.data === \"string\") {\n        Swal.fire({\n          position: 'center',\n          icon: 'error',\n          title: res.data.data,\n          showConfirmButton: false,\n          timer: 2000\n        });\n      } else {\n        let categories = res.data.data;\n\n        if (categories.length > 0) {\n          categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n        }\n\n        ;\n        dispatch({\n          type: 'GET_CATEGORIES',\n          payload: categories\n        }); // To update the existing products\n\n        let findCategorySelected = categories.find(cat => {\n          return cat._id === categorySelected._id;\n        });\n\n        if (findCategorySelected) {\n          dispatch({\n            type: 'SELECT_CATEGORIE',\n            payload: findCategorySelected\n          });\n        }\n\n        ;\n      }\n    }).catch(err => {\n      console.log(\"addSynonym error api =>\", err);\n    });\n  };\n};\nexport const removeProduct = (categorySelected, product, Page) => {\n  return dispatch => {\n    let objectToSend = {\n      entity: categorySelected._id,\n      id: product._id,\n      productName: product.content\n    };\n    console.log(\"Let's removeProduct => \", objectToSend);\n    let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/contentremove/\" : \"/api/v1/secure/pagesInsta/contentremove/\";\n    let fullUrl = `${host}${detectHost}${Page.id}`;\n    return axios.put(fullUrl, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"removeProduct response api =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      }); // To update the existing products\n\n      let findCategorySelected = categories.find(cat => {\n        return cat._id === categorySelected._id;\n      });\n\n      if (findCategorySelected) {\n        dispatch({\n          type: 'SELECT_CATEGORIE',\n          payload: findCategorySelected\n        });\n      }\n\n      ;\n    }).catch(err => {\n      console.log(\"removeProduct error api =>\", err);\n    });\n  };\n};\nexport const updateProductName = (newProductName, categorySelected, product, Page) => {\n  return dispatch => {\n    let objectToSend = {\n      name: newProductName,\n      productName: categorySelected.name,\n      id: categorySelected._id,\n      idChildren: product._id\n    };\n    let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/contentupdate/\" : \"/api/v1/secure/pagesInsta/contentupdate/\";\n    let fullUrl = `${host}${detectHost}${Page.id}`; // console.log(\"Let's update the product => \", objectToSend, \"with Page =>\", Page, \"with the full URL\", fullUrl);\n\n    return axios.put(fullUrl, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"updateProductName response api =>\", res.data.data);\n\n      if (typeof res.data.data === \"string\") {\n        Swal.fire({\n          position: 'center',\n          icon: 'error',\n          title: res.data.data,\n          showConfirmButton: false,\n          timer: 2000\n        });\n      } else {\n        let categories = res.data.data;\n\n        if (categories.length > 0) {\n          categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n        }\n\n        ;\n        dispatch({\n          type: 'GET_CATEGORIES',\n          payload: categories\n        }); // To update the existing products\n\n        let findCategorySelected = categories.find(cat => {\n          return cat._id === categorySelected._id;\n        });\n\n        if (findCategorySelected) {\n          dispatch({\n            type: 'SELECT_CATEGORIE',\n            payload: findCategorySelected\n          });\n        }\n\n        ;\n      }\n    }).catch(err => {\n      console.log(\"updateProductName error api =>\", err);\n    });\n  };\n};\nexport const updateCategoryName = (categorySelected, categoryName, Page) => {\n  return dispatch => {\n    let objectToSend = {\n      id: categorySelected._id,\n      name: categoryName\n    }; // console.log(\"Let's update the category\", objectToSend, 'id Page', Page.id);\n\n    let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/nameentiteupdate/\" : \"/api/v1/secure/pagesInsta/nameentiteupdate/\";\n    let fullUrl = `${host}${detectHost}${Page.id}`;\n    return axios.put(fullUrl, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"updateCategoryName response api =>\", res.data.data);\n\n      if (typeof res.data.data === \"string\") {\n        Swal.fire({\n          position: 'center',\n          icon: 'error',\n          title: res.data.data,\n          showConfirmButton: false,\n          timer: 2000\n        });\n      } else {\n        let categories = res.data.data;\n\n        if (categories.length > 0) {\n          categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n        }\n\n        ;\n        dispatch({\n          type: 'GET_CATEGORIES',\n          payload: categories\n        });\n      }\n    }).catch(err => {\n      console.log(\"updateCategoryName error api =>\", err);\n    });\n  };\n};\nexport const addCategory = (Page, categoryName, allProducts, history) => {\n  return dispatch => {\n    let objectToSend = {\n      idPage: Page.id,\n      entity: {\n        name: categoryName,\n        values: allProducts\n      }\n    }; // console.log(\"add New category\", objectToSend);\n\n    let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/entities/add/\" : \"/api/v1/secure/pagesInsta/entities/add/\";\n    let fullUrl = `${host}${detectHost}${Page.id}`;\n    return axios.post(fullUrl, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"addCategory response api =>\", res.data.data);\n\n      if (typeof res.data.data === \"string\") {\n        Swal.fire({\n          position: 'center',\n          icon: 'error',\n          title: res.data.data,\n          showConfirmButton: false,\n          timer: 2000\n        });\n      } else {\n        let categories = res.data.data;\n\n        if (categories.length > 0) {\n          categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n        }\n\n        ;\n        dispatch({\n          type: 'GET_CATEGORIES',\n          payload: categories\n        });\n        history.push('manage-products');\n        dispatch({\n          type: 'SELECT_SOCIAL_MEDIA_PAGE',\n          payload: Page\n        });\n      }\n    }).catch(err => {\n      console.log(\"addCategory error api =>\", err);\n    });\n  };\n};\nexport const addProductInCategory = (category, Page, newProductName) => {\n  return dispatch => {\n    let objectToSend = {\n      id: category._id,\n      entity: {\n        synonyms: [newProductName],\n        content: newProductName\n      }\n    }; // console.log(\"add New Product in category\", objectToSend);\n\n    let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/valuesadd/\" : \"/api/v1/secure/pagesInsta/valuesadd/\";\n    let fullUrl = `${host}${detectHost}${Page.id}`;\n    return axios.put(fullUrl, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"addProductInCategory response api =>\", res.data.data);\n\n      if (typeof res.data.data === \"string\") {\n        Swal.fire({\n          position: 'center',\n          icon: 'error',\n          title: res.data.data,\n          showConfirmButton: false,\n          timer: 2000\n        });\n      } else {\n        let categories = res.data.data;\n\n        if (categories.length > 0) {\n          categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n        }\n\n        ;\n        dispatch({\n          type: 'GET_CATEGORIES',\n          payload: categories\n        }); // To update the existing products\n\n        let findCategorySelected = categories.find(cat => {\n          return cat._id === category._id;\n        });\n\n        if (findCategorySelected) {\n          dispatch({\n            type: 'SELECT_CATEGORIE',\n            payload: findCategorySelected\n          });\n        }\n\n        ;\n      }\n    }).catch(err => {\n      console.log(\"addProductInCategory error api =>\", err);\n    });\n  };\n};\nexport const deleteCategory = (category, Page) => {\n  return dispatch => {\n    // console.log(\"Rak bech tfasakh l category hedhu =>\", category);\n    // console.log(\"Rak bech tfasakh l category men page hedhi =>\", page);\n    let objectToSend = {\n      id: category._id\n    };\n    let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/entiteremove/\" : \"/api/v1/secure/pagesInsta/entiteremove/\";\n    let fullUrl = `${host}${detectHost}${Page.id}`;\n    return axios.put(fullUrl, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"deleteCategory response api =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      }); // dispatch({\n      //     type: 'GET_CATEGORIES',\n      //     payload: categories\n      // });\n    }).catch(err => {\n      console.log(\"deleteCategory error api =>\", err);\n    });\n  };\n};\nexport const selectProduct = product => {\n  return dispatch => {\n    console.log(\"Redux selected Product =>\", product);\n    dispatch({\n      type: 'SELECT_PRODUCT',\n      payload: product\n    });\n  };\n};\nexport const selectCategory = (category, history) => {\n  return dispatch => {\n    // console.log(\"Redux selected Category! =>\", category);\n    dispatch({\n      type: 'SELECT_CATEGORIE',\n      payload: category\n    });\n    history.push('update-products');\n  };\n};\nexport const getCategories = page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/project/get/entitiesproject/${page.platform}/${page.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      // console.log(\"all Categories of this page => =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      });\n    }).catch(err => console.log(\"err getCategories\", err));\n  };\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/myProductsActions.js"],"names":["axios","host","Swal","reDisptachPage","Page","history","dispatch","push","type","payload","removeSynonym","synonymValue","product","indexSyn","categorySelected","objectToSend","index","id","_id","synonym","console","log","detectHost","platform","fullUrl","put","headers","localStorage","getItem","then","res","data","categories","length","map","cat","default","splice","findCategorySelected","find","catch","err","addSynonym","idEntity","idChildren","synonyms","fire","position","icon","title","showConfirmButton","timer","removeProduct","entity","productName","content","updateProductName","newProductName","name","updateCategoryName","categoryName","addCategory","allProducts","idPage","values","post","addProductInCategory","category","deleteCategory","selectProduct","selectCategory","getCategories","page","get"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { host } from '../../config';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js'\r\n\r\n\r\n\r\nexport const reDisptachPage = (Page, history) => {\r\n    return async (dispatch) => {\r\n\r\n        if(history) {\r\n            history.push('manage-products');\r\n            dispatch({\r\n                type: 'SELECT_SOCIAL_MEDIA_PAGE',\r\n                payload: Page,\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: 'SELECT_SOCIAL_MEDIA_PAGE',\r\n                payload: Page,\r\n            });\r\n        };\r\n\r\n    };\r\n};\r\n\r\nexport const removeSynonym = (synonymValue, product, indexSyn, Page, categorySelected) => {\r\n    return (dispatch) => {\r\n       \r\n        let objectToSend = {\r\n            index : indexSyn,\r\n            id : product._id,\r\n            synonym: synonymValue,\r\n        }\r\n        console.log(\"Let's removeSynonym to the product => \", objectToSend);\r\n\r\n        let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/removesyn/\" : \"/api/v1/secure/pagesInsta/removesyn/\";\r\n        let fullUrl = `${host}${detectHost}${Page.id}`;\r\n\r\n        return axios.put(fullUrl,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"removeSynonym response api =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n\r\n            // To update the existing products\r\n            let findCategorySelected = categories.find((cat) => {\r\n                return cat._id === categorySelected._id\r\n            })\r\n\r\n            if(findCategorySelected) {\r\n                dispatch({\r\n                    type: 'SELECT_CATEGORIE',\r\n                    payload: findCategorySelected\r\n                });\r\n            };\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"removeSynonym error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const addSynonym = (synonymValue, categorySelected, product, Page) => {\r\n    return (dispatch) => {\r\n        \r\n        let objectToSend = {\r\n            idEntity : categorySelected._id,\r\n            idChildren : product._id,\r\n            synonyms: synonymValue,\r\n        }\r\n        console.log(\"Let's addSynonym to the product => \", objectToSend);\r\n\r\n        let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/synonymssupdate/\" : \"/api/v1/secure/pagesInsta/synonymssupdate/\";\r\n        let fullUrl = `${host}${detectHost}${Page.id}`;\r\n\r\n        return axios.put(fullUrl,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"addSynonym response api =>\", res.data.data);\r\n\r\n            if(typeof(res.data.data) === \"string\") {\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'error',\r\n                    title: res.data.data,\r\n                    showConfirmButton: false,\r\n                    timer: 2000\r\n                });\r\n            } else {\r\n                let categories = res.data.data;\r\n    \r\n                if(categories.length > 0) {\r\n                    categories.map((cat,index) =>\r\n                        cat.default === true && categories.splice(index,1)\r\n                    );\r\n                };\r\n    \r\n                dispatch({\r\n                    type: 'GET_CATEGORIES',\r\n                    payload: categories\r\n                });\r\n    \r\n                // To update the existing products\r\n                let findCategorySelected = categories.find((cat) => {\r\n                    return cat._id === categorySelected._id\r\n                })\r\n    \r\n                if(findCategorySelected) {\r\n                    dispatch({\r\n                        type: 'SELECT_CATEGORIE',\r\n                        payload: findCategorySelected\r\n                    });\r\n                };\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"addSynonym error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const removeProduct = (categorySelected, product, Page) => {\r\n    return (dispatch) => {\r\n        \r\n        let objectToSend = {\r\n            entity : categorySelected._id,\r\n            id: product._id,\r\n            productName: product.content\r\n        }\r\n        console.log(\"Let's removeProduct => \", objectToSend);\r\n\r\n        let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/contentremove/\" : \"/api/v1/secure/pagesInsta/contentremove/\";\r\n        let fullUrl = `${host}${detectHost}${Page.id}`;\r\n\r\n        return axios.put(fullUrl,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"removeProduct response api =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n\r\n            // To update the existing products\r\n            let findCategorySelected = categories.find((cat) => {\r\n                return cat._id === categorySelected._id\r\n            })\r\n\r\n            if(findCategorySelected) {\r\n                dispatch({\r\n                    type: 'SELECT_CATEGORIE',\r\n                    payload: findCategorySelected\r\n                });\r\n            };\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"removeProduct error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const updateProductName = (newProductName, categorySelected, product, Page) => {\r\n    return (dispatch) => {\r\n        \r\n        let objectToSend = {\r\n            name : newProductName,\r\n            productName: categorySelected.name,\r\n            id : categorySelected._id,\r\n            idChildren : product._id,\r\n        }\r\n        \r\n        let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/contentupdate/\" : \"/api/v1/secure/pagesInsta/contentupdate/\";\r\n        let fullUrl = `${host}${detectHost}${Page.id}`;\r\n        \r\n        // console.log(\"Let's update the product => \", objectToSend, \"with Page =>\", Page, \"with the full URL\", fullUrl);\r\n\r\n        return axios.put(fullUrl,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"updateProductName response api =>\", res.data.data);\r\n\r\n            if(typeof(res.data.data) === \"string\") {\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'error',\r\n                    title: res.data.data,\r\n                    showConfirmButton: false,\r\n                    timer: 2000\r\n                });\r\n            } else {\r\n                let categories = res.data.data;\r\n    \r\n                if(categories.length > 0) {\r\n                    categories.map((cat,index) =>\r\n                        cat.default === true && categories.splice(index,1)\r\n                    );\r\n                };\r\n    \r\n                dispatch({\r\n                    type: 'GET_CATEGORIES',\r\n                    payload: categories\r\n                });\r\n    \r\n                // To update the existing products\r\n                let findCategorySelected = categories.find((cat) => {\r\n                    return cat._id === categorySelected._id\r\n                })\r\n    \r\n                if(findCategorySelected) {\r\n                    dispatch({\r\n                        type: 'SELECT_CATEGORIE',\r\n                        payload: findCategorySelected\r\n                    });\r\n                };                \r\n            } \r\n\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"updateProductName error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const updateCategoryName = (categorySelected,categoryName,Page) => {\r\n    return (dispatch) => {\r\n        \r\n        let objectToSend = {\r\n            id : categorySelected._id,\r\n            name: categoryName,\r\n        };\r\n        // console.log(\"Let's update the category\", objectToSend, 'id Page', Page.id);\r\n        \r\n        let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/nameentiteupdate/\" : \"/api/v1/secure/pagesInsta/nameentiteupdate/\";\r\n        let fullUrl = `${host}${detectHost}${Page.id}`;\r\n        \r\n        return axios.put(fullUrl,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"updateCategoryName response api =>\", res.data.data);\r\n\r\n            if(typeof(res.data.data) === \"string\") {\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'error',\r\n                    title: res.data.data,\r\n                    showConfirmButton: false,\r\n                    timer: 2000\r\n                });\r\n            } else {\r\n                let categories = res.data.data;\r\n    \r\n                if(categories.length > 0) {\r\n                    categories.map((cat,index) =>\r\n                        cat.default === true && categories.splice(index,1)\r\n                    );\r\n                };\r\n    \r\n                dispatch({\r\n                    type: 'GET_CATEGORIES',\r\n                    payload: categories\r\n                });\r\n            }\r\n\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"updateCategoryName error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const addCategory = (Page, categoryName, allProducts,history) => {\r\n    return (dispatch) => {\r\n\r\n        let objectToSend = {\r\n            idPage: Page.id,\r\n            entity: {\r\n                name: categoryName,\r\n                values: allProducts,\r\n            }\r\n        };\r\n        // console.log(\"add New category\", objectToSend);\r\n\r\n        let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/entities/add/\" : \"/api/v1/secure/pagesInsta/entities/add/\";\r\n        let fullUrl = `${host}${detectHost}${Page.id}`;\r\n\r\n        return axios.post(fullUrl,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"addCategory response api =>\", res.data.data);\r\n\r\n            if(typeof(res.data.data) === \"string\") {\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'error',\r\n                    title: res.data.data,\r\n                    showConfirmButton: false,\r\n                    timer: 2000\r\n                });\r\n            } else {\r\n                let categories = res.data.data;\r\n    \r\n                if(categories.length > 0) {\r\n                    categories.map((cat,index) =>\r\n                        cat.default === true && categories.splice(index,1)\r\n                    );\r\n                };\r\n    \r\n                dispatch({\r\n                    type: 'GET_CATEGORIES',\r\n                    payload: categories\r\n                });\r\n    \r\n                history.push('manage-products');\r\n    \r\n                dispatch({\r\n                    type: 'SELECT_SOCIAL_MEDIA_PAGE',\r\n                    payload: Page,\r\n                });\r\n            }\r\n\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"addCategory error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const addProductInCategory = (category,Page,newProductName) => {\r\n    return (dispatch) => {\r\n     \r\n        let objectToSend = {\r\n            id: category._id,\r\n            entity: {\r\n                synonyms: [newProductName],\r\n                content: newProductName,\r\n            },\r\n        };\r\n        // console.log(\"add New Product in category\", objectToSend);\r\n\r\n        let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/valuesadd/\" : \"/api/v1/secure/pagesInsta/valuesadd/\";\r\n        let fullUrl = `${host}${detectHost}${Page.id}`;\r\n\r\n        return axios.put(fullUrl,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"addProductInCategory response api =>\", res.data.data);\r\n\r\n            if(typeof(res.data.data) === \"string\") {\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'error',\r\n                    title: res.data.data,\r\n                    showConfirmButton: false,\r\n                    timer: 2000\r\n                });\r\n            } else {\r\n                let categories = res.data.data;\r\n    \r\n                if(categories.length > 0) {\r\n                    categories.map((cat,index) =>\r\n                        cat.default === true && categories.splice(index,1)\r\n                    );\r\n                };\r\n    \r\n                dispatch({\r\n                    type: 'GET_CATEGORIES',\r\n                    payload: categories\r\n                });\r\n    \r\n                // To update the existing products\r\n                let findCategorySelected = categories.find((cat) => {\r\n                    return cat._id === category._id\r\n                })\r\n    \r\n                if(findCategorySelected) {\r\n                    dispatch({\r\n                        type: 'SELECT_CATEGORIE',\r\n                        payload: findCategorySelected\r\n                    });\r\n                };\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"addProductInCategory error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const deleteCategory = (category,Page) => {\r\n    return (dispatch) => {\r\n        // console.log(\"Rak bech tfasakh l category hedhu =>\", category);\r\n        // console.log(\"Rak bech tfasakh l category men page hedhi =>\", page);\r\n        \r\n        let objectToSend = {\r\n            id: category._id\r\n        };\r\n\r\n        let detectHost = Page.platform === \"facebook\" ? \"/api/v1/secure/pages/entiteremove/\" : \"/api/v1/secure/pagesInsta/entiteremove/\";\r\n        let fullUrl = `${host}${detectHost}${Page.id}`;\r\n\r\n        return axios.put(fullUrl,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"deleteCategory response api =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n\r\n            // dispatch({\r\n            //     type: 'GET_CATEGORIES',\r\n            //     payload: categories\r\n            // });\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"deleteCategory error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const selectProduct = (product) => {\r\n    return (dispatch) => {\r\n        console.log(\"Redux selected Product =>\", product);\r\n        \r\n        dispatch({\r\n            type: 'SELECT_PRODUCT',\r\n            payload: product,\r\n        });\r\n    };\r\n};\r\n\r\nexport const selectCategory = (category,history) => {\r\n    return (dispatch) => {\r\n        // console.log(\"Redux selected Category! =>\", category);\r\n        \r\n        dispatch({\r\n            type: 'SELECT_CATEGORIE',\r\n            payload: category\r\n        });\r\n        history.push('update-products');\r\n    };\r\n};\r\n\r\nexport const getCategories = (page) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + `/api/v1/secure/project/get/entitiesproject/${page.platform}/${page.id}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log(\"all Categories of this page => =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n        })\r\n        .catch((err) => console.log(\"err getCategories\", err))\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}