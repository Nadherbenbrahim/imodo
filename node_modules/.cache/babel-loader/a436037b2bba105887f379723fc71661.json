{"ast":null,"code":"import axios from 'axios';\nimport { host } from '../../config';\nexport const ProductFirstUpdate = (data, idproject) => {\n  return dispatch => {// return axios.put(host + `/api/v1/secure/project/firstupdate/${idproject}`, data, {\n    //     headers: {\n    //         'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n    //     }\n    // })\n    // .then(res => {\n    //        console.log('first update response redux =>', res.data)\n    //         // return res;\n    //        // console.log('changeeeeeeed')\n    //         // if (res.data.data === \"not exist\") {\n    //         //     dispatch(showCategoryPoppup())\n    //         // } else {\n    //         //     dispatch(hideCategoryPoppup())\n    //         // }\n    // }).catch(() => dispatch(hideLoading()))\n  };\n};\nexport const addGenericResponse = (project, idproject) => {\n  return dispatch => {\n    return axios.put(host + `/api/v1/secure/project/generiqueadd/${idproject}`, project, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('addReponseGeneric Redux =>', res.data);\n    }).catch(err => console.log(\"AddGenericResponse err\", err));\n  };\n};\nexport const updateGenericResponse = (project, idproject) => {\n  return dispatch => {\n    return axios.put(host + `/api/v1/secure/project/generiqueupdate/${idproject}`, project, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => console.log('updateReponseGeneric redux ', res.data)).catch(err => console.log(\"Update GenericResponse err\", err));\n  };\n};\nexport const addProject = (wizardSelectedPage, wizardSelectedPost) => {\n  return dispatch => {\n    let post = {\n      post: {\n        idPage: wizardSelectedPage.id,\n        name: wizardSelectedPage.name,\n        typePage: wizardSelectedPage.platform,\n        idPost: wizardSelectedPost ? wizardSelectedPost.id : []\n      }\n    }; // dispatch({\n    //     type: 'ADD_ID_PROJECT',\n    //     payload: \"5f647e68ed6bf63b0c1b6d3f\"\n    // });\n\n    return axios.post(host + `/api/v1/secure/project/add`, post, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('project added his id is =>', res.data.data);\n      dispatch({\n        type: 'ADD_ID_PROJECT',\n        payload: res.data.data\n      });\n    }).catch(err => {\n      console.log(\"addProject action\", err);\n    });\n  };\n};\nexport const getAllIntents = intentType => {\n  return dispatch => {\n    return axios.get(host + (intentType === \"generic\" ? `/api/v1/intent/generiqueintent/all` : `/api/v1/intent/defaulintent/all`), {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      // console.log(`get ${intentType} intents`, res.data.data);\n      let obj = [];\n      let newData = {};\n\n      for (let i = 0; i < res.data.data.length; i++) {\n        obj = {\n          [res.data.data[i]['intent']]: {\n            id: res.data.data[i]['id'],\n            name: res.data.data[i]['intent'],\n            date: res.data.data[i]['date']\n          }\n        };\n        newData = { ...newData,\n          ...obj\n        };\n      }\n\n      ;\n      /*\r\n           if u want full intent object send newData :D \r\n          // console.log(\"Hey new data filtered :D\", newData);\r\n      */\n\n      dispatch({\n        type: 'GET_ALL_WIZARD_INTENTS',\n        payload: Object.keys(newData)\n      });\n    }).catch(err => console.log(\"Get all intents action\", err));\n  };\n};\nexport const getWizardPagesPosts = wizardPage => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/post/get/${wizardPage.id}/${wizardPage.platform}/all`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      // console.log(\"posts ya haaaaaiiderrr\",res.data.data);\n      // res.data.data.map((post, index) => {\n      //     let createdTime = new Date(Date.parse(post.created_time));\n      //     console.log(index, ' :=> ', createdTime)\n      // });\n      // let toSort = res.data.data;\n      res.data.data.sort(function (a, b) {\n        // Turn your strings into dates, and then subtract them\n        // to get a value that is either negative, positive, or zero.\n        return new Date(Date.parse(b.created_time)) - new Date(Date.parse(a.created_time));\n      }); // console.log(\"Final\", toSort);\n\n      dispatch({\n        type: 'GET_WIZARD_PAGE_POSTS',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"getWizardPagesPosts \", err));\n  };\n};\nexport const setWizardSelectedPost = post => {\n  return async dispatch => {\n    // const selectedPage = {\n    //     platform: platform,\n    //     name: pageName,\n    //     picture_url : picture !== null ? picture : `https://graph.facebook.com/v8.0/${idPage}/picture?access_token=${accessToken}`,\n    //     id: idPage,\n    //     accessToken: accessToken,\n    // };\n    dispatch({\n      type: 'SELECT_WIZARD_POST',\n      payload: post\n    });\n  };\n};\nexport const setWizardIntentType = (intentType, navigation) => {\n  return async dispatch => {\n    dispatch({\n      type: 'SELECT_WIZARD_INTENT_TYPE',\n      payload: intentType\n    });\n    navigation.push('/home/auto-wizard');\n  };\n};\nexport const setWizardSelectedPage = (platform, pageName, picture, idPage, accessToken, status) => {\n  return async dispatch => {\n    const selectedPage = {\n      platform: platform === \"insta\" ? \"instagram\" : \"facebook\",\n      name: pageName,\n      picture_url: picture !== null ? picture : `https://graph.facebook.com/v8.0/${idPage}/picture?access_token=${accessToken}`,\n      id: idPage,\n      accessToken: accessToken,\n      status: status\n    };\n    dispatch({\n      type: 'SELECT_WIZARD_PAGE',\n      payload: selectedPage\n    });\n  };\n};\nexport const nextSpecificWizardStep = step => {\n  return async dispatch => {\n    dispatch({\n      type: 'NEXT_SPECIFIC_WIZARD_STEP',\n      payload: step\n    });\n  };\n};\nexport const nextWizardStep = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'NEXT_WIZARD_STEP'\n    });\n  };\n};\nexport const prevWizardStep = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'PREV_WIZARD_STEP'\n    });\n  };\n};\nexport const resetWizardStep = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'RESET_WIZARD_STEP'\n    });\n  };\n};\nexport const resetَAllWizard = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'RESET_ALL_WIZARD'\n    });\n  };\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/wizardActions.js"],"names":["axios","host","ProductFirstUpdate","data","idproject","dispatch","addGenericResponse","project","put","headers","localStorage","getItem","then","res","console","log","catch","err","updateGenericResponse","addProject","wizardSelectedPage","wizardSelectedPost","post","idPage","id","name","typePage","platform","idPost","type","payload","getAllIntents","intentType","get","obj","newData","i","length","date","Object","keys","getWizardPagesPosts","wizardPage","sort","a","b","Date","parse","created_time","setWizardSelectedPost","setWizardIntentType","navigation","push","setWizardSelectedPage","pageName","picture","accessToken","status","selectedPage","picture_url","nextSpecificWizardStep","step","nextWizardStep","prevWizardStep","resetWizardStep","resetَAllWizard"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { host } from '../../config';\r\n\r\n\r\nexport const ProductFirstUpdate = (data, idproject) => {\r\n    return (dispatch) => {\r\n        \r\n        // return axios.put(host + `/api/v1/secure/project/firstupdate/${idproject}`, data, {\r\n        //     headers: {\r\n        //         'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n        //     }\r\n        // })\r\n        // .then(res => {\r\n        //        console.log('first update response redux =>', res.data)\r\n        //         // return res;\r\n        //        // console.log('changeeeeeeed')\r\n\r\n        //         // if (res.data.data === \"not exist\") {\r\n        //         //     dispatch(showCategoryPoppup())\r\n        //         // } else {\r\n        //         //     dispatch(hideCategoryPoppup())\r\n        //         // }\r\n        // }).catch(() => dispatch(hideLoading()))\r\n    }\r\n};\r\n\r\nexport const addGenericResponse = (project, idproject) => {\r\n    return (dispatch) => {\r\n       \r\n        return axios.put(host + `/api/v1/secure/project/generiqueadd/${idproject}`, project, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n            .then(res => {  console.log('addReponseGeneric Redux =>', res.data) })\r\n            .catch((err) => console.log(\"AddGenericResponse err\", err))\r\n    }\r\n};\r\n\r\nexport const updateGenericResponse = (project, idproject) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.put(host + `/api/v1/secure/project/generiqueupdate/${idproject}`, project, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => console.log('updateReponseGeneric redux ', res.data))\r\n        .catch((err) => console.log(\"Update GenericResponse err\", err))\r\n    }\r\n};\r\n\r\nexport const addProject = (wizardSelectedPage,wizardSelectedPost) => {\r\n    return (dispatch) => {\r\n        \r\n        let post = {\r\n            post : {\r\n                idPage: wizardSelectedPage.id,\r\n                name: wizardSelectedPage.name,\r\n                typePage: wizardSelectedPage.platform,\r\n                idPost: wizardSelectedPost ? wizardSelectedPost.id : [],\r\n            }\r\n        };\r\n        // dispatch({\r\n        //     type: 'ADD_ID_PROJECT',\r\n        //     payload: \"5f647e68ed6bf63b0c1b6d3f\"\r\n        // });\r\n        \r\n        return axios.post(host + `/api/v1/secure/project/add`,post,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('project added his id is =>', res.data.data);\r\n\r\n            dispatch({\r\n                type: 'ADD_ID_PROJECT',\r\n                payload: res.data.data\r\n            })\r\n        }).catch(err => {\r\n            console.log(\"addProject action\", err);\r\n        })\r\n    }\r\n};\r\n\r\nexport const getAllIntents = (intentType) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + (intentType === \"generic\" ? `/api/v1/intent/generiqueintent/all` : `/api/v1/intent/defaulintent/all`), {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n            .then(res => {\r\n                // console.log(`get ${intentType} intents`, res.data.data);\r\n\r\n                let obj = [];\r\n                let newData = {}\r\n\r\n                for (let i = 0; i < res.data.data.length; i++) {\r\n                    obj = {\r\n                      [res.data.data[i]['intent']]: {\r\n                          id: res.data.data[i]['id'],\r\n                          name: res.data.data[i]['intent'],\r\n                          date: res.data.data[i]['date']\r\n                      }\r\n                    }\r\n                    newData = { ...newData, ...obj }\r\n                };\r\n\r\n                /*\r\n                     if u want full intent object send newData :D \r\n                    // console.log(\"Hey new data filtered :D\", newData);\r\n                */\r\n\r\n                dispatch({\r\n                    type: 'GET_ALL_WIZARD_INTENTS',\r\n                    payload: Object.keys(newData)\r\n                })\r\n               \r\n            }).catch((err) => console.log(\"Get all intents action\", err))\r\n    }\r\n};\r\n\r\nexport const getWizardPagesPosts = (wizardPage) => {\r\n    return (dispatch) => {\r\n\r\n        return axios.get(host + `/api/v1/secure/post/get/${wizardPage.id}/${wizardPage.platform}/all`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log(\"posts ya haaaaaiiderrr\",res.data.data);\r\n\r\n            // res.data.data.map((post, index) => {\r\n            //     let createdTime = new Date(Date.parse(post.created_time));\r\n\r\n            //     console.log(index, ' :=> ', createdTime)\r\n            // });\r\n            \r\n            // let toSort = res.data.data;\r\n\r\n            res.data.data.sort(function(a,b){\r\n                // Turn your strings into dates, and then subtract them\r\n                // to get a value that is either negative, positive, or zero.\r\n                return new Date(Date.parse(b.created_time)) - new Date(Date.parse(a.created_time));\r\n            });\r\n\r\n            // console.log(\"Final\", toSort);\r\n\r\n            dispatch({\r\n                type: 'GET_WIZARD_PAGE_POSTS',\r\n                payload: res.data.data\r\n            })\r\n        }).catch((err) => console.log(\"getWizardPagesPosts \", err))\r\n    }\r\n};\r\n\r\nexport const setWizardSelectedPost = (post) => {\r\n    return async (dispatch) => {\r\n\r\n        // const selectedPage = {\r\n        //     platform: platform,\r\n        //     name: pageName,\r\n        //     picture_url : picture !== null ? picture : `https://graph.facebook.com/v8.0/${idPage}/picture?access_token=${accessToken}`,\r\n        //     id: idPage,\r\n        //     accessToken: accessToken,\r\n        // };\r\n\r\n        dispatch({\r\n            type: 'SELECT_WIZARD_POST', \r\n            payload: post,\r\n        });\r\n    }\r\n};\r\n\r\nexport const setWizardIntentType = (intentType,navigation) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch({\r\n            type: 'SELECT_WIZARD_INTENT_TYPE', \r\n            payload: intentType,\r\n        });\r\n        navigation.push('/home/auto-wizard')\r\n    }\r\n};\r\n\r\nexport const setWizardSelectedPage = (platform,pageName,picture,idPage,accessToken,status) => {\r\n    return async (dispatch) => {\r\n\r\n        const selectedPage = {\r\n            platform: platform === \"insta\" ? \"instagram\" : \"facebook\",\r\n            name: pageName,\r\n            picture_url : picture !== null ? picture : `https://graph.facebook.com/v8.0/${idPage}/picture?access_token=${accessToken}`,\r\n            id: idPage,\r\n            accessToken: accessToken,\r\n            status: status\r\n        };\r\n\r\n        dispatch({\r\n            type: 'SELECT_WIZARD_PAGE', \r\n            payload: selectedPage,\r\n        });\r\n    }\r\n};\r\n\r\nexport const nextSpecificWizardStep = (step) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'NEXT_SPECIFIC_WIZARD_STEP',payload: step });\r\n    }\r\n};\r\n\r\nexport const nextWizardStep = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'NEXT_WIZARD_STEP' });\r\n    }\r\n};\r\n\r\nexport const prevWizardStep = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'PREV_WIZARD_STEP' });\r\n    }\r\n};\r\n\r\nexport const resetWizardStep = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'RESET_WIZARD_STEP' });\r\n    }\r\n};\r\n\r\nexport const resetَAllWizard = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'RESET_ALL_WIZARD' });\r\n    }\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}