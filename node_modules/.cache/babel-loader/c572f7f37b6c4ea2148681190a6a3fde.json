{"ast":null,"code":"import axios from 'axios';\nimport { host } from '../../config';\nexport const setPreferences = (spam, likes, delay, Page, Platform, exactlySeconds, exactlyMinutes, randomlyFromSeconds, randomlyFromMinutes, randomlyToSeconds, randomlyToMinutes) => {\n  return dispatch => {\n    let objectToSend = null;\n    let pagePlatform = Platform === \"fb\" ? \"facebook\" : \"instagram\";\n\n    if (delay === \"immediatly\") {\n      objectToSend = {\n        platforme: pagePlatform,\n        likesComment: likes,\n        spam: spam,\n        respReplies: {\n          status: 'immediatly',\n          time: [0]\n        }\n      };\n    } else if (delay === \"Exactly\") {\n      // Minutes + Seconds => X ms\n      let minutes = exactlyMinutes * 60000;\n      let seconds = exactlySeconds * 1000;\n      let finalTime = minutes + seconds;\n      objectToSend = {\n        platforme: pagePlatform,\n        likesComment: likes,\n        spam: spam,\n        respReplies: {\n          statut: 'Exactly',\n          time: [finalTime]\n        }\n      };\n    } else {\n      // from Minutes + Seconds => X ms\n      // to Minutes + Seconds => X ms\n      let minutesFrom = randomlyFromMinutes * 60000;\n      let secondsFrom = randomlyFromSeconds * 1000;\n      let finalTimeFrom = minutesFrom + secondsFrom;\n      let minutesTo = randomlyToMinutes * 60000;\n      let secondsTo = randomlyToSeconds * 1000;\n      let finalTimeTo = minutesTo + secondsTo;\n      objectToSend = {\n        platforme: pagePlatform,\n        likesComment: likes,\n        spam: spam,\n        respReplies: {\n          statut: 'Randomly',\n          time: [finalTimeFrom, finalTimeTo]\n        }\n      };\n    }\n\n    console.log(\"Preferences sending to nour\", objectToSend);\n    return axios.put(host + `/api/v1/secure/pages/preference/${Page.idPage}/${pagePlatform}`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('setPreferences Response =>', res.data.data);\n    }).catch(err => console.log(\"setPreferences err\", err));\n  };\n};\nexport const getConnectedPagesProject = () => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/project/get/user`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('all projects for this user', res.data.data);\n      dispatch({\n        type: 'GET_WIZARD_ACTIVE_PAGE_POSTS',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"err getConnectedPagesProject\", err));\n  };\n};\nexport const addPageEntity = page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/pages/entities/add/${page.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('add entity', res.data.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err addPageEntity\", err));\n  };\n};\nexport const getPageEntities = page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/project/get/entitiesproject/${page.platform}/${page.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      // console.log('entities mtaaa page', res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_ENTITIES_OF_A_PAGE',\n        payload: categories\n      });\n    }).catch(err => console.log(\"err getPageEntities\", err));\n  };\n}; // TEAM:\n\nexport const sendMailTeam = (wizardSelectedPage, emailTeamMember) => {\n  return dispatch => {\n    return axios.post(host + `/api/v1/secure/membership/sendMail/${wizardSelectedPage.id}/${wizardSelectedPage.platform}/`, {\n      email: emailTeamMember\n    }, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('Sending the maiiiiiil  => ', res.data.data); // dispatch({\n      //     type: 'GET_ALL_PRODUCT_CATEGORIES',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err getConnectedPagesProject\", err));\n  };\n};\nexport const inviteMember = page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/membership/get/${page.id}/${page.platform}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }); // .then(res => {\n    //     console.log('Token of invitation', res.data.data);\n    //     // dispatch({\n    //     //     type: 'GET_ENTITIES_OF_A_PAGE',\n    //     //     payload: res.data.data\n    //     // })\n    // })\n    // .catch((err) => console.log(\"err inviteMember\", err))\n  };\n};\nexport const deleteTeamMember = (page, idFacebook) => {\n  return dispatch => {\n    let type = page.platform;\n    let idPage = page.id;\n    return axios.post(host + `/api/v1/secure/membership/deleteMember/`, {\n      idFacebook,\n      idPage,\n      type\n    }, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {// console.log('deleteTeamMember', res.data.data);\n      // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"deleteTeamMember error\", err));\n  };\n};\n/* INSTAGRAM */\n\nexport const connectInstagramPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/connect/`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de connect page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err connect page insta\", err));\n  };\n};\nexport const disconnectInstagramPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/disconnect`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err disconnect page instagram\", err));\n  };\n};\nexport const deleteInstagramPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/delete`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err disconnect page instagram\", err));\n  };\n};\nexport const makeOwnerInstagramPage = (idPage, idFacebook) => {\n  return dispatch => {\n    let page = {\n      id: idPage,\n      idFacebook: idFacebook // idFacebook of the new owner\n\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/owner`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de owner page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err owner page instagram\", err));\n  };\n};\n/* FACEBOOK */\n\nexport const connectFacebookPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pages/connect/`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de connect page facebook', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err de connect page facebook\", err));\n  };\n};\nexport const disconnectFacebookPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pages/disconnect/disconnect`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page facebok', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err de disconnect page facebok\", err));\n  };\n};\nexport const deleteFacebookPage = (idPage, idFacebook) => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pages/disconnect/delete`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page facebok', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err de disconnect page facebok\", err));\n  };\n};\nexport const makeOwnerFacebookPage = (idPage, idFacebook) => {\n  return dispatch => {\n    let page = {\n      id: idPage,\n      idFacebook: idFacebook // idFacebook of the new owner\n\n    };\n    return axios.post(host + `/api/v1/secure/pages/disconnect/owner`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de owner page facebook', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err owner page facebook\", err));\n  };\n};\nexport const selectSocialMediaPage = (page, platform, status) => {\n  return async dispatch => {\n    // console.log(\"Full page data =>\", page );\n    // let userData = JSON.parse(localStorage.getItem('userData'));\n    // console.log(\"Full userData\", userData.user.idFacebook);\n\n    /*\r\n        ALL STATUS :\r\n        props.status === \"listPageConnectedOwner\" \r\n        ? \r\n        #E5007D\" \r\n        : \r\n        props.status === \"listPageInvite\" \r\n        ?\r\n        #139216\"\r\n        : \r\n        \"listPageInviteAdmin\" \r\n        ?\r\n        #199EE3\" \r\n        :\r\n        #B4B4B4\"\r\n    */\n    const selectedPage = {\n      platform: platform === \"fb\" ? \"facebook\" : \"instagram\",\n      name: page.name,\n      picture_url: page.imageUrl ? page.imageUrl : `https://graph.facebook.com/v8.0/${page.idPage}/picture?access_token=${page.access_token}`,\n      id: page.idPage,\n      accessToken: page.access_token,\n      team: page.user,\n      admins: page.admins,\n      status: status\n    };\n    dispatch({\n      type: 'SELECT_SOCIAL_MEDIA_PAGE',\n      payload: selectedPage\n    });\n  };\n};\nexport const getFbData = () => {\n  return async dispatch => {\n    /*\r\n        platform={\"fb\"} \r\n        isConnectedPage={page.isConnected}\r\n        namePage={page.name} \r\n        idPage={page.idPage} \r\n        picture={null} \r\n        accessToken={page.access_token} \r\n        status={key} \r\n        team={page.user} \r\n        admins={page.admins}\r\n    */\n    let token = await localStorage.getItem('authtoken');\n    return axios.get(host + '/api/v1/secure/pages/get/all/', {\n      headers: {\n        'authorization': 'Bearer ' + token\n      }\n    }).then(res => {\n      let allFbPages = [];\n      Object.entries(res.data.data).map(([key, tab]) => tab.map(page => {\n        page.status = key;\n        allFbPages.push(page);\n      }));\n      allFbPages.sort((page, nextPage) => {\n        let nameA = page.name.toLowerCase(),\n            nameB = nextPage.name.toLowerCase(); //sort ascending \n\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0; // default return value (no sorting)\n      });\n      dispatch({\n        type: 'GET_FB_DATA',\n        payload: allFbPages,\n        payload2: res.data.data\n      });\n    }).catch(err => {\n      console.log(\"GetFbData err\", JSON.stringify(err));\n    });\n  };\n};\nexport const getInstaData = () => {\n  return async dispatch => {\n    /*\r\n        platform={\"fb\"} \r\n        isConnectedPage={page.isConnected}\r\n        namePage={page.name} \r\n        idPage={page.idPage} \r\n        picture={null} \r\n        accessToken={page.access_token} \r\n        status={key} \r\n        team={page.user} \r\n        admins={page.admins}\r\n    */\n    let token = await localStorage.getItem('authtoken');\n    return axios.get(host + '/api/v1/secure/pagesInsta/get/all/', {\n      headers: {\n        'authorization': 'Bearer ' + token\n      }\n    }).then(res => {\n      // console.log('Instagram pages ya haider =>', res.data.data)\n      let allInstaPages = [];\n      Object.entries(res.data.data).map(([key, tab]) => tab.map(page => {\n        page.status = key;\n        allInstaPages.push(page);\n      }));\n      allInstaPages.sort((page, nextPage) => {\n        let nameA = page.name.toLowerCase(),\n            nameB = nextPage.name.toLowerCase(); //sort ascending \n\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0; // default return value (no sorting)\n      });\n      dispatch({\n        type: 'GET_INSTA_DATA',\n        payload: allInstaPages,\n        payload2: res.data.data\n      });\n    }).catch(err => {\n      console.log(\"getInstaData error\", JSON.stringify(err));\n    });\n  };\n};\nexport const resetSocialMediaSelections = () => {\n  return async dispatch => dispatch({\n    type: 'RESET_SM_SELECTIONS'\n  });\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/socialMediaActions.js"],"names":["axios","host","setPreferences","spam","likes","delay","Page","Platform","exactlySeconds","exactlyMinutes","randomlyFromSeconds","randomlyFromMinutes","randomlyToSeconds","randomlyToMinutes","dispatch","objectToSend","pagePlatform","platforme","likesComment","respReplies","status","time","minutes","seconds","finalTime","statut","minutesFrom","secondsFrom","finalTimeFrom","minutesTo","secondsTo","finalTimeTo","console","log","put","idPage","headers","localStorage","getItem","then","res","data","catch","err","getConnectedPagesProject","get","type","payload","addPageEntity","page","id","getPageEntities","platform","categories","length","map","cat","index","default","splice","sendMailTeam","wizardSelectedPage","emailTeamMember","post","email","inviteMember","deleteTeamMember","idFacebook","connectInstagramPage","disconnectInstagramPage","deleteInstagramPage","makeOwnerInstagramPage","connectFacebookPage","disconnectFacebookPage","deleteFacebookPage","makeOwnerFacebookPage","selectSocialMediaPage","selectedPage","name","picture_url","imageUrl","access_token","accessToken","team","user","admins","getFbData","token","allFbPages","Object","entries","key","tab","push","sort","nextPage","nameA","toLowerCase","nameB","payload2","JSON","stringify","getInstaData","allInstaPages","resetSocialMediaSelections"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { host } from '../../config';\r\n\r\n\r\nexport const setPreferences = (spam,likes,delay,Page,Platform,exactlySeconds,exactlyMinutes,randomlyFromSeconds,randomlyFromMinutes,randomlyToSeconds,randomlyToMinutes) => {\r\n    return (dispatch) => {\r\n        \r\n        let objectToSend = null;\r\n        let pagePlatform = Platform === \"fb\" ? \"facebook\" : \"instagram\";\r\n        if(delay === \"immediatly\") {\r\n            objectToSend = {\r\n                platforme: pagePlatform,\r\n                likesComment:likes,\r\n                spam: spam,\r\n                respReplies: {\r\n                    status: 'immediatly',\r\n                    time: [0]\r\n                }\r\n            }\r\n\r\n        } else if(delay === \"Exactly\") {\r\n            // Minutes + Seconds => X ms\r\n            let minutes = exactlyMinutes * 60000;\r\n            let seconds = exactlySeconds * 1000;\r\n            let finalTime = minutes + seconds;\r\n\r\n            objectToSend = {\r\n                platforme: pagePlatform,\r\n                likesComment:likes,\r\n                spam: spam,\r\n                respReplies: {\r\n                    statut: 'Exactly',\r\n                    time: [finalTime],\r\n                }\r\n            }\r\n        } else {\r\n            // from Minutes + Seconds => X ms\r\n            // to Minutes + Seconds => X ms\r\n            let minutesFrom = randomlyFromMinutes * 60000;\r\n            let secondsFrom = randomlyFromSeconds * 1000;\r\n            let finalTimeFrom = minutesFrom + secondsFrom;\r\n            \r\n            let minutesTo = randomlyToMinutes * 60000;\r\n            let secondsTo = randomlyToSeconds * 1000;\r\n            let finalTimeTo = minutesTo + secondsTo;\r\n\r\n            objectToSend = {\r\n                platforme: pagePlatform,\r\n                likesComment:likes,\r\n                spam: spam,\r\n                respReplies: {\r\n                    statut: 'Randomly',\r\n                    time: [finalTimeFrom,finalTimeTo],\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        console.log(\"Preferences sending to nour\", objectToSend);\r\n\r\n        return axios.put(host + `/api/v1/secure/pages/preference/${Page.idPage}/${pagePlatform}`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('setPreferences Response =>', res.data.data)\r\n        })\r\n        .catch((err) => console.log(\"setPreferences err\", err))\r\n    }\r\n};\r\n\r\nexport const getConnectedPagesProject = () => {\r\n    return (dispatch) => {\r\n    \r\n        return axios.get(host + `/api/v1/secure/project/get/user`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('all projects for this user', res.data.data)\r\n            \r\n            dispatch({\r\n                type: 'GET_WIZARD_ACTIVE_PAGE_POSTS',\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch((err) => console.log(\"err getConnectedPagesProject\", err))\r\n    }\r\n};\r\n\r\nexport const addPageEntity = (page) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + `/api/v1/secure/pages/entities/add/${page.id}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('add entity', res.data.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err addPageEntity\", err))\r\n    }\r\n};\r\n\r\nexport const getPageEntities = (page) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + `/api/v1/secure/project/get/entitiesproject/${page.platform}/${page.id}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('entities mtaaa page', res.data.data);\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n\r\n\r\n            dispatch({\r\n                type: 'GET_ENTITIES_OF_A_PAGE',\r\n                payload: categories\r\n            })\r\n        })\r\n        .catch((err) => console.log(\"err getPageEntities\", err))\r\n    }\r\n};\r\n\r\n\r\n// TEAM:\r\nexport const sendMailTeam = (wizardSelectedPage,emailTeamMember) => {\r\n    return (dispatch) => {\r\n    \r\n        return axios.post(host + `/api/v1/secure/membership/sendMail/${wizardSelectedPage.id}/${wizardSelectedPage.platform}/`, {\r\n            email: emailTeamMember,\r\n        },\r\n        {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('Sending the maiiiiiil  => ', res.data.data)\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ALL_PRODUCT_CATEGORIES',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err getConnectedPagesProject\", err))\r\n    }\r\n};\r\n\r\nexport const inviteMember = (page) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + `/api/v1/secure/membership/get/${page.id}/${page.platform}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        // .then(res => {\r\n        //     console.log('Token of invitation', res.data.data);\r\n        \r\n        //     // dispatch({\r\n        //     //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n        //     //     payload: res.data.data\r\n        //     // })\r\n        // })\r\n        // .catch((err) => console.log(\"err inviteMember\", err))\r\n    }\r\n};\r\n\r\nexport const deleteTeamMember = (page,idFacebook) => {\r\n    return (dispatch) => {\r\n       let type = page.platform;\r\n       let idPage = page.id;\r\n\r\n        return axios.post(host + `/api/v1/secure/membership/deleteMember/`,{\r\n            idFacebook,\r\n            idPage,\r\n            type,\r\n        },{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('deleteTeamMember', res.data.data);\r\n        \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"deleteTeamMember error\", err))\r\n    }\r\n};\r\n\r\n\r\n/* INSTAGRAM */\r\nexport const connectInstagramPage = (idPage) => {\r\n    return (dispatch) => {\r\n\r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/connect/`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de connect page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err connect page insta\", err))\r\n    }\r\n};\r\n\r\nexport const disconnectInstagramPage = (idPage) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/disconnect`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err disconnect page instagram\", err))\r\n    };\r\n};\r\n\r\nexport const deleteInstagramPage = (idPage) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/delete`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err disconnect page instagram\", err))\r\n    };\r\n};\r\n\r\nexport const makeOwnerInstagramPage = (idPage,idFacebook) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n            idFacebook: idFacebook // idFacebook of the new owner\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/owner`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de owner page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err owner page instagram\", err))\r\n    };\r\n};\r\n\r\n/* FACEBOOK */\r\nexport const connectFacebookPage = (idPage) => {\r\n    return (dispatch) => {\r\n        \r\n        let page ={\r\n            id: idPage,\r\n        };\r\n\r\n        return axios.post(host + `/api/v1/secure/pages/connect/`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de connect page facebook', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err de connect page facebook\", err))\r\n    }\r\n};\r\n\r\nexport const disconnectFacebookPage = (idPage) => {\r\n    return (dispatch) => {\r\n\r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pages/disconnect/disconnect`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page facebok', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err de disconnect page facebok\", err))\r\n\r\n    };\r\n};\r\n\r\nexport const deleteFacebookPage = (idPage,idFacebook) => {\r\n    return (dispatch) => {\r\n\r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pages/disconnect/delete`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page facebok', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err de disconnect page facebok\", err))\r\n\r\n    };\r\n};\r\n\r\nexport const makeOwnerFacebookPage = (idPage,idFacebook) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n            idFacebook: idFacebook // idFacebook of the new owner\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pages/disconnect/owner`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de owner page facebook', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err owner page facebook\", err))\r\n    };\r\n};\r\n\r\n\r\nexport const selectSocialMediaPage = (page,platform,status) => {\r\n    return async (dispatch) => {\r\n\r\n        // console.log(\"Full page data =>\", page );\r\n        // let userData = JSON.parse(localStorage.getItem('userData'));\r\n        // console.log(\"Full userData\", userData.user.idFacebook);\r\n\r\n        /*\r\n            ALL STATUS :\r\n            props.status === \"listPageConnectedOwner\" \r\n            ? \r\n            #E5007D\" \r\n            : \r\n            props.status === \"listPageInvite\" \r\n            ?\r\n            #139216\"\r\n            : \r\n            \"listPageInviteAdmin\" \r\n            ?\r\n            #199EE3\" \r\n            :\r\n            #B4B4B4\"\r\n        */\r\n \r\n        const selectedPage = {\r\n            platform: platform === \"fb\" ? \"facebook\" : \"instagram\",\r\n            name: page.name,\r\n            picture_url : page.imageUrl ? page.imageUrl : `https://graph.facebook.com/v8.0/${page.idPage}/picture?access_token=${page.access_token}`,\r\n            id: page.idPage,\r\n            accessToken: page.access_token,\r\n            team: page.user,\r\n            admins: page.admins,\r\n            status: status,\r\n        };\r\n        \r\n        dispatch({\r\n            type: 'SELECT_SOCIAL_MEDIA_PAGE',\r\n            payload: selectedPage\r\n        })\r\n    }\r\n};\r\n\r\nexport const getFbData = () => {\r\n    return async (dispatch) => {\r\n        \r\n        /*\r\n            platform={\"fb\"} \r\n            isConnectedPage={page.isConnected}\r\n            namePage={page.name} \r\n            idPage={page.idPage} \r\n            picture={null} \r\n            accessToken={page.access_token} \r\n            status={key} \r\n            team={page.user} \r\n            admins={page.admins}\r\n        */\r\n        \r\n        let token = await localStorage.getItem('authtoken');\r\n\r\n        return axios.get(host + '/api/v1/secure/pages/get/all/', {\r\n            headers: {\r\n                'authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n        .then(res => {\r\n        \r\n            let allFbPages = [];\r\n            Object.entries(res.data.data).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.status = key;\r\n                    allFbPages.push(page);\r\n            }));\r\n\r\n            allFbPages.sort((page,nextPage) =>  {\r\n                let  nameA = page.name.toLowerCase(), nameB = nextPage.name.toLowerCase()\r\n                //sort ascending \r\n                if (nameA < nameB) return -1; \r\n\r\n                if (nameA > nameB) return 1;\r\n                \r\n                return 0; // default return value (no sorting)\r\n            });\r\n\r\n            dispatch({\r\n                type: 'GET_FB_DATA',\r\n                payload: allFbPages,\r\n                payload2: res.data.data,\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"GetFbData err\", JSON.stringify(err))\r\n        })\r\n    }\r\n};\r\n\r\nexport const getInstaData = () => {\r\n    return async (dispatch) => {\r\n        /*\r\n            platform={\"fb\"} \r\n            isConnectedPage={page.isConnected}\r\n            namePage={page.name} \r\n            idPage={page.idPage} \r\n            picture={null} \r\n            accessToken={page.access_token} \r\n            status={key} \r\n            team={page.user} \r\n            admins={page.admins}\r\n        */\r\n       let token = await localStorage.getItem('authtoken');\r\n        \r\n        return axios.get(host + '/api/v1/secure/pagesInsta/get/all/', {\r\n            headers: {\r\n                'authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('Instagram pages ya haider =>', res.data.data)\r\n            let allInstaPages = [];\r\n            \r\n            Object.entries(res.data.data).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.status = key;\r\n                    allInstaPages.push(page);\r\n                }\r\n            ));\r\n\r\n            allInstaPages.sort((page,nextPage) =>  {                \r\n                let  nameA = page.name.toLowerCase(), nameB = nextPage.name.toLowerCase()\r\n                //sort ascending \r\n                if (nameA < nameB) return -1; \r\n\r\n                if (nameA > nameB) return 1;\r\n                \r\n                return 0; // default return value (no sorting)\r\n            });\r\n            \r\n            dispatch({\r\n                type: 'GET_INSTA_DATA',\r\n                payload: allInstaPages,\r\n                payload2: res.data.data\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"getInstaData error\", JSON.stringify(err))\r\n        })\r\n    }\r\n};\r\n\r\nexport const resetSocialMediaSelections = () => {\r\n    return async (dispatch) => dispatch({ type: 'RESET_SM_SELECTIONS' });\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}