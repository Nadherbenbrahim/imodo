{"ast":null,"code":"var _jsxFileName = \"/usr/work/smart_front_oussema/src/dachboard/Agent.js\";\nimport React, { useEffect } from 'react';\nimport TopMenu from '../components/TopMenu';\nimport { connect } from 'react-redux';\nimport { getAllConnectedPages } from '../actions';\nimport PageCart from '../components/PageCart';\n\nfunction Agent(props) {\n  useEffect(() => {\n    props.allConnectedPge();\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(TopMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      paddingLeft: 30,\n      paddingRight: 30,\n      paddingTop: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    style: {\n      fontSize: 30,\n      color: \"rgba(45, 47, 57, 1)\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Pages connected\"), props.allpages ? Object.keys(props.allConnectedPge).map(el => React.createElement(PageCart, {\n    key: props.allpages[el]._id,\n    name: props.allpages[el].name,\n    connected: props.allpages[el].isConnected,\n    page: props.allpages[el],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })) : React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"loading\")));\n}\n\nconst mapStateToProps = state => {\n  return {\n    allConnectedPge: state.allConnectedPages\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    allConnectedPge: () => dispatch(getAllConnectedPages())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Agent);","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/dachboard/Agent.js"],"names":["React","useEffect","TopMenu","connect","getAllConnectedPages","PageCart","Agent","props","allConnectedPge","paddingLeft","paddingRight","paddingTop","fontSize","color","allpages","Object","keys","map","el","_id","name","isConnected","mapStateToProps","state","allConnectedPages","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,YAArC;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClBN,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACC,eAAN;AACH,GAFQ,EAEN,EAFM,CAAT;AAGA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE,EAAf;AAAmBC,MAAAA,YAAY,EAAE,EAAjC;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,KAAK,EAAE;AAAvB,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEKN,KAAK,CAACO,QAAN,GACGC,MAAM,CAACC,IAAP,CAAYT,KAAK,CAACC,eAAlB,EAAmCS,GAAnC,CAAuCC,EAAE,IAAI,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEX,KAAK,CAACO,QAAN,CAAeI,EAAf,EAAmBC,GAAlC;AAAuC,IAAA,IAAI,EAAEZ,KAAK,CAACO,QAAN,CAAeI,EAAf,EAAmBE,IAAhE;AAAsE,IAAA,SAAS,EAAEb,KAAK,CAACO,QAAN,CAAeI,EAAf,EAAmBG,WAApG;AAAiH,IAAA,IAAI,EAAEd,KAAK,CAACO,QAAN,CAAeI,EAAf,CAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7C,CADH,GAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJR,CAFJ,CADJ;AAYH;;AAED,MAAMI,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHf,IAAAA,eAAe,EAAEe,KAAK,CAACC;AADpB,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHlB,IAAAA,eAAe,EAAE,MAAMkB,QAAQ,CAACtB,oBAAoB,EAArB;AAD5B,GAAP;AAGH,CAJD;;AAMA,eAAeD,OAAO,CAACmB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CnB,KAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport TopMenu from '../components/TopMenu'\r\nimport { connect } from 'react-redux'\r\nimport { getAllConnectedPages } from '../actions'\r\nimport PageCart from '../components/PageCart'\r\n\r\nfunction Agent(props) {\r\n    useEffect(() => {\r\n        props.allConnectedPge()\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <TopMenu />\r\n            <div style={{ paddingLeft: 30, paddingRight: 30, paddingTop: 30 }}>\r\n                <h2 style={{ fontSize: 30, color: \"rgba(45, 47, 57, 1)\" }}>Pages connected</h2>\r\n                {props.allpages ?\r\n                    Object.keys(props.allConnectedPge).map(el => <PageCart key={props.allpages[el]._id} name={props.allpages[el].name} connected={props.allpages[el].isConnected} page={props.allpages[el]} />) :\r\n                    <h1>loading</h1>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        allConnectedPge: state.allConnectedPages\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        allConnectedPge: () => dispatch(getAllConnectedPages())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Agent)\r\n"]},"metadata":{},"sourceType":"module"}