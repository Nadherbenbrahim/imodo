{"ast":null,"code":"import axios from 'axios';\nimport { host } from '../../config'; // Filtring Pages:\n\nexport const filterPages = (filterBy, Pages) => {\n  return dispatch => {\n    // console.log(\"Filter\", filterBy, \"Those =>\", Pages)\n    if (filterBy === \"all\") {\n      dispatch({\n        type: 'FILTER_PAGES',\n        payload: []\n      });\n    } else {\n      let filteredPages = Pages.filter(page => page.platform === filterBy);\n      dispatch({\n        type: 'GET_ALL_PAGES',\n        payload: filteredPages\n      });\n    }\n\n    ;\n  };\n};\nexport const resetFilterPages = () => {\n  return dispatch => {\n    dispatch({\n      type: 'RESET_FILTER_PAGES'\n    });\n  };\n};\nexport const getDashboardPosts = Page => {\n  return dispatch => {\n    const fbHost = \"https://graph.facebook.com/v8.0\";\n    return axios.get(host + `/api/v1/secure/logEvent/dashbord/post/${Page.id}/${Page.accessToken}/${Page.platform}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('getDashboardPosts', res.data.data); // let finalArray = res.data.data;\n      // await finalArray.map(async post => \n      //     await axios.get(`${fbHost}/${post.idPost}?fields=created_time,full_picture,picture,permalink_url,message,scheduled_publish_time,id&access_token=${Page.accessToken}`)\n      //     .then((res) => Object.assign(post, res.data))\n      //     // .catch((err) => console.log(\"Fb error getDashboardPosts =>\", err))\n      // );\n      // // let limitedTo3 = finalArray.slice(0,3);\n      // console.log(\"Before dispatching =>\", finalArray);\n      // finalArray.map(post => \n      //     console.log(\"Post\",post, post.picture, post[\"picture\"])\n      // );\n      // dispatch({\n      //     type: 'GET_DASHBOARD_POSTS',\n      //     payload: finalArray,\n      // });\n    }).catch(err => console.log(\"err getDashboardPosts\", err));\n  };\n};\nexport const getDashboard = Page => {\n  return dispatch => {\n    // console.log(\"Getting the dashboard with page =>\", Page.id);\n    return axios.get(host + `/api/v1/secure/logEvent/dashbord/intent/${Page.id}/${Page.platform}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('getDashboard', res.data.data);\n      let limitedTo5 = res.data.data.slice(0, 5);\n      dispatch({\n        type: 'GET_DASHBOARD',\n        // payload: res.data.data\n        payload: limitedTo5\n      });\n    }).catch(err => console.log(\"err getDashboard\", err));\n  };\n};\nexport const setPreferences = (history, spam, likes, delay, Page, Platform, exactlySeconds, exactlyMinutes, randomlyFromSeconds, randomlyFromMinutes, randomlyToSeconds, randomlyToMinutes) => {\n  return dispatch => {\n    let objectToSend = null;\n    let pagePlatform = Platform === \"fb\" ? \"facebook\" : \"instagram\";\n\n    if (delay === \"immediatly\") {\n      objectToSend = {\n        platforme: pagePlatform,\n        likesComment: likes,\n        spam: spam,\n        respReplies: {\n          status: 'immediatly',\n          time: [0]\n        }\n      };\n    } else if (delay === \"Exactly\") {\n      // Minutes + Seconds => X ms\n      let minutes = exactlyMinutes * 60000;\n      let seconds = exactlySeconds * 1000;\n      let finalTime = minutes + seconds;\n      objectToSend = {\n        platforme: pagePlatform,\n        likesComment: likes,\n        spam: spam,\n        respReplies: {\n          statut: 'Exactly',\n          time: [finalTime]\n        }\n      };\n    } else {\n      // from Minutes + Seconds => X ms\n      // to Minutes + Seconds => X ms\n      let minutesFrom = randomlyFromMinutes * 60000;\n      let secondsFrom = randomlyFromSeconds * 1000;\n      let finalTimeFrom = minutesFrom + secondsFrom;\n      let minutesTo = randomlyToMinutes * 60000;\n      let secondsTo = randomlyToSeconds * 1000;\n      let finalTimeTo = minutesTo + secondsTo;\n      objectToSend = {\n        platforme: pagePlatform,\n        likesComment: likes,\n        spam: spam,\n        respReplies: {\n          statut: 'Randomly',\n          time: [finalTimeFrom, finalTimeTo]\n        }\n      };\n    }\n\n    console.log(\"Preferences sending to nour\", objectToSend);\n    return axios.put(host + `/api/v1/secure/pages/preference/${Page.idPage}/${pagePlatform}`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('setPreferences Response =>', res.data.data);\n      history.push('/pages');\n    }).catch(err => console.log(\"setPreferences err\", err));\n  };\n};\nexport const addPageEntity = page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/pages/entities/add/${page.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('add entity', res.data.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err addPageEntity\", err));\n  };\n};\nexport const getPageEntities = page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/project/get/entitiesproject/${page.platform}/${page.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      // console.log('entities mtaaa page', res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_ENTITIES_OF_A_PAGE',\n        payload: categories\n      });\n    }).catch(err => console.log(\"err getPageEntities\", err));\n  };\n}; // TEAM:\n\nexport const sendMailTeam = (wizardSelectedPage, emailTeamMember) => {\n  return dispatch => {\n    return axios.post(host + `/api/v1/secure/membership/sendMail/${wizardSelectedPage.id}/${wizardSelectedPage.platform}/`, {\n      email: emailTeamMember\n    }, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('Sending the maiiiiiil  => ', res.data.data); // dispatch({\n      //     type: 'GET_ALL_PRODUCT_CATEGORIES',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err getConnectedPagesProject\", err));\n  };\n};\nexport const inviteMember = page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/membership/get/${page.id}/${page.platform}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }); // .then(res => {\n    //     console.log('Token of invitation', res.data.data);\n    //     // dispatch({\n    //     //     type: 'GET_ENTITIES_OF_A_PAGE',\n    //     //     payload: res.data.data\n    //     // })\n    // })\n    // .catch((err) => console.log(\"err inviteMember\", err))\n  };\n};\nexport const deleteTeamMember = (page, idFacebook) => {\n  return dispatch => {\n    let type = page.platform;\n    let idPage = page.id;\n    return axios.post(host + `/api/v1/secure/membership/deleteMember/`, {\n      idFacebook,\n      idPage,\n      type\n    }, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {// console.log('deleteTeamMember', res.data.data);\n      // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"deleteTeamMember error\", err));\n  };\n};\n/* INSTAGRAM */\n\nexport const connectInstagramPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/connect/`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de connect page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err connect page insta\", err));\n  };\n};\nexport const disconnectInstagramPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/disconnect`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err disconnect page instagram\", err));\n  };\n};\nexport const deleteInstagramPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/delete`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err disconnect page instagram\", err));\n  };\n};\nexport const makeOwnerInstagramPage = (idPage, idFacebook) => {\n  return dispatch => {\n    let page = {\n      id: idPage,\n      idFacebook: idFacebook // idFacebook of the new owner\n\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/owner`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de owner page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err owner page instagram\", err));\n  };\n};\n/* FACEBOOK */\n\nexport const connectFacebookPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pages/connect/`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de connect page facebook', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err de connect page facebook\", err));\n  };\n};\nexport const disconnectFacebookPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pages/disconnect/disconnect`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page facebok', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err de disconnect page facebok\", err));\n  };\n};\nexport const deleteFacebookPage = (idPage, idFacebook) => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pages/disconnect/delete`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page facebok', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err de disconnect page facebok\", err));\n  };\n};\nexport const makeOwnerFacebookPage = (idPage, idFacebook) => {\n  return dispatch => {\n    let page = {\n      id: idPage,\n      idFacebook: idFacebook // idFacebook of the new owner\n\n    };\n    return axios.post(host + `/api/v1/secure/pages/disconnect/owner`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de owner page facebook', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err owner page facebook\", err));\n  };\n};\nexport const selectSocialMediaPage = (page, platform, status) => {\n  return async dispatch => {\n    // console.log(\"Full page data =>\", page );\n    // let userData = JSON.parse(localStorage.getItem('userData'));\n    // console.log(\"Full userData\", userData.user.idFacebook);\n\n    /*\r\n        ALL STATUS :\r\n        props.status === \"listPageConnectedOwner\" \r\n        ? \r\n        #E5007D\" \r\n        : \r\n        props.status === \"listPageInvite\" \r\n        ?\r\n        #139216\"\r\n        : \r\n        \"listPageInviteAdmin\" \r\n        ?\r\n        #199EE3\" \r\n        :\r\n        #B4B4B4\"\r\n    */\n    const selectedPage = {\n      platform: platform === \"fb\" ? \"facebook\" : \"instagram\",\n      name: page.name,\n      picture_url: page.imageUrl ? page.imageUrl : `https://graph.facebook.com/v8.0/${page.idPage}/picture?access_token=${page.access_token}`,\n      id: page.idPage,\n      accessToken: page.access_token,\n      team: page.user,\n      admins: page.admins,\n      status: status\n    }; // console.log(\"u just selected a page\", selectedPage)\n\n    dispatch({\n      type: 'SELECT_SOCIAL_MEDIA_PAGE',\n      payload: selectedPage\n    });\n  };\n};\nexport const getFbData = () => {\n  return async dispatch => {\n    let token = await localStorage.getItem('authtoken');\n    return axios.get(host + '/api/v1/secure/pages/get/all/', {\n      headers: {\n        'authorization': 'Bearer ' + token\n      }\n    }).then(res => {\n      let allFbPages = [];\n      Object.entries(res.data.data).map(([key, tab]) => tab.map(page => {\n        page.status = key;\n        allFbPages.push(page);\n      }));\n      allFbPages.sort((page, nextPage) => {\n        let nameA = page.name.toLowerCase(),\n            nameB = nextPage.name.toLowerCase(); //sort ascending \n\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0; // default return value (no sorting)\n      });\n      dispatch({\n        type: 'GET_FB_DATA',\n        payload: allFbPages,\n        payload2: res.data.data\n      });\n    }).catch(err => {\n      console.log(\"GetFbData err\", JSON.stringify(err));\n    });\n  };\n};\nexport const getInstaData = () => {\n  return async dispatch => {\n    let token = await localStorage.getItem('authtoken');\n    return axios.get(host + '/api/v1/secure/pagesInsta/get/all/', {\n      headers: {\n        'authorization': 'Bearer ' + token\n      }\n    }).then(res => {\n      // console.log('Instagram pages ya haider =>', res.data.data)\n      let allInstaPages = [];\n      Object.entries(res.data.data).map(([key, tab]) => tab.map(page => {\n        page.status = key;\n        allInstaPages.push(page);\n      }));\n      allInstaPages.sort((page, nextPage) => {\n        let nameA = page.name.toLowerCase(),\n            nameB = nextPage.name.toLowerCase(); //sort ascending \n\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0; // default return value (no sorting)\n      });\n      dispatch({\n        type: 'GET_INSTA_DATA',\n        payload: allInstaPages,\n        payload2: res.data.data\n      });\n    }).catch(err => {\n      console.log(\"getInstaData error\", JSON.stringify(err));\n    });\n  };\n};\nexport const getAllPage = () => {\n  return async dispatch => {\n    let token = await localStorage.getItem('authtoken');\n    dispatch({\n      type: 'RESET_ALL_PAGES'\n    });\n    return axios.get(host + '/api/v1/secure/pages/test/get/all/', {\n      headers: {\n        'authorization': 'Bearer ' + token\n      }\n    }).then(res => {\n      console.log('Donkey Nour getting all pages :D ===>', res.data.data);\n      let apiResp = res.data.data;\n      let allPages = []; // Push the Fb Data:\n\n      Object.entries(apiResp.facebookPages).map(([key, tab]) => tab.map(page => {\n        page.platform = \"facebook\";\n        page.status = key;\n        allPages.push(page);\n      })); // Push the Insta Data:\n      // Object.entries(apiResp.instaPages).map( ([key, tab]) => \n      //     tab.map((page) => {\n      //         page.platform = \"instagram\"\n      //         page.status = key;\n      //         allPages.push(page);\n      // }));\n\n      allPages.sort((page, nextPage) => {\n        let nameA = page.name.toLowerCase(),\n            nameB = nextPage.name.toLowerCase(); //sort ascending \n\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0; // default return value (no sorting)\n      }); // console.log(\"All Pages for test are Sorted=>\",allPages);\n\n      dispatch({\n        type: 'GET_ALL_PAGES',\n        payload: allPages\n      });\n    }).catch(err => {\n      console.log(\"getAllPage error\", JSON.stringify(err));\n    });\n  };\n};\nexport const getAllPageConnected = () => {\n  return async dispatch => {\n    let token = await localStorage.getItem('authtoken');\n    dispatch({\n      type: 'RESET_ALL_PAGES'\n    });\n    return axios.get(host + '/api/v1/secure/pages/test/connect/get/all/', {\n      headers: {\n        'authorization': 'Bearer ' + token\n      }\n    }).then(res => {\n      // console.log('getAllPageConnected ===>', res.data.data)\n      let apiResp = res.data.data;\n      let allPages = []; // Push the Fb Data:\n\n      Object.entries(apiResp.facebookPages).map(([key, tab]) => tab.map(page => {\n        page.platform = \"facebook\";\n        page.status = key;\n        allPages.push(page);\n      }));\n      Object.entries(apiResp.instaPages).map(([key, tab]) => tab.map(page => {\n        page.platform = \"instagram\";\n        page.status = key;\n        allPages.push(page);\n      }));\n      allPages.sort((page, nextPage) => {\n        let nameA = page.name.toLowerCase(),\n            nameB = nextPage.name.toLowerCase(); //sort ascending \n\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0; // default return value (no sorting)\n      }); // console.log(\"All Pages Connected Pages for test are Sorted =>\",allPages);\n\n      dispatch({\n        type: 'GET_ALL_PAGES',\n        payload: allPages\n      });\n    }).catch(err => {\n      console.log(\"getAllPageConnected error\", JSON.stringify(err));\n    });\n  };\n};\nexport const resetAllPages = () => {\n  return dispatch => dispatch({\n    type: 'RESET_ALL_PAGES'\n  });\n};\nexport const resetDashboard = () => {\n  return dispatch => dispatch({\n    type: 'RESET_DASHBOARD'\n  });\n};\nexport const resetSocialMediaSelections = () => {\n  return dispatch => dispatch({\n    type: 'RESET_SM_SELECTIONS'\n  });\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/socialMediaActions.js"],"names":["axios","host","filterPages","filterBy","Pages","dispatch","type","payload","filteredPages","filter","page","platform","resetFilterPages","getDashboardPosts","Page","fbHost","get","id","accessToken","headers","localStorage","getItem","then","res","console","log","data","catch","err","getDashboard","limitedTo5","slice","setPreferences","history","spam","likes","delay","Platform","exactlySeconds","exactlyMinutes","randomlyFromSeconds","randomlyFromMinutes","randomlyToSeconds","randomlyToMinutes","objectToSend","pagePlatform","platforme","likesComment","respReplies","status","time","minutes","seconds","finalTime","statut","minutesFrom","secondsFrom","finalTimeFrom","minutesTo","secondsTo","finalTimeTo","put","idPage","push","addPageEntity","getPageEntities","categories","length","map","cat","index","default","splice","sendMailTeam","wizardSelectedPage","emailTeamMember","post","email","inviteMember","deleteTeamMember","idFacebook","connectInstagramPage","disconnectInstagramPage","deleteInstagramPage","makeOwnerInstagramPage","connectFacebookPage","disconnectFacebookPage","deleteFacebookPage","makeOwnerFacebookPage","selectSocialMediaPage","selectedPage","name","picture_url","imageUrl","access_token","team","user","admins","getFbData","token","allFbPages","Object","entries","key","tab","sort","nextPage","nameA","toLowerCase","nameB","payload2","JSON","stringify","getInstaData","allInstaPages","getAllPage","apiResp","allPages","facebookPages","getAllPageConnected","instaPages","resetAllPages","resetDashboard","resetSocialMediaSelections"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,cAArB,C,CAGA;;AACA,OAAO,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAUC,KAAV,KAAoB;AAC3C,SAAQC,QAAD,IAAc;AAEjB;AAEA,QAAGF,QAAQ,KAAK,KAAhB,EAAuB;AACnBE,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE,cADD;AAELC,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIH,KALD,MAKO;AACH,UAAIC,aAAa,GAAGJ,KAAK,CAACK,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,QAAL,KAAkBR,QAAzC,CAApB;AACAE,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE,eADD;AAELC,QAAAA,OAAO,EAAEC;AAFJ,OAAD,CAAR;AAIH;;AAAA;AAEJ,GAjBD;AAkBH,CAnBM;AAqBP,OAAO,MAAMI,gBAAgB,GAAG,MAAM;AAClC,SAAQP,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACH,GAFD;AAGH,CAJM;AAOP,OAAO,MAAMO,iBAAiB,GAAIC,IAAD,IAAU;AACvC,SAAQT,QAAD,IAAc;AAEjB,UAAMU,MAAM,GAAG,iCAAf;AAEA,WAAOf,KAAK,CAACgB,GAAN,CAAUf,IAAI,GAAI,yCAAwCa,IAAI,CAACG,EAAG,IAAGH,IAAI,CAACI,WAAY,IAAGJ,IAAI,CAACH,QAAS,EAAvG,EAA0G;AAC7GQ,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADoG,KAA1G,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,GAAG,CAACG,IAAJ,CAASA,IAA1C,EADS,CAGT;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEH,KA7BM,EA8BNC,KA9BM,CA8BCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCG,GAArC,CA9BT,CAAP;AA+BH,GAnCD;AAoCH,CArCM;AAuCP,OAAO,MAAMC,YAAY,GAAIf,IAAD,IAAU;AAClC,SAAQT,QAAD,IAAc;AAEjB;AAEA,WAAOL,KAAK,CAACgB,GAAN,CAAUf,IAAI,GAAI,2CAA0Ca,IAAI,CAACG,EAAG,IAAGH,IAAI,CAACH,QAAS,EAArF,EAAwF;AAC3FQ,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADkF,KAAxF,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,GAAG,CAACG,IAAJ,CAASA,IAArC;AAEA,UAAII,UAAU,GAAGP,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcK,KAAd,CAAoB,CAApB,EAAsB,CAAtB,CAAjB;AAEA1B,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE,eADD;AAEL;AACAC,QAAAA,OAAO,EAAEuB;AAHJ,OAAD,CAAR;AAKH,KAfM,EAgBNH,KAhBM,CAgBCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCG,GAAhC,CAhBT,CAAP;AAiBH,GArBD;AAsBH,CAvBM;AAyBP,OAAO,MAAMI,cAAc,GAAG,CAACC,OAAD,EAASC,IAAT,EAAcC,KAAd,EAAoBC,KAApB,EAA0BtB,IAA1B,EAA+BuB,QAA/B,EAAwCC,cAAxC,EAAuDC,cAAvD,EAAsEC,mBAAtE,EAA0FC,mBAA1F,EAA8GC,iBAA9G,EAAgIC,iBAAhI,KAAsJ;AAChL,SAAQtC,QAAD,IAAc;AAEjB,QAAIuC,YAAY,GAAG,IAAnB;AACA,QAAIC,YAAY,GAAGR,QAAQ,KAAK,IAAb,GAAoB,UAApB,GAAiC,WAApD;;AACA,QAAGD,KAAK,KAAK,YAAb,EAA2B;AACvBQ,MAAAA,YAAY,GAAG;AACXE,QAAAA,SAAS,EAAED,YADA;AAEXE,QAAAA,YAAY,EAACZ,KAFF;AAGXD,QAAAA,IAAI,EAAEA,IAHK;AAIXc,QAAAA,WAAW,EAAE;AACTC,UAAAA,MAAM,EAAE,YADC;AAETC,UAAAA,IAAI,EAAE,CAAC,CAAD;AAFG;AAJF,OAAf;AAUH,KAXD,MAWO,IAAGd,KAAK,KAAK,SAAb,EAAwB;AAC3B;AACA,UAAIe,OAAO,GAAGZ,cAAc,GAAG,KAA/B;AACA,UAAIa,OAAO,GAAGd,cAAc,GAAG,IAA/B;AACA,UAAIe,SAAS,GAAGF,OAAO,GAAGC,OAA1B;AAEAR,MAAAA,YAAY,GAAG;AACXE,QAAAA,SAAS,EAAED,YADA;AAEXE,QAAAA,YAAY,EAACZ,KAFF;AAGXD,QAAAA,IAAI,EAAEA,IAHK;AAIXc,QAAAA,WAAW,EAAE;AACTM,UAAAA,MAAM,EAAE,SADC;AAETJ,UAAAA,IAAI,EAAE,CAACG,SAAD;AAFG;AAJF,OAAf;AASH,KAfM,MAeA;AACH;AACA;AACA,UAAIE,WAAW,GAAGd,mBAAmB,GAAG,KAAxC;AACA,UAAIe,WAAW,GAAGhB,mBAAmB,GAAG,IAAxC;AACA,UAAIiB,aAAa,GAAGF,WAAW,GAAGC,WAAlC;AAEA,UAAIE,SAAS,GAAGf,iBAAiB,GAAG,KAApC;AACA,UAAIgB,SAAS,GAAGjB,iBAAiB,GAAG,IAApC;AACA,UAAIkB,WAAW,GAAGF,SAAS,GAAGC,SAA9B;AAEAf,MAAAA,YAAY,GAAG;AACXE,QAAAA,SAAS,EAAED,YADA;AAEXE,QAAAA,YAAY,EAACZ,KAFF;AAGXD,QAAAA,IAAI,EAAEA,IAHK;AAIXc,QAAAA,WAAW,EAAE;AACTM,UAAAA,MAAM,EAAE,UADC;AAETJ,UAAAA,IAAI,EAAE,CAACO,aAAD,EAAeG,WAAf;AAFG;AAJF,OAAf;AASH;;AAGDpC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CmB,YAA3C;AAEA,WAAO5C,KAAK,CAAC6D,GAAN,CAAU5D,IAAI,GAAI,mCAAkCa,IAAI,CAACgD,MAAO,IAAGjB,YAAa,EAAhF,EAAkFD,YAAlF,EAA+F;AAClGzB,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADyF,KAA/F,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,GAAG,CAACG,IAAJ,CAASA,IAAnD;AAEAO,MAAAA,OAAO,CAAC8B,IAAR,CAAa,QAAb;AACH,KATM,EAUNpC,KAVM,CAUCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCG,GAAlC,CAVT,CAAP;AAWH,GAlED;AAmEH,CApEM;AAsEP,OAAO,MAAMoC,aAAa,GAAItD,IAAD,IAAU;AACnC,SAAQL,QAAD,IAAc;AAEjB,WAAOL,KAAK,CAACgB,GAAN,CAAUf,IAAI,GAAI,qCAAoCS,IAAI,CAACO,EAAG,EAA9D,EAAiE;AACpEE,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AAD2D,KAAjE,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,GAAG,CAACG,IAAJ,CAASA,IAAnC,EADS,CAGT;AACA;AACA;AACA;AACH,KAZM,EAaNC,KAbM,CAaCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,GAAjC,CAbT,CAAP;AAcH,GAhBD;AAiBH,CAlBM;AAoBP,OAAO,MAAMqC,eAAe,GAAIvD,IAAD,IAAU;AACrC,SAAQL,QAAD,IAAc;AAEjB,WAAOL,KAAK,CAACgB,GAAN,CAAUf,IAAI,GAAI,8CAA6CS,IAAI,CAACC,QAAS,IAAGD,IAAI,CAACO,EAAG,EAAxF,EAA2F;AAC9FE,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADqF,KAA3F,EAKNC,IALM,CAKDC,GAAG,IAAI;AACT;AACA,UAAI2C,UAAU,GAAG3C,GAAG,CAACG,IAAJ,CAASA,IAA1B;;AAEA,UAAGwC,UAAU,CAACC,MAAX,GAAoB,CAAvB,EAA0B;AACtBD,QAAAA,UAAU,CAACE,GAAX,CAAe,CAACC,GAAD,EAAKC,KAAL,KACXD,GAAG,CAACE,OAAJ,KAAgB,IAAhB,IAAwBL,UAAU,CAACM,MAAX,CAAkBF,KAAlB,EAAwB,CAAxB,CAD5B;AAGH;;AAAA;AAGDjE,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE,wBADD;AAELC,QAAAA,OAAO,EAAE2D;AAFJ,OAAD,CAAR;AAIH,KApBM,EAqBNvC,KArBM,CAqBCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCG,GAAnC,CArBT,CAAP;AAsBH,GAxBD;AAyBH,CA1BM,C,CA4BP;;AACA,OAAO,MAAM6C,YAAY,GAAG,CAACC,kBAAD,EAAoBC,eAApB,KAAwC;AAChE,SAAQtE,QAAD,IAAc;AAEjB,WAAOL,KAAK,CAAC4E,IAAN,CAAW3E,IAAI,GAAI,sCAAqCyE,kBAAkB,CAACzD,EAAG,IAAGyD,kBAAkB,CAAC/D,QAAS,GAA7G,EAAiH;AACpHkE,MAAAA,KAAK,EAAEF;AAD6G,KAAjH,EAGP;AACIxD,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADb,KAHO,EAQNC,IARM,CAQDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,GAAG,CAACG,IAAJ,CAASA,IAAnD,EADS,CAGT;AACA;AACA;AACA;AACH,KAfM,EAgBNC,KAhBM,CAgBCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CG,GAA5C,CAhBT,CAAP;AAiBH,GAnBD;AAoBH,CArBM;AAuBP,OAAO,MAAMkD,YAAY,GAAIpE,IAAD,IAAU;AAClC,SAAQL,QAAD,IAAc;AAEjB,WAAOL,KAAK,CAACgB,GAAN,CAAUf,IAAI,GAAI,iCAAgCS,IAAI,CAACO,EAAG,IAAGP,IAAI,CAACC,QAAS,EAA3E,EAA8E;AACjFQ,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADwE,KAA9E,CAAP,CAFiB,CAOjB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACH,GAhBD;AAiBH,CAlBM;AAoBP,OAAO,MAAM0D,gBAAgB,GAAG,CAACrE,IAAD,EAAMsE,UAAN,KAAqB;AACjD,SAAQ3E,QAAD,IAAc;AAClB,QAAIC,IAAI,GAAGI,IAAI,CAACC,QAAhB;AACA,QAAImD,MAAM,GAAGpD,IAAI,CAACO,EAAlB;AAEC,WAAOjB,KAAK,CAAC4E,IAAN,CAAW3E,IAAI,GAAI,yCAAnB,EAA4D;AAC/D+E,MAAAA,UAD+D;AAE/DlB,MAAAA,MAF+D;AAG/DxD,MAAAA;AAH+D,KAA5D,EAIL;AACEa,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADX,KAJK,EASNC,IATM,CASDC,GAAG,IAAI,CACT;AAEA;AACA;AACA;AACA;AACH,KAhBM,EAiBNI,KAjBM,CAiBCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCG,GAAtC,CAjBT,CAAP;AAkBH,GAtBD;AAuBH,CAxBM;AA2BP;;AACA,OAAO,MAAMqD,oBAAoB,GAAInB,MAAD,IAAY;AAC5C,SAAQzD,QAAD,IAAc;AAEjB,QAAIK,IAAI,GAAG;AACPO,MAAAA,EAAE,EAAE6C;AADG,KAAX;AAIA,WAAO9D,KAAK,CAAC4E,IAAN,CAAW3E,IAAI,GAAI,oCAAnB,EAAuDS,IAAvD,EAA4D;AAC/DS,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADsD,KAA5D,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,GAAG,CAACG,IAAhD,EADS,CAGT;AACA;AACA;AACA;AACH,KAZM,EAaNC,KAbM,CAaCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCG,GAAtC,CAbT,CAAP;AAcH,GApBD;AAqBH,CAtBM;AAwBP,OAAO,MAAMsD,uBAAuB,GAAIpB,MAAD,IAAY;AAC/C,SAAQzD,QAAD,IAAc;AAEjB,QAAIK,IAAI,GAAG;AACPO,MAAAA,EAAE,EAAE6C;AADG,KAAX;AAIA,WAAO9D,KAAK,CAAC4E,IAAN,CAAW3E,IAAI,GAAI,iDAAnB,EAAoES,IAApE,EAAyE;AAC5ES,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADmE,KAAzE,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,GAAG,CAACG,IAAnD,EADS,CAGT;AACA;AACA;AACA;AACH,KAZM,EAaNC,KAbM,CAaCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CG,GAA7C,CAbT,CAAP;AAcH,GApBD;AAqBH,CAtBM;AAwBP,OAAO,MAAMuD,mBAAmB,GAAIrB,MAAD,IAAY;AAC3C,SAAQzD,QAAD,IAAc;AAEjB,QAAIK,IAAI,GAAG;AACPO,MAAAA,EAAE,EAAE6C;AADG,KAAX;AAIA,WAAO9D,KAAK,CAAC4E,IAAN,CAAW3E,IAAI,GAAI,6CAAnB,EAAgES,IAAhE,EAAqE;AACxES,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AAD+D,KAArE,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,GAAG,CAACG,IAAnD,EADS,CAGT;AACA;AACA;AACA;AACH,KAZM,EAaNC,KAbM,CAaCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CG,GAA7C,CAbT,CAAP;AAcH,GApBD;AAqBH,CAtBM;AAwBP,OAAO,MAAMwD,sBAAsB,GAAG,CAACtB,MAAD,EAAQkB,UAAR,KAAuB;AACzD,SAAQ3E,QAAD,IAAc;AAEjB,QAAIK,IAAI,GAAG;AACPO,MAAAA,EAAE,EAAE6C,MADG;AAEPkB,MAAAA,UAAU,EAAEA,UAFL,CAEgB;;AAFhB,KAAX;AAKA,WAAOhF,KAAK,CAAC4E,IAAN,CAAW3E,IAAI,GAAI,4CAAnB,EAA+DS,IAA/D,EAAoE;AACvES,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AAD8D,KAApE,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,GAAG,CAACG,IAA9C,EADS,CAGT;AACA;AACA;AACA;AACH,KAZM,EAaNC,KAbM,CAaCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCG,GAAxC,CAbT,CAAP;AAcH,GArBD;AAsBH,CAvBM;AAyBP;;AACA,OAAO,MAAMyD,mBAAmB,GAAIvB,MAAD,IAAY;AAC3C,SAAQzD,QAAD,IAAc;AAEjB,QAAIK,IAAI,GAAE;AACNO,MAAAA,EAAE,EAAE6C;AADE,KAAV;AAIA,WAAO9D,KAAK,CAAC4E,IAAN,CAAW3E,IAAI,GAAI,+BAAnB,EAAkDS,IAAlD,EAAuD;AAC1DS,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADiD,KAAvD,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,GAAG,CAACG,IAAnD,EADS,CAGT;AACA;AACA;AACA;AACH,KAZM,EAaNC,KAbM,CAaCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CG,GAA5C,CAbT,CAAP;AAcH,GApBD;AAqBH,CAtBM;AAwBP,OAAO,MAAM0D,sBAAsB,GAAIxB,MAAD,IAAY;AAC9C,SAAQzD,QAAD,IAAc;AAEjB,QAAIK,IAAI,GAAG;AACPO,MAAAA,EAAE,EAAE6C;AADG,KAAX;AAIA,WAAO9D,KAAK,CAAC4E,IAAN,CAAW3E,IAAI,GAAI,4CAAnB,EAA+DS,IAA/D,EAAoE;AACvES,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AAD8D,KAApE,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDF,GAAG,CAACG,IAArD,EADS,CAGT;AACA;AACA;AACA;AACH,KAZM,EAaNC,KAbM,CAaCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CG,GAA9C,CAbT,CAAP;AAeH,GArBD;AAsBH,CAvBM;AAyBP,OAAO,MAAM2D,kBAAkB,GAAG,CAACzB,MAAD,EAAQkB,UAAR,KAAuB;AACrD,SAAQ3E,QAAD,IAAc;AAEjB,QAAIK,IAAI,GAAG;AACPO,MAAAA,EAAE,EAAE6C;AADG,KAAX;AAIA,WAAO9D,KAAK,CAAC4E,IAAN,CAAW3E,IAAI,GAAI,wCAAnB,EAA2DS,IAA3D,EAAgE;AACnES,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AAD0D,KAAhE,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDF,GAAG,CAACG,IAArD,EADS,CAGT;AACA;AACA;AACA;AACH,KAZM,EAaNC,KAbM,CAaCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CG,GAA9C,CAbT,CAAP;AAeH,GArBD;AAsBH,CAvBM;AAyBP,OAAO,MAAM4D,qBAAqB,GAAG,CAAC1B,MAAD,EAAQkB,UAAR,KAAuB;AACxD,SAAQ3E,QAAD,IAAc;AAEjB,QAAIK,IAAI,GAAG;AACPO,MAAAA,EAAE,EAAE6C,MADG;AAEPkB,MAAAA,UAAU,EAAEA,UAFL,CAEgB;;AAFhB,KAAX;AAKA,WAAOhF,KAAK,CAAC4E,IAAN,CAAW3E,IAAI,GAAI,uCAAnB,EAA0DS,IAA1D,EAA+D;AAClES,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADyD,KAA/D,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CF,GAAG,CAACG,IAAjD,EADS,CAGT;AACA;AACA;AACA;AACH,KAZM,EAaNC,KAbM,CAaCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCG,GAAvC,CAbT,CAAP;AAcH,GArBD;AAsBH,CAvBM;AA0BP,OAAO,MAAM6D,qBAAqB,GAAG,CAAC/E,IAAD,EAAMC,QAAN,EAAesC,MAAf,KAA0B;AAC3D,SAAO,MAAO5C,QAAP,IAAoB;AAEvB;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;AAiBA,UAAMqF,YAAY,GAAG;AACjB/E,MAAAA,QAAQ,EAAEA,QAAQ,KAAK,IAAb,GAAoB,UAApB,GAAiC,WAD1B;AAEjBgF,MAAAA,IAAI,EAAEjF,IAAI,CAACiF,IAFM;AAGjBC,MAAAA,WAAW,EAAGlF,IAAI,CAACmF,QAAL,GAAgBnF,IAAI,CAACmF,QAArB,GAAiC,mCAAkCnF,IAAI,CAACoD,MAAO,yBAAwBpD,IAAI,CAACoF,YAAa,EAHtH;AAIjB7E,MAAAA,EAAE,EAAEP,IAAI,CAACoD,MAJQ;AAKjB5C,MAAAA,WAAW,EAAER,IAAI,CAACoF,YALD;AAMjBC,MAAAA,IAAI,EAAErF,IAAI,CAACsF,IANM;AAOjBC,MAAAA,MAAM,EAAEvF,IAAI,CAACuF,MAPI;AAQjBhD,MAAAA,MAAM,EAAEA;AARS,KAArB,CAvBuB,CAkCvB;;AAEA5C,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,0BADD;AAELC,MAAAA,OAAO,EAAEmF;AAFJ,KAAD,CAAR;AAIH,GAxCD;AAyCH,CA1CM;AA4CP,OAAO,MAAMQ,SAAS,GAAG,MAAM;AAC3B,SAAO,MAAO7F,QAAP,IAAoB;AAEvB,QAAI8F,KAAK,GAAG,MAAM/E,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;AAEA,WAAOrB,KAAK,CAACgB,GAAN,CAAUf,IAAI,GAAG,+BAAjB,EAAkD;AACrDkB,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYgF;AADxB;AAD4C,KAAlD,EAKN7E,IALM,CAKDC,GAAG,IAAI;AAET,UAAI6E,UAAU,GAAG,EAAjB;AACAC,MAAAA,MAAM,CAACC,OAAP,CAAe/E,GAAG,CAACG,IAAJ,CAASA,IAAxB,EAA8B0C,GAA9B,CAAmC,CAAC,CAACmC,GAAD,EAAMC,GAAN,CAAD,KAC/BA,GAAG,CAACpC,GAAJ,CAAS1D,IAAD,IAAU;AACdA,QAAAA,IAAI,CAACuC,MAAL,GAAcsD,GAAd;AACAH,QAAAA,UAAU,CAACrC,IAAX,CAAgBrD,IAAhB;AACP,OAHG,CADJ;AAMA0F,MAAAA,UAAU,CAACK,IAAX,CAAgB,CAAC/F,IAAD,EAAMgG,QAAN,KAAoB;AAChC,YAAKC,KAAK,GAAGjG,IAAI,CAACiF,IAAL,CAAUiB,WAAV,EAAb;AAAA,YAAsCC,KAAK,GAAGH,QAAQ,CAACf,IAAT,CAAciB,WAAd,EAA9C,CADgC,CAEhC;;AACA,YAAID,KAAK,GAAGE,KAAZ,EAAmB,OAAO,CAAC,CAAR;AAEnB,YAAIF,KAAK,GAAGE,KAAZ,EAAmB,OAAO,CAAP;AAEnB,eAAO,CAAP,CAPgC,CAOtB;AACb,OARD;AAUAxG,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE,aADD;AAELC,QAAAA,OAAO,EAAE6F,UAFJ;AAGLU,QAAAA,QAAQ,EAAEvF,GAAG,CAACG,IAAJ,CAASA;AAHd,OAAD,CAAR;AAKH,KA7BM,EA8BNC,KA9BM,CA8BCC,GAAD,IAAS;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BsF,IAAI,CAACC,SAAL,CAAepF,GAAf,CAA7B;AACH,KAhCM,CAAP;AAiCH,GArCD;AAsCH,CAvCM;AAyCP,OAAO,MAAMqF,YAAY,GAAG,MAAM;AAC9B,SAAO,MAAO5G,QAAP,IAAoB;AAExB,QAAI8F,KAAK,GAAG,MAAM/E,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;AAEC,WAAOrB,KAAK,CAACgB,GAAN,CAAUf,IAAI,GAAG,oCAAjB,EAAuD;AAC1DkB,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYgF;AADxB;AADiD,KAAvD,EAKN7E,IALM,CAKDC,GAAG,IAAI;AACT;AACA,UAAI2F,aAAa,GAAG,EAApB;AAEAb,MAAAA,MAAM,CAACC,OAAP,CAAe/E,GAAG,CAACG,IAAJ,CAASA,IAAxB,EAA8B0C,GAA9B,CAAmC,CAAC,CAACmC,GAAD,EAAMC,GAAN,CAAD,KAC/BA,GAAG,CAACpC,GAAJ,CAAS1D,IAAD,IAAU;AACdA,QAAAA,IAAI,CAACuC,MAAL,GAAcsD,GAAd;AACAW,QAAAA,aAAa,CAACnD,IAAd,CAAmBrD,IAAnB;AACH,OAHD,CADJ;AAOAwG,MAAAA,aAAa,CAACT,IAAd,CAAmB,CAAC/F,IAAD,EAAMgG,QAAN,KAAoB;AACnC,YAAKC,KAAK,GAAGjG,IAAI,CAACiF,IAAL,CAAUiB,WAAV,EAAb;AAAA,YAAsCC,KAAK,GAAGH,QAAQ,CAACf,IAAT,CAAciB,WAAd,EAA9C,CADmC,CAEnC;;AACA,YAAID,KAAK,GAAGE,KAAZ,EAAmB,OAAO,CAAC,CAAR;AAEnB,YAAIF,KAAK,GAAGE,KAAZ,EAAmB,OAAO,CAAP;AAEnB,eAAO,CAAP,CAPmC,CAOzB;AACb,OARD;AAUAxG,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE,gBADD;AAELC,QAAAA,OAAO,EAAE2G,aAFJ;AAGLJ,QAAAA,QAAQ,EAAEvF,GAAG,CAACG,IAAJ,CAASA;AAHd,OAAD,CAAR;AAKH,KA/BM,EAgCNC,KAhCM,CAgCCC,GAAD,IAAS;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCsF,IAAI,CAACC,SAAL,CAAepF,GAAf,CAAlC;AACH,KAlCM,CAAP;AAmCH,GAvCD;AAwCH,CAzCM;AA6CP,OAAO,MAAMuF,UAAU,GAAG,MAAM;AAC5B,SAAO,MAAO9G,QAAP,IAAoB;AAEvB,QAAI8F,KAAK,GAAG,MAAM/E,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;AAEAhB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AAEA,WAAON,KAAK,CAACgB,GAAN,CAAUf,IAAI,GAAG,oCAAjB,EAAuD;AAC1DkB,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYgF;AADxB;AADiD,KAAvD,EAKN7E,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDF,GAAG,CAACG,IAAJ,CAASA,IAA9D;AAEA,UAAI0F,OAAO,GAAG7F,GAAG,CAACG,IAAJ,CAASA,IAAvB;AACA,UAAI2F,QAAQ,GAAG,EAAf,CAJS,CAMT;;AACAhB,MAAAA,MAAM,CAACC,OAAP,CAAec,OAAO,CAACE,aAAvB,EAAsClD,GAAtC,CAA2C,CAAC,CAACmC,GAAD,EAAMC,GAAN,CAAD,KACvCA,GAAG,CAACpC,GAAJ,CAAS1D,IAAD,IAAU;AACdA,QAAAA,IAAI,CAACC,QAAL,GAAgB,UAAhB;AACAD,QAAAA,IAAI,CAACuC,MAAL,GAAcsD,GAAd;AACAc,QAAAA,QAAQ,CAACtD,IAAT,CAAcrD,IAAd;AACP,OAJG,CADJ,EAPS,CAcT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA2G,MAAAA,QAAQ,CAACZ,IAAT,CAAc,CAAC/F,IAAD,EAAMgG,QAAN,KAAoB;AAC9B,YAAKC,KAAK,GAAGjG,IAAI,CAACiF,IAAL,CAAUiB,WAAV,EAAb;AAAA,YAAsCC,KAAK,GAAGH,QAAQ,CAACf,IAAT,CAAciB,WAAd,EAA9C,CAD8B,CAE9B;;AACA,YAAID,KAAK,GAAGE,KAAZ,EAAmB,OAAO,CAAC,CAAR;AAEnB,YAAIF,KAAK,GAAGE,KAAZ,EAAmB,OAAO,CAAP;AAEnB,eAAO,CAAP,CAP8B,CAOpB;AACb,OARD,EAtBS,CAgCT;;AAEAxG,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE,eADD;AAELC,QAAAA,OAAO,EAAE8G;AAFJ,OAAD,CAAR;AAIH,KA3CM,EA4CN1F,KA5CM,CA4CCC,GAAD,IAAS;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCsF,IAAI,CAACC,SAAL,CAAepF,GAAf,CAAhC;AACH,KA9CM,CAAP;AAgDH,GAtDD;AAuDH,CAxDM;AA0DP,OAAO,MAAM2F,mBAAmB,GAAG,MAAM;AACrC,SAAO,MAAOlH,QAAP,IAAoB;AAEvB,QAAI8F,KAAK,GAAG,MAAM/E,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;AAEAhB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AAGA,WAAON,KAAK,CAACgB,GAAN,CAAUf,IAAI,GAAG,4CAAjB,EAA+D;AAClEkB,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYgF;AADxB;AADyD,KAA/D,EAKN7E,IALM,CAKDC,GAAG,IAAI;AACT;AAEA,UAAI6F,OAAO,GAAG7F,GAAG,CAACG,IAAJ,CAASA,IAAvB;AACA,UAAI2F,QAAQ,GAAG,EAAf,CAJS,CAMT;;AACAhB,MAAAA,MAAM,CAACC,OAAP,CAAec,OAAO,CAACE,aAAvB,EAAsClD,GAAtC,CAA2C,CAAC,CAACmC,GAAD,EAAMC,GAAN,CAAD,KACvCA,GAAG,CAACpC,GAAJ,CAAS1D,IAAD,IAAU;AACdA,QAAAA,IAAI,CAACC,QAAL,GAAgB,UAAhB;AACAD,QAAAA,IAAI,CAACuC,MAAL,GAAcsD,GAAd;AACAc,QAAAA,QAAQ,CAACtD,IAAT,CAAcrD,IAAd;AACP,OAJG,CADJ;AAOA2F,MAAAA,MAAM,CAACC,OAAP,CAAec,OAAO,CAACI,UAAvB,EAAmCpD,GAAnC,CAAwC,CAAC,CAACmC,GAAD,EAAMC,GAAN,CAAD,KACpCA,GAAG,CAACpC,GAAJ,CAAS1D,IAAD,IAAU;AACdA,QAAAA,IAAI,CAACC,QAAL,GAAgB,WAAhB;AACAD,QAAAA,IAAI,CAACuC,MAAL,GAAcsD,GAAd;AACAc,QAAAA,QAAQ,CAACtD,IAAT,CAAcrD,IAAd;AACP,OAJG,CADJ;AAOA2G,MAAAA,QAAQ,CAACZ,IAAT,CAAc,CAAC/F,IAAD,EAAMgG,QAAN,KAAoB;AAC9B,YAAKC,KAAK,GAAGjG,IAAI,CAACiF,IAAL,CAAUiB,WAAV,EAAb;AAAA,YAAsCC,KAAK,GAAGH,QAAQ,CAACf,IAAT,CAAciB,WAAd,EAA9C,CAD8B,CAE9B;;AACA,YAAID,KAAK,GAAGE,KAAZ,EAAmB,OAAO,CAAC,CAAR;AAEnB,YAAIF,KAAK,GAAGE,KAAZ,EAAmB,OAAO,CAAP;AAEnB,eAAO,CAAP,CAP8B,CAOpB;AACb,OARD,EArBS,CA+BT;;AAEAxG,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE,eADD;AAELC,QAAAA,OAAO,EAAE8G;AAFJ,OAAD,CAAR;AAIH,KA1CM,EA2CN1F,KA3CM,CA2CCC,GAAD,IAAS;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCsF,IAAI,CAACC,SAAL,CAAepF,GAAf,CAAzC;AACH,KA7CM,CAAP;AA+CH,GAtDD;AAuDH,CAxDM;AA0DP,OAAO,MAAM6F,aAAa,GAAG,MAAM;AAC/B,SAAQpH,QAAD,IAAcA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,CAA7B;AACH,CAFM;AAIP,OAAO,MAAMoH,cAAc,GAAG,MAAM;AAChC,SAAQrH,QAAD,IAAcA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,CAA7B;AACH,CAFM;AAIP,OAAO,MAAMqH,0BAA0B,GAAG,MAAM;AAC5C,SAAQtH,QAAD,IAAcA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,CAA7B;AACH,CAFM","sourcesContent":["import axios from 'axios'\r\nimport { host } from '../../config';\r\n\r\n\r\n// Filtring Pages:\r\nexport const filterPages = (filterBy,Pages) => {\r\n    return (dispatch) => {\r\n\r\n        // console.log(\"Filter\", filterBy, \"Those =>\", Pages)\r\n        \r\n        if(filterBy === \"all\") {\r\n            dispatch({\r\n                type: 'FILTER_PAGES',\r\n                payload: [],\r\n            });\r\n        } else {\r\n            let filteredPages = Pages.filter((page) => page.platform === filterBy);\r\n            dispatch({\r\n                type: 'GET_ALL_PAGES',\r\n                payload: filteredPages,\r\n            });\r\n        };\r\n        \r\n    };\r\n};\r\n\r\nexport const resetFilterPages = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: 'RESET_FILTER_PAGES' });\r\n    };\r\n};\r\n\r\n\r\nexport const getDashboardPosts = (Page) => {\r\n    return (dispatch) => {\r\n\r\n        const fbHost = \"https://graph.facebook.com/v8.0\";\r\n\r\n        return axios.get(host + `/api/v1/secure/logEvent/dashbord/post/${Page.id}/${Page.accessToken}/${Page.platform}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('getDashboardPosts', res.data.data);\r\n            \r\n            // let finalArray = res.data.data;\r\n\r\n            // await finalArray.map(async post => \r\n            //     await axios.get(`${fbHost}/${post.idPost}?fields=created_time,full_picture,picture,permalink_url,message,scheduled_publish_time,id&access_token=${Page.accessToken}`)\r\n            //     .then((res) => Object.assign(post, res.data))\r\n            //     // .catch((err) => console.log(\"Fb error getDashboardPosts =>\", err))\r\n            // );\r\n            \r\n            // // let limitedTo3 = finalArray.slice(0,3);\r\n\r\n            // console.log(\"Before dispatching =>\", finalArray);\r\n\r\n            // finalArray.map(post => \r\n            //     console.log(\"Post\",post, post.picture, post[\"picture\"])\r\n            // );\r\n\r\n            // dispatch({\r\n            //     type: 'GET_DASHBOARD_POSTS',\r\n            //     payload: finalArray,\r\n            // });\r\n            \r\n        })\r\n        .catch((err) => console.log(\"err getDashboardPosts\", err))\r\n    };\r\n};\r\n\r\nexport const getDashboard = (Page) => {\r\n    return (dispatch) => {\r\n\r\n        // console.log(\"Getting the dashboard with page =>\", Page.id);\r\n\r\n        return axios.get(host + `/api/v1/secure/logEvent/dashbord/intent/${Page.id}/${Page.platform}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('getDashboard', res.data.data);\r\n            \r\n            let limitedTo5 = res.data.data.slice(0,5);\r\n\r\n            dispatch({\r\n                type: 'GET_DASHBOARD',\r\n                // payload: res.data.data\r\n                payload: limitedTo5,\r\n            })\r\n        })\r\n        .catch((err) => console.log(\"err getDashboard\", err))\r\n    };\r\n};\r\n\r\nexport const setPreferences = (history,spam,likes,delay,Page,Platform,exactlySeconds,exactlyMinutes,randomlyFromSeconds,randomlyFromMinutes,randomlyToSeconds,randomlyToMinutes) => {\r\n    return (dispatch) => {\r\n        \r\n        let objectToSend = null;\r\n        let pagePlatform = Platform === \"fb\" ? \"facebook\" : \"instagram\";\r\n        if(delay === \"immediatly\") {\r\n            objectToSend = {\r\n                platforme: pagePlatform,\r\n                likesComment:likes,\r\n                spam: spam,\r\n                respReplies: {\r\n                    status: 'immediatly',\r\n                    time: [0]\r\n                }\r\n            }\r\n\r\n        } else if(delay === \"Exactly\") {\r\n            // Minutes + Seconds => X ms\r\n            let minutes = exactlyMinutes * 60000;\r\n            let seconds = exactlySeconds * 1000;\r\n            let finalTime = minutes + seconds;\r\n\r\n            objectToSend = {\r\n                platforme: pagePlatform,\r\n                likesComment:likes,\r\n                spam: spam,\r\n                respReplies: {\r\n                    statut: 'Exactly',\r\n                    time: [finalTime],\r\n                }\r\n            }\r\n        } else {\r\n            // from Minutes + Seconds => X ms\r\n            // to Minutes + Seconds => X ms\r\n            let minutesFrom = randomlyFromMinutes * 60000;\r\n            let secondsFrom = randomlyFromSeconds * 1000;\r\n            let finalTimeFrom = minutesFrom + secondsFrom;\r\n            \r\n            let minutesTo = randomlyToMinutes * 60000;\r\n            let secondsTo = randomlyToSeconds * 1000;\r\n            let finalTimeTo = minutesTo + secondsTo;\r\n\r\n            objectToSend = {\r\n                platforme: pagePlatform,\r\n                likesComment:likes,\r\n                spam: spam,\r\n                respReplies: {\r\n                    statut: 'Randomly',\r\n                    time: [finalTimeFrom,finalTimeTo],\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        console.log(\"Preferences sending to nour\", objectToSend);\r\n\r\n        return axios.put(host + `/api/v1/secure/pages/preference/${Page.idPage}/${pagePlatform}`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('setPreferences Response =>', res.data.data);\r\n\r\n            history.push('/pages');\r\n        })\r\n        .catch((err) => console.log(\"setPreferences err\", err))\r\n    }\r\n};\r\n\r\nexport const addPageEntity = (page) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + `/api/v1/secure/pages/entities/add/${page.id}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('add entity', res.data.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err addPageEntity\", err))\r\n    }\r\n};\r\n\r\nexport const getPageEntities = (page) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + `/api/v1/secure/project/get/entitiesproject/${page.platform}/${page.id}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('entities mtaaa page', res.data.data);\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n\r\n\r\n            dispatch({\r\n                type: 'GET_ENTITIES_OF_A_PAGE',\r\n                payload: categories\r\n            })\r\n        })\r\n        .catch((err) => console.log(\"err getPageEntities\", err))\r\n    }\r\n};\r\n\r\n// TEAM:\r\nexport const sendMailTeam = (wizardSelectedPage,emailTeamMember) => {\r\n    return (dispatch) => {\r\n    \r\n        return axios.post(host + `/api/v1/secure/membership/sendMail/${wizardSelectedPage.id}/${wizardSelectedPage.platform}/`, {\r\n            email: emailTeamMember,\r\n        },\r\n        {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('Sending the maiiiiiil  => ', res.data.data)\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ALL_PRODUCT_CATEGORIES',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err getConnectedPagesProject\", err))\r\n    }\r\n};\r\n\r\nexport const inviteMember = (page) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + `/api/v1/secure/membership/get/${page.id}/${page.platform}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        // .then(res => {\r\n        //     console.log('Token of invitation', res.data.data);\r\n        \r\n        //     // dispatch({\r\n        //     //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n        //     //     payload: res.data.data\r\n        //     // })\r\n        // })\r\n        // .catch((err) => console.log(\"err inviteMember\", err))\r\n    }\r\n};\r\n\r\nexport const deleteTeamMember = (page,idFacebook) => {\r\n    return (dispatch) => {\r\n       let type = page.platform;\r\n       let idPage = page.id;\r\n\r\n        return axios.post(host + `/api/v1/secure/membership/deleteMember/`,{\r\n            idFacebook,\r\n            idPage,\r\n            type,\r\n        },{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('deleteTeamMember', res.data.data);\r\n        \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"deleteTeamMember error\", err))\r\n    }\r\n};\r\n\r\n\r\n/* INSTAGRAM */\r\nexport const connectInstagramPage = (idPage) => {\r\n    return (dispatch) => {\r\n\r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/connect/`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de connect page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err connect page insta\", err))\r\n    }\r\n};\r\n\r\nexport const disconnectInstagramPage = (idPage) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/disconnect`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err disconnect page instagram\", err))\r\n    };\r\n};\r\n\r\nexport const deleteInstagramPage = (idPage) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/delete`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err disconnect page instagram\", err))\r\n    };\r\n};\r\n\r\nexport const makeOwnerInstagramPage = (idPage,idFacebook) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n            idFacebook: idFacebook // idFacebook of the new owner\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/owner`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de owner page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err owner page instagram\", err))\r\n    };\r\n};\r\n\r\n/* FACEBOOK */\r\nexport const connectFacebookPage = (idPage) => {\r\n    return (dispatch) => {\r\n        \r\n        let page ={\r\n            id: idPage,\r\n        };\r\n\r\n        return axios.post(host + `/api/v1/secure/pages/connect/`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de connect page facebook', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err de connect page facebook\", err))\r\n    }\r\n};\r\n\r\nexport const disconnectFacebookPage = (idPage) => {\r\n    return (dispatch) => {\r\n\r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pages/disconnect/disconnect`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page facebok', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err de disconnect page facebok\", err))\r\n\r\n    };\r\n};\r\n\r\nexport const deleteFacebookPage = (idPage,idFacebook) => {\r\n    return (dispatch) => {\r\n\r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pages/disconnect/delete`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page facebok', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err de disconnect page facebok\", err))\r\n\r\n    };\r\n};\r\n\r\nexport const makeOwnerFacebookPage = (idPage,idFacebook) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n            idFacebook: idFacebook // idFacebook of the new owner\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pages/disconnect/owner`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de owner page facebook', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err owner page facebook\", err))\r\n    };\r\n};\r\n\r\n\r\nexport const selectSocialMediaPage = (page,platform,status) => {\r\n    return async (dispatch) => {\r\n\r\n        // console.log(\"Full page data =>\", page );\r\n        // let userData = JSON.parse(localStorage.getItem('userData'));\r\n        // console.log(\"Full userData\", userData.user.idFacebook);\r\n\r\n        /*\r\n            ALL STATUS :\r\n            props.status === \"listPageConnectedOwner\" \r\n            ? \r\n            #E5007D\" \r\n            : \r\n            props.status === \"listPageInvite\" \r\n            ?\r\n            #139216\"\r\n            : \r\n            \"listPageInviteAdmin\" \r\n            ?\r\n            #199EE3\" \r\n            :\r\n            #B4B4B4\"\r\n        */\r\n \r\n        const selectedPage = {\r\n            platform: platform === \"fb\" ? \"facebook\" : \"instagram\",\r\n            name: page.name,\r\n            picture_url : page.imageUrl ? page.imageUrl : `https://graph.facebook.com/v8.0/${page.idPage}/picture?access_token=${page.access_token}`,\r\n            id: page.idPage,\r\n            accessToken: page.access_token,\r\n            team: page.user,\r\n            admins: page.admins,\r\n            status: status,\r\n        };\r\n        \r\n        // console.log(\"u just selected a page\", selectedPage)\r\n\r\n        dispatch({\r\n            type: 'SELECT_SOCIAL_MEDIA_PAGE',\r\n            payload: selectedPage\r\n        })\r\n    }\r\n};\r\n\r\nexport const getFbData = () => {\r\n    return async (dispatch) => {\r\n           \r\n        let token = await localStorage.getItem('authtoken');\r\n\r\n        return axios.get(host + '/api/v1/secure/pages/get/all/', {\r\n            headers: {\r\n                'authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n        .then(res => {\r\n        \r\n            let allFbPages = [];\r\n            Object.entries(res.data.data).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.status = key;\r\n                    allFbPages.push(page);\r\n            }));\r\n\r\n            allFbPages.sort((page,nextPage) =>  {\r\n                let  nameA = page.name.toLowerCase(), nameB = nextPage.name.toLowerCase()\r\n                //sort ascending \r\n                if (nameA < nameB) return -1; \r\n\r\n                if (nameA > nameB) return 1;\r\n                \r\n                return 0; // default return value (no sorting)\r\n            });\r\n\r\n            dispatch({\r\n                type: 'GET_FB_DATA',\r\n                payload: allFbPages,\r\n                payload2: res.data.data,\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"GetFbData err\", JSON.stringify(err))\r\n        })\r\n    }\r\n};\r\n\r\nexport const getInstaData = () => {\r\n    return async (dispatch) => {\r\n\r\n       let token = await localStorage.getItem('authtoken');\r\n        \r\n        return axios.get(host + '/api/v1/secure/pagesInsta/get/all/', {\r\n            headers: {\r\n                'authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('Instagram pages ya haider =>', res.data.data)\r\n            let allInstaPages = [];\r\n            \r\n            Object.entries(res.data.data).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.status = key;\r\n                    allInstaPages.push(page);\r\n                }\r\n            ));\r\n\r\n            allInstaPages.sort((page,nextPage) =>  {                \r\n                let  nameA = page.name.toLowerCase(), nameB = nextPage.name.toLowerCase()\r\n                //sort ascending \r\n                if (nameA < nameB) return -1; \r\n\r\n                if (nameA > nameB) return 1;\r\n                \r\n                return 0; // default return value (no sorting)\r\n            });\r\n            \r\n            dispatch({\r\n                type: 'GET_INSTA_DATA',\r\n                payload: allInstaPages,\r\n                payload2: res.data.data\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"getInstaData error\", JSON.stringify(err))\r\n        })\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const getAllPage = () => {\r\n    return async (dispatch) => {\r\n\r\n        let token = await localStorage.getItem('authtoken');\r\n\r\n        dispatch({ type: 'RESET_ALL_PAGES' })\r\n        \r\n        return axios.get(host + '/api/v1/secure/pages/test/get/all/', {\r\n            headers: {\r\n                'authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('Donkey Nour getting all pages :D ===>', res.data.data)\r\n\r\n            let apiResp = res.data.data;\r\n            let allPages = [];\r\n\r\n            // Push the Fb Data:\r\n            Object.entries(apiResp.facebookPages).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.platform = \"facebook\"\r\n                    page.status = key;\r\n                    allPages.push(page);\r\n            }));\r\n            \r\n            // Push the Insta Data:\r\n            // Object.entries(apiResp.instaPages).map( ([key, tab]) => \r\n            //     tab.map((page) => {\r\n            //         page.platform = \"instagram\"\r\n            //         page.status = key;\r\n            //         allPages.push(page);\r\n            // }));\r\n\r\n            allPages.sort((page,nextPage) =>  {                \r\n                let  nameA = page.name.toLowerCase(), nameB = nextPage.name.toLowerCase()\r\n                //sort ascending \r\n                if (nameA < nameB) return -1; \r\n\r\n                if (nameA > nameB) return 1;\r\n                \r\n                return 0; // default return value (no sorting)\r\n            });\r\n            \r\n            // console.log(\"All Pages for test are Sorted=>\",allPages);\r\n\r\n            dispatch({\r\n                type: 'GET_ALL_PAGES',\r\n                payload: allPages,\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"getAllPage error\", JSON.stringify(err))\r\n        });\r\n\r\n    }\r\n};\r\n\r\nexport const getAllPageConnected = () => {\r\n    return async (dispatch) => {\r\n\r\n        let token = await localStorage.getItem('authtoken');\r\n        \r\n        dispatch({ type: 'RESET_ALL_PAGES' })\r\n        \r\n\r\n        return axios.get(host + '/api/v1/secure/pages/test/connect/get/all/', {\r\n            headers: {\r\n                'authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('getAllPageConnected ===>', res.data.data)\r\n\r\n            let apiResp = res.data.data;\r\n            let allPages = [];\r\n\r\n            // Push the Fb Data:\r\n            Object.entries(apiResp.facebookPages).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.platform = \"facebook\"\r\n                    page.status = key;\r\n                    allPages.push(page);\r\n            }));\r\n            \r\n            Object.entries(apiResp.instaPages).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.platform = \"instagram\"\r\n                    page.status = key;\r\n                    allPages.push(page);\r\n            }));\r\n            \r\n            allPages.sort((page,nextPage) =>  {                \r\n                let  nameA = page.name.toLowerCase(), nameB = nextPage.name.toLowerCase()\r\n                //sort ascending \r\n                if (nameA < nameB) return -1; \r\n\r\n                if (nameA > nameB) return 1;\r\n                \r\n                return 0; // default return value (no sorting)\r\n            });\r\n\r\n            // console.log(\"All Pages Connected Pages for test are Sorted =>\",allPages);\r\n\r\n            dispatch({\r\n                type: 'GET_ALL_PAGES',\r\n                payload: allPages,\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"getAllPageConnected error\", JSON.stringify(err))\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport const resetAllPages = () => {\r\n    return (dispatch) => dispatch({ type: 'RESET_ALL_PAGES' });\r\n};\r\n\r\nexport const resetDashboard = () => {\r\n    return (dispatch) => dispatch({ type: 'RESET_DASHBOARD' });\r\n};\r\n\r\nexport const resetSocialMediaSelections = () => {\r\n    return (dispatch) => dispatch({ type: 'RESET_SM_SELECTIONS' });\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}