{"ast":null,"code":"var _jsxFileName = \"/usr/work/smart_front_oussema/src/components/EntetyTable.js\";\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction EntetyTable(props) {\n  let history = useHistory();\n  const [entitys, setentitys] = useState([]);\n\n  const manupilateEntitysData = () => {\n    let obj;\n    let newdata = {}; // let expressions\n\n    for (let i = 0; i < props.entitys.length; i++) {\n      obj = {\n        [props.entitys[i]['type']]: {\n          id: props.entitys[i]['id']\n        }\n      };\n      newdata = { ...newdata,\n        ...obj\n      };\n    }\n\n    setentitys(Object.keys(newdata));\n  };\n\n  useEffect(() => {\n    manupilateEntitysData();\n  }, []);\n  return props.entitys.map(el => React.createElement(\"tr\", {\n    key: el,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    onClick: () => history.push(`${match.path}/add/${el}`),\n    style: {\n      cursor: 'pointer'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, el), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"fr\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, props.entitys.filter(element => element.type == el).length)));\n}\n\nexport default EntetyTable;","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/components/EntetyTable.js"],"names":["React","useHistory","EntetyTable","props","history","entitys","setentitys","useState","manupilateEntitysData","obj","newdata","i","length","id","Object","keys","useEffect","map","el","push","match","path","cursor","filter","element","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,MAAIC,OAAO,GAAGH,UAAU,EAAxB;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,EAAD,CAAtC;;AACA,QAAMC,qBAAqB,GAAG,MAAM;AAChC,QAAIC,GAAJ;AACA,QAAIC,OAAO,GAAG,EAAd,CAFgC,CAGhC;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,KAAK,CAACE,OAAN,CAAcO,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3CF,MAAAA,GAAG,GAAG;AACF,SAACN,KAAK,CAACE,OAAN,CAAcM,CAAd,EAAiB,MAAjB,CAAD,GAA4B;AACxBE,UAAAA,EAAE,EAAEV,KAAK,CAACE,OAAN,CAAcM,CAAd,EAAiB,IAAjB;AADoB;AAD1B,OAAN;AAKAD,MAAAA,OAAO,GAAG,EAAE,GAAGA,OAAL;AAAc,WAAGD;AAAjB,OAAV;AAEH;;AACDH,IAAAA,UAAU,CAACQ,MAAM,CAACC,IAAP,CAAYL,OAAZ,CAAD,CAAV;AACH,GAdD;;AAeAM,EAAAA,SAAS,CAAC,MAAM;AACZR,IAAAA,qBAAqB;AACxB,GAFQ,EAEN,EAFM,CAAT;AAGA,SAEIL,KAAK,CAACE,OAAN,CAAcY,GAAd,CAAkBC,EAAE,IAAI;AAAI,IAAA,GAAG,EAAEA,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACpB;AAAI,IAAA,OAAO,EAAE,MAAMd,OAAO,CAACe,IAAR,CAAc,GAAEC,KAAK,CAACC,IAAK,QAAOH,EAAG,EAArC,CAAnB;AAA4D,IAAA,KAAK,EAAE;AAAEI,MAAAA,MAAM,EAAE;AAAV,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2FJ,EAA3F,CADoB,EAEpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFoB,EAGpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKf,KAAK,CAACE,OAAN,CAAckB,MAAd,CAAqBC,OAAO,IAAIA,OAAO,CAACC,IAAR,IAAgBP,EAAhD,EAAoDN,MAAzD,CAHoB,CAAxB,CAFJ;AASH;;AAED,eAAeV,WAAf","sourcesContent":["import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction EntetyTable(props) {\r\n    let history = useHistory()\r\n    const [entitys, setentitys] = useState([])\r\n    const manupilateEntitysData = () => {\r\n        let obj\r\n        let newdata = {}\r\n        // let expressions\r\n        for (let i = 0; i < props.entitys.length; i++) {\r\n            obj = {\r\n                [props.entitys[i]['type']]: {\r\n                    id: props.entitys[i]['id'],\r\n                }\r\n            }\r\n            newdata = { ...newdata, ...obj }\r\n\r\n        }\r\n        setentitys(Object.keys(newdata))\r\n    }\r\n    useEffect(() => {\r\n        manupilateEntitysData()\r\n    }, [])\r\n    return (\r\n\r\n        props.entitys.map(el => <tr key={el}>\r\n            <td onClick={() => history.push(`${match.path}/add/${el}`)} style={{ cursor: 'pointer' }}>{el}</td>\r\n            <td>fr</td>\r\n            <td>{props.entitys.filter(element => element.type == el).length}</td>\r\n        </tr>)\r\n\r\n    )\r\n}\r\n\r\nexport default EntetyTable\r\n"]},"metadata":{},"sourceType":"module"}