{"ast":null,"code":"var _jsxFileName = \"/usr/work/smart_front_oussema/src/app/Home/ManageProducts/AddSynonymProducts.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Row } from 'react-bootstrap';\nimport { MdAddCircleOutline } from 'react-icons/md';\nexport const AddSynonymProducts = props => {\n  let {\n    index,\n    product\n  } = props;\n  const inputRef = useRef();\n  const [enableSynonymInput, setEnableSynonymInput] = useState(false);\n  const [Synonym, setSynonym] = useState('');\n  useEffect(() => {\n    enableSynonymInput && inputRef.current.focus();\n  }, [enableSynonymInput]);\n\n  const newSynonym = () => {\n    let {\n      index\n    } = props;\n    props.addSynonym(index, Synonym);\n    setSynonym('');\n    setEnableSynonymInput(false);\n    props.setSynonymBoxBorder(false);\n  };\n\n  const deleteSynonym = () => {\n    console.log(\"Delete from this\", product.synonyms);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, enableSynonymInput ? /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex mx-auto\",\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"add-new-product-input w-100\",\n    ref: inputRef,\n    value: Synonym,\n    onChange: e => setSynonym(e.target.value),\n    onKeyDown: e => e.key === 'Enter' && newSynonym(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex mx-auto\",\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      setEnableSynonymInput(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MdAddCircleOutline, {\n    className: \"my-auto mr-1\",\n    color: '#818E94',\n    size: '17',\n    onClick: () => deleteSynonym(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Add Synonym\")));\n};\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, {})(AddSynonymProducts);","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/app/Home/ManageProducts/AddSynonymProducts.js"],"names":["React","useState","useRef","useEffect","connect","Row","MdAddCircleOutline","AddSynonymProducts","props","index","product","inputRef","enableSynonymInput","setEnableSynonymInput","Synonym","setSynonym","current","focus","newSynonym","addSynonym","setSynonymBoxBorder","deleteSynonym","console","log","synonyms","cursor","e","target","value","key","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SACIC,GADJ,QAEO,iBAFP;AAIA,SAASC,kBAAT,QAAmC,gBAAnC;AAGA,OAAO,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAEzC,MAAI;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBF,KAAzB;AAEA,QAAMG,QAAQ,GAAGT,MAAM,EAAvB;AACA,QAAM,CAACU,kBAAD,EAAoBC,qBAApB,IAA6CZ,QAAQ,CAAC,KAAD,CAA3D;AACA,QAAM,CAACa,OAAD,EAASC,UAAT,IAAuBd,QAAQ,CAAC,EAAD,CAArC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,kBAAkB,IAAID,QAAQ,CAACK,OAAT,CAAiBC,KAAjB,EAAtB;AACH,GAFQ,EAEP,CAACL,kBAAD,CAFO,CAAT;;AAKA,QAAMM,UAAU,GAAG,MAAM;AACrB,QAAI;AAAET,MAAAA;AAAF,QAAYD,KAAhB;AAEAA,IAAAA,KAAK,CAACW,UAAN,CAAiBV,KAAjB,EAAuBK,OAAvB;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAL,IAAAA,KAAK,CAACY,mBAAN,CAA0B,KAA1B;AACH,GAPD;;AASA,QAAMC,aAAa,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCb,OAAO,CAACc,QAAxC;AACH,GAFD;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIZ,kBAAkB,gBAElB,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,KAAK,EAAE;AAAEa,MAAAA,MAAM,EAAE;AAAV,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,6BAFd;AAGI,IAAA,GAAG,EAAEd,QAHT;AAII,IAAA,KAAK,EAAEG,OAJX;AAKI,IAAA,QAAQ,EAAGY,CAAD,IAAOX,UAAU,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAL/B;AAMI,IAAA,SAAS,EAAGF,CAAD,IAAOA,CAAC,CAACG,GAAF,KAAU,OAAV,IAAqBX,UAAU,EANrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFkB,gBAalB,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,KAAK,EAAE;AAAEO,MAAAA,MAAM,EAAE;AAAV,KAAvC;AAA8D,IAAA,OAAO,EAAE,MAAM;AAAEZ,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AAA8B,KAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,kBAAD;AAAoB,IAAA,SAAS,EAAC,cAA9B;AAA6C,IAAA,KAAK,EAAE,SAApD;AAA+D,IAAA,IAAI,EAAE,IAArE;AAA2E,IAAA,OAAO,EAAG,MAAMQ,aAAa,EAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAG,IAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CAfJ,CADJ;AAuBH,CAjDM;;AAmDP,MAAMS,eAAe,GAAIC,KAAD,KAAY,EAAZ,CAAxB;;AAIA,eAAe3B,OAAO,CAAC0B,eAAD,EAAiB,EAAjB,CAAP,CAA4BvB,kBAA5B,CAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n    Row,\r\n} from 'react-bootstrap';\r\n\r\nimport { MdAddCircleOutline } from 'react-icons/md';\r\n\r\n\r\nexport const AddSynonymProducts = (props) => {\r\n\r\n    let { index, product } = props;\r\n\r\n    const inputRef = useRef();\r\n    const [enableSynonymInput,setEnableSynonymInput] = useState(false);\r\n    const [Synonym,setSynonym] = useState('');\r\n\r\n    useEffect(() => {\r\n        enableSynonymInput && inputRef.current.focus();\r\n    },[enableSynonymInput]);\r\n\r\n\r\n    const newSynonym = () => {\r\n        let { index } = props;\r\n\r\n        props.addSynonym(index,Synonym); \r\n        setSynonym(''); \r\n        setEnableSynonymInput(false); \r\n        props.setSynonymBoxBorder(false); \r\n    };\r\n\r\n    const deleteSynonym = () => {\r\n        console.log(\"Delete from this\", product.synonyms);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {\r\n            enableSynonymInput\r\n            ?\r\n            <Row className=\"d-flex mx-auto\" style={{ cursor: 'pointer' }}>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"add-new-product-input w-100\" \r\n                    ref={inputRef} \r\n                    value={Synonym} \r\n                    onChange={(e) => setSynonym(e.target.value)} \r\n                    onKeyDown={(e) => e.key === 'Enter' && newSynonym()} \r\n                />\r\n            </Row>\r\n            : \r\n            <Row className=\"d-flex mx-auto\" style={{ cursor: 'pointer' }} onClick={() => { setEnableSynonymInput(true); }}>\r\n                <MdAddCircleOutline className=\"my-auto mr-1\" color={'#818E94'} size={'17'} onClick={ () => deleteSynonym() } />\r\n                <p className=\"my-auto\">Add Synonym</p>\r\n            </Row>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps,{})(AddSynonymProducts)\r\n"]},"metadata":{},"sourceType":"module"}