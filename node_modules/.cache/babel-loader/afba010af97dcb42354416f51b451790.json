{"ast":null,"code":"import axios from 'axios';\nimport { host } from '../../config';\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\n\nvar sha1 = require('sha1'); // const md5Password = \"bd$inC96\";\n// Popup Config: \n\n\nconst popup = Swal.mixin({\n  customClass: {\n    confirmButton: 'wizard-pages-active-btn'\n  },\n  buttonsStyling: false\n});\nconst paymentHost = \"https://preprod.gpgcheckout.com/Paiement_test/Validation_paiement.php\"; // const paymentHost = \"https://preprod.gpgcheckout.com/Paiement_test\";\n\nconst userNamePayment = \"MAR868\";\nconst md5Password = \"6677f06ff9439a26d5dd81d49931662f\";\nexport const payPlan = lang => {\n  return dispatch => {\n    // Devise TND\n    // let objectToSend = {\n    //     NumSite: \"MAR868\",\n    //     Password: \"6677f06ff9439a26d5dd81d49931662f\",\n    //     orderID: \"modo69\",\n    //     orderId: \"modo69\",\n    //     EMAIL: \"enis@msl.com\",\n    //     CustLastName: \"Ayechi\",\n    //     CustFirstName: \"Enis\",\n    //     CustAddress: \"CUN\",\n    //     CustTel: \"58000111\",\n    //     Langue: \"fr\",\n    //     Amount: 50000,\n    //     Currency: \"TND\",\n    //     PayementType: \"1\",\n    //     orderProducts: \"ProPlanmodo\",\n    //     // signature: sha1(\"MAR868\"+\"bd$inC96\"+\"MODO-TEST-255\"+50000+\"TND\"),\n    //     signature: sha1(\"MAR868\"+\"bd$inC96\"+\"modo69\"+50000+\"TND\"),\n    //     vad: \"258500003\",\n    // };\n    let formData = new FormData();\n    const config = {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded' //'Content-Type': 'multipart/form-data',\n\n      }\n    };\n    formData.append('NumSite', \"MAR868\");\n    formData.append('Password', \"6677f06ff9439a26d5dd81d49931662f\");\n    formData.append('orderID', \"jd16545\");\n    formData.append('EMAIL', \"enis@msl.com\");\n    formData.append('CustLastName', \"Ayechi\");\n    formData.append('CustFirstName', \"Enis\");\n    formData.append('CustAddress', \"CUN\");\n    formData.append('CustTel', \"58000111\");\n    formData.append('Langue', \"fr\");\n    formData.append('Amount', 50000);\n    formData.append('Currency', '788');\n    formData.append('PayementType', 1);\n    formData.append('orderProducts', 'ProPlanmodo');\n    formData.append('signature', \"a4e89069986101358797b5bc27779c4fd93dd676\");\n    formData.append('vad', '258500003');\n    formData.append('Terminal', \"001\");\n    return axios.post(\"https://preprod.gpgcheckout.com/Paiement_test/Validation_paiement.php\", formData, config).then(res => {\n      console.log('payPlan =>', res.data);\n    }).catch(err => console.log(\"payPlan err\", err)); // return axios.post(paymentHost,objectToSend,config)\n    // Devise etrangere\n    // let objectToSend = {\n    //     NumSite: userNamePayment,\n    //     Password: md5Password,\n    //     orderID: \"MODO-TEST-1\",\n    //     Langue: lang,\n    //     AmountSecond: 10,\n    // };\n  };\n};\nexport const detectCurrency = () => {\n  return dispatch => {\n    return axios.get(`https://ipapi.co/json/`).then(res => {\n      // console.log('detecting Currency =>', res.data);\n      if (res.data.in_eu) {\n        // Europeen ip adress:\n        dispatch({\n          type: 'DETECT_CURRENCY',\n          payload: {\n            id: \"EUR\",\n            key: 978,\n            value: \"â‚¬\"\n          }\n        });\n      } else {\n        // Not europeen ip adress\n        if (res.data.currency === \"TND\") {\n          // Tunisian IP\n          dispatch({\n            type: 'DETECT_CURRENCY',\n            payload: {\n              id: \"TND\",\n              key: 840,\n              value: \"TND\"\n            }\n          });\n        } else {\n          // ASIA & AMERICA\n          dispatch({\n            type: 'DETECT_CURRENCY',\n            payload: {\n              id: \"USD\",\n              key: 788,\n              value: \"$\"\n            }\n          });\n        }\n      }\n    }).catch(err => console.log(\"detecting Currency err\", err));\n  };\n};\nexport const getPricingInfos = () => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/pricing/pricing`).then(res => {\n      console.log('getPricingInfos =>', res.data.data);\n      dispatch({\n        type: 'GET_PRICING_INFO',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"getPricingInfos err\", err));\n  };\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/billingActions.js"],"names":["axios","host","Swal","sha1","require","popup","mixin","customClass","confirmButton","buttonsStyling","paymentHost","userNamePayment","md5Password","payPlan","lang","dispatch","formData","FormData","config","headers","append","post","then","res","console","log","data","catch","err","detectCurrency","get","in_eu","type","payload","id","key","value","currency","getPricingInfos"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { host } from '../../config';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nvar sha1 = require('sha1');\r\n// const md5Password = \"bd$inC96\";\r\n\r\n// Popup Config: \r\nconst popup = Swal.mixin({\r\n    customClass: {\r\n    confirmButton: 'wizard-pages-active-btn',\r\n    },\r\n    buttonsStyling: false\r\n});\r\n\r\nconst paymentHost = \"https://preprod.gpgcheckout.com/Paiement_test/Validation_paiement.php\";\r\n// const paymentHost = \"https://preprod.gpgcheckout.com/Paiement_test\";\r\nconst userNamePayment = \"MAR868\";\r\nconst md5Password = \"6677f06ff9439a26d5dd81d49931662f\";\r\n\r\nexport const payPlan = (lang) => {\r\n    return (dispatch) => {\r\n\r\n        \r\n        // Devise TND\r\n        // let objectToSend = {\r\n            //     NumSite: \"MAR868\",\r\n            //     Password: \"6677f06ff9439a26d5dd81d49931662f\",\r\n            //     orderID: \"modo69\",\r\n            //     orderId: \"modo69\",\r\n            //     EMAIL: \"enis@msl.com\",\r\n            //     CustLastName: \"Ayechi\",\r\n            //     CustFirstName: \"Enis\",\r\n            //     CustAddress: \"CUN\",\r\n            //     CustTel: \"58000111\",\r\n            //     Langue: \"fr\",\r\n            //     Amount: 50000,\r\n            //     Currency: \"TND\",\r\n            //     PayementType: \"1\",\r\n            //     orderProducts: \"ProPlanmodo\",\r\n            //     // signature: sha1(\"MAR868\"+\"bd$inC96\"+\"MODO-TEST-255\"+50000+\"TND\"),\r\n            //     signature: sha1(\"MAR868\"+\"bd$inC96\"+\"modo69\"+50000+\"TND\"),\r\n            //     vad: \"258500003\",\r\n            // };\r\n            \r\n        \r\n        let formData = new FormData();\r\n        \r\n        const config = {\r\n            headers: {\r\n              'Content-Type': 'application/x-www-form-urlencoded',\r\n            //'Content-Type': 'multipart/form-data',\r\n            }\r\n        };\r\n\r\n        formData.append('NumSite', \"MAR868\");\r\n        formData.append('Password', \"6677f06ff9439a26d5dd81d49931662f\");\r\n        formData.append('orderID', \"jd16545\");\r\n        formData.append('EMAIL', \"enis@msl.com\");\r\n        formData.append('CustLastName', \"Ayechi\");\r\n        formData.append('CustFirstName', \"Enis\");\r\n        formData.append('CustAddress', \"CUN\");\r\n        formData.append('CustTel', \"58000111\");\r\n        formData.append('Langue', \"fr\");\r\n        formData.append('Amount', 50000);\r\n        formData.append('Currency', '788');\r\n        formData.append('PayementType', 1);\r\n        formData.append('orderProducts', 'ProPlanmodo');\r\n        formData.append('signature', \"a4e89069986101358797b5bc27779c4fd93dd676\");\r\n        formData.append('vad', '258500003');\r\n        formData.append('Terminal', \"001\");\r\n\r\n\r\n    \r\n        return axios.post(\"https://preprod.gpgcheckout.com/Paiement_test/Validation_paiement.php\",formData,config)\r\n        .then(res => {\r\n            console.log('payPlan =>', res.data);\r\n        })\r\n        .catch((err) => console.log(\"payPlan err\", err));\r\n        \r\n        \r\n        // return axios.post(paymentHost,objectToSend,config)\r\n        // Devise etrangere\r\n        // let objectToSend = {\r\n        //     NumSite: userNamePayment,\r\n        //     Password: md5Password,\r\n        //     orderID: \"MODO-TEST-1\",\r\n        //     Langue: lang,\r\n        //     AmountSecond: 10,\r\n        // };\r\n    }\r\n};\r\n\r\nexport const detectCurrency = () => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(`https://ipapi.co/json/`)\r\n        .then(res => {\r\n            // console.log('detecting Currency =>', res.data);\r\n\r\n            if(res.data.in_eu) {\r\n                // Europeen ip adress:\r\n                dispatch({\r\n                    type: 'DETECT_CURRENCY',\r\n                    payload: {id: \"EUR\", key: 978, value: \"â‚¬\"},\r\n                });\r\n\r\n            } else {\r\n                // Not europeen ip adress\r\n                if(res.data.currency === \"TND\") {\r\n                    // Tunisian IP\r\n                    dispatch({\r\n                        type: 'DETECT_CURRENCY',\r\n                        payload: {id: \"TND\", key: 840,  value: \"TND\"},\r\n                    });\r\n                } else {\r\n                    // ASIA & AMERICA\r\n                    dispatch({\r\n                        type: 'DETECT_CURRENCY',\r\n                        payload: {id: \"USD\", key: 788,  value: \"$\"},\r\n                    });\r\n                }\r\n            }\r\n            \r\n            \r\n        })\r\n        .catch((err) => console.log(\"detecting Currency err\", err));\r\n    }\r\n};\r\n\r\nexport const getPricingInfos = () => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + `/api/v1/pricing/pricing`)\r\n        .then(res => {\r\n            console.log('getPricingInfos =>', res.data.data);\r\n\r\n            dispatch({\r\n                type: 'GET_PRICING_INFO',\r\n                payload: res.data.data,\r\n            });\r\n        })\r\n        .catch((err) => console.log(\"getPricingInfos err\", err));\r\n    }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}