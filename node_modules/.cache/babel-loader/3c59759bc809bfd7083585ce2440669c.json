{"ast":null,"code":"import axios from 'axios';\nimport { host, trainAgentHost } from '../../config';\nexport const getLogs = idPostOrPage => {\n  return dispatch => {\n    // console.log(\"Get from here\", project);\n    return axios.get(host + `/api/v1/secure/logEvent/post/${idPostOrPage}/all`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('getLogs post APi Response =>', res.data.data);\n      let commentsMatched = [];\n      let commentsNotMatched = [];\n\n      if (res.data.data.events) {\n        console.log(\"Seeing Events ....\");\n        res.data.data.events.map(comment => {\n          if (comment.success) {\n            commentsMatched.push(comment);\n          } else {\n            commentsNotMatched.push(comment);\n          }\n        });\n        console.log(\"Matched =>\", commentsMatched);\n        console.log(\"Not Matched =>\", commentsNotMatched);\n      }\n\n      dispatch({\n        type: 'GET_LOGS_BY_PAGE',\n        payload: res.data.data,\n        payload1: commentsMatched,\n        payload2: commentsNotMatched\n      });\n    }).catch(err => console.log(\"getLogs post Api error  =>\", err));\n  };\n};\nexport const deleteProjectByPage = projet => {\n  return dispatch => {\n    let objectToSend = {\n      project: projet\n    };\n    return axios.put(host + `/api/v1/secure/project/remove/project`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('deleteProjectByPage post APi Response =>', res.data.data);\n      dispatch({\n        type: 'GET_PROJECT_BY_PAGE',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"deleteProjectByPage post Api error  =>\", err));\n  };\n};\nexport const goToWizardConfig = (projet, Page, history) => {\n  return dispatch => {\n    // Detect intent Type \n    let intentDetection = projet.post.idPost === projet.post.page.idPage;\n    dispatch({\n      type: 'FROM_MY_AGENTS_TO_STEP_3_WIZARD',\n      payload: 2,\n      payload1: projet._id,\n      payload2: intentDetection ? \"generic\" : \"default\"\n    });\n    dispatch({\n      type: 'SELECT_WIZARD_PAGE',\n      payload: Page\n    });\n    history.push('/home/auto-wizard');\n  };\n};\nexport const setAgentsSelectedProject = (project, history) => {\n  return dispatch => {\n    dispatch({\n      type: 'SET_AGENTS_PROJECT',\n      payload: project\n    });\n    history.push('/home/my-agents-messages');\n  };\n};\nexport const getProjectByPage = Page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/pages/get/project/${Page.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('getProjectByPage post APi Response =>', res.data.data);\n      dispatch({\n        type: 'GET_PROJECT_BY_PAGE',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"getProjectByPage post Api error  =>\", err));\n  };\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/myAgentsActions.js"],"names":["axios","host","trainAgentHost","getLogs","idPostOrPage","dispatch","get","headers","localStorage","getItem","then","res","console","log","data","commentsMatched","commentsNotMatched","events","map","comment","success","push","type","payload","payload1","payload2","catch","err","deleteProjectByPage","projet","objectToSend","project","put","goToWizardConfig","Page","history","intentDetection","post","idPost","page","idPage","_id","setAgentsSelectedProject","getProjectByPage","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAcC,cAAd,QAAoC,cAApC;AAEA,OAAO,MAAMC,OAAO,GAAIC,YAAD,IAAkB;AACrC,SAAQC,QAAD,IAAc;AACjB;AAEA,WAAOL,KAAK,CAACM,GAAN,CAAUL,IAAI,GAAI,gCAA+BG,YAAa,MAA9D,EAAoE;AACvEG,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AAD8D,KAApE,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,GAAG,CAACG,IAAJ,CAASA,IAArD;AAEA,UAAIC,eAAe,GAAG,EAAtB;AACA,UAAIC,kBAAkB,GAAG,EAAzB;;AAEA,UAAGL,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcG,MAAjB,EAAyB;AACrBL,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAF,QAAAA,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcG,MAAd,CAAqBC,GAArB,CAAyBC,OAAO,IAAI;AAChC,cAAGA,OAAO,CAACC,OAAX,EAAoB;AAChBL,YAAAA,eAAe,CAACM,IAAhB,CAAqBF,OAArB;AACH,WAFD,MAEO;AACHH,YAAAA,kBAAkB,CAACK,IAAnB,CAAwBF,OAAxB;AACH;AACJ,SAND;AAQAP,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BE,eAA1B;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BG,kBAA9B;AAGH;;AAEDX,MAAAA,QAAQ,CAAC;AACLiB,QAAAA,IAAI,EAAE,kBADD;AAELC,QAAAA,OAAO,EAAEZ,GAAG,CAACG,IAAJ,CAASA,IAFb;AAGLU,QAAAA,QAAQ,EAAET,eAHL;AAILU,QAAAA,QAAQ,EAAET;AAJL,OAAD,CAAR;AAOH,KAlCM,EAmCNU,KAnCM,CAmCCC,GAAD,IAASf,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0Cc,GAA1C,CAnCT,CAAP;AAoCH,GAvCD;AAwCH,CAzCM;AA4CP,OAAO,MAAMC,mBAAmB,GAAIC,MAAD,IAAY;AAC3C,SAAQxB,QAAD,IAAc;AAEjB,QAAIyB,YAAY,GAAG;AACfC,MAAAA,OAAO,EAAEF;AADM,KAAnB;AAIA,WAAO7B,KAAK,CAACgC,GAAN,CAAU/B,IAAI,GAAI,uCAAlB,EAAyD6B,YAAzD,EAAsE;AACzEvB,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADgE,KAAtE,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwDF,GAAG,CAACG,IAAJ,CAASA,IAAjE;AAEAT,MAAAA,QAAQ,CAAC;AACLiB,QAAAA,IAAI,EAAE,qBADD;AAELC,QAAAA,OAAO,EAAEZ,GAAG,CAACG,IAAJ,CAASA;AAFb,OAAD,CAAR;AAIH,KAZM,EAaNY,KAbM,CAaCC,GAAD,IAASf,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsDc,GAAtD,CAbT,CAAP;AAcH,GApBD;AAqBH,CAtBM;AAwBP,OAAO,MAAMM,gBAAgB,GAAG,CAACJ,MAAD,EAAQK,IAAR,EAAaC,OAAb,KAAyB;AACrD,SAAQ9B,QAAD,IAAc;AACjB;AACA,QAAI+B,eAAe,GAAGP,MAAM,CAACQ,IAAP,CAAYC,MAAZ,KAAuBT,MAAM,CAACQ,IAAP,CAAYE,IAAZ,CAAiBC,MAA9D;AAEAnC,IAAAA,QAAQ,CAAC;AACLiB,MAAAA,IAAI,EAAE,iCADD;AAELC,MAAAA,OAAO,EAAE,CAFJ;AAGLC,MAAAA,QAAQ,EAAEK,MAAM,CAACY,GAHZ;AAILhB,MAAAA,QAAQ,EAAEW,eAAe,GAAG,SAAH,GAAe;AAJnC,KAAD,CAAR;AAOA/B,IAAAA,QAAQ,CAAC;AACLiB,MAAAA,IAAI,EAAE,oBADD;AAELC,MAAAA,OAAO,EAAEW;AAFJ,KAAD,CAAR;AAIAC,IAAAA,OAAO,CAACd,IAAR,CAAa,mBAAb;AACH,GAhBD;AAiBH,CAlBM;AAsBP,OAAO,MAAMqB,wBAAwB,GAAG,CAACX,OAAD,EAASI,OAAT,KAAqB;AACzD,SAAQ9B,QAAD,IAAc;AAEjBA,IAAAA,QAAQ,CAAC;AACLiB,MAAAA,IAAI,EAAE,oBADD;AAELC,MAAAA,OAAO,EAAEQ;AAFJ,KAAD,CAAR;AAKAI,IAAAA,OAAO,CAACd,IAAR,CAAa,0BAAb;AACH,GARD;AASH,CAVM;AAYP,OAAO,MAAMsB,gBAAgB,GAAIT,IAAD,IAAU;AACtC,SAAQ7B,QAAD,IAAc;AAEjB,WAAOL,KAAK,CAACM,GAAN,CAAUL,IAAI,GAAI,oCAAmCiC,IAAI,CAACU,EAAG,EAA7D,EAA+D;AAClErC,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADyD,KAA/D,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDF,GAAG,CAACG,IAAJ,CAASA,IAA9D;AAEAT,MAAAA,QAAQ,CAAC;AACLiB,QAAAA,IAAI,EAAE,qBADD;AAELC,QAAAA,OAAO,EAAEZ,GAAG,CAACG,IAAJ,CAASA;AAFb,OAAD,CAAR;AAIH,KAZM,EAaNY,KAbM,CAaCC,GAAD,IAASf,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDc,GAAnD,CAbT,CAAP;AAcH,GAhBD;AAiBH,CAlBM","sourcesContent":["import axios from 'axios'\r\nimport { host,trainAgentHost } from '../../config';\r\n\r\nexport const getLogs = (idPostOrPage) => {\r\n    return (dispatch) => {\r\n        // console.log(\"Get from here\", project);\r\n\r\n        return axios.get(host + `/api/v1/secure/logEvent/post/${idPostOrPage}/all`,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('getLogs post APi Response =>', res.data.data);\r\n\r\n            let commentsMatched = [];\r\n            let commentsNotMatched = []; \r\n\r\n            if(res.data.data.events) {\r\n                console.log(\"Seeing Events ....\");\r\n                res.data.data.events.map(comment => {\r\n                    if(comment.success) {\r\n                        commentsMatched.push(comment);\r\n                    } else {\r\n                        commentsNotMatched.push(comment);\r\n                    }\r\n                });\r\n\r\n                console.log(\"Matched =>\", commentsMatched)\r\n                console.log(\"Not Matched =>\", commentsNotMatched)\r\n\r\n                \r\n            }\r\n\r\n            dispatch({\r\n                type: 'GET_LOGS_BY_PAGE',\r\n                payload: res.data.data,\r\n                payload1: commentsMatched,\r\n                payload2: commentsNotMatched,\r\n            });\r\n            \r\n        })\r\n        .catch((err) => console.log(\"getLogs post Api error  =>\", err))\r\n    }\r\n};\r\n\r\n\r\nexport const deleteProjectByPage = (projet) => {\r\n    return (dispatch) => {\r\n\r\n        let objectToSend = {\r\n            project: projet,\r\n        };\r\n\r\n        return axios.put(host + `/api/v1/secure/project/remove/project`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('deleteProjectByPage post APi Response =>', res.data.data);\r\n\r\n            dispatch({\r\n                type: 'GET_PROJECT_BY_PAGE',\r\n                payload: res.data.data,\r\n            });\r\n        })\r\n        .catch((err) => console.log(\"deleteProjectByPage post Api error  =>\", err) )\r\n    }\r\n};\r\n\r\nexport const goToWizardConfig = (projet,Page,history) => {\r\n    return (dispatch) => {\r\n        // Detect intent Type \r\n        let intentDetection = projet.post.idPost === projet.post.page.idPage;\r\n\r\n        dispatch({\r\n            type: 'FROM_MY_AGENTS_TO_STEP_3_WIZARD',\r\n            payload: 2,\r\n            payload1: projet._id,\r\n            payload2: intentDetection ? \"generic\" : \"default\",\r\n        });\r\n\r\n        dispatch({\r\n            type: 'SELECT_WIZARD_PAGE', \r\n            payload: Page,\r\n        });\r\n        history.push('/home/auto-wizard'); \r\n    }\r\n};\r\n\r\n\r\n\r\nexport const setAgentsSelectedProject = (project,history) => {\r\n    return (dispatch) => {\r\n \r\n        dispatch({\r\n            type: 'SET_AGENTS_PROJECT',\r\n            payload: project,\r\n        });\r\n       \r\n        history.push('/home/my-agents-messages');\r\n    }\r\n};\r\n\r\nexport const getProjectByPage = (Page) => {\r\n    return (dispatch) => {\r\n \r\n        return axios.get(host + `/api/v1/secure/pages/get/project/${Page.id}`,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('getProjectByPage post APi Response =>', res.data.data);\r\n\r\n            dispatch({\r\n                type: 'GET_PROJECT_BY_PAGE',\r\n                payload: res.data.data,\r\n            });\r\n        })\r\n        .catch((err) => console.log(\"getProjectByPage post Api error  =>\", err) )\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}