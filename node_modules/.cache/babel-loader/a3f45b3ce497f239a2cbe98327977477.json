{"ast":null,"code":"import axios from 'axios';\nimport { host } from '../../config';\nimport Swal from 'sweetalert2/dist/sweetalert2.js'; // Popup Config: \n\nconst popup = Swal.mixin({\n  customClass: {\n    confirmButton: 'wizard-pages-active-btn'\n  },\n  buttonsStyling: false\n}); // Set Language :\n\nexport const setLang = lang => {\n  return dispatch => {\n    console.log(\"Lang !\", lang);\n    localStorage.setItem(\"modoLang\", lang);\n    dispatch({\n      type: 'SET_LANG',\n      payload: lang\n    });\n  };\n}; // Filtring Pages:\n\nexport const filterPages = (filterBy, Pages) => {\n  return dispatch => {\n    // console.log(\"Filter\", filterBy, \"Those =>\", Pages)\n    if (filterBy === \"all\") {\n      dispatch({\n        type: 'FILTER_PAGES',\n        payload: []\n      });\n    } else {\n      let filteredPages = Pages.filter(page => page.platform === filterBy);\n      dispatch({\n        type: 'GET_ALL_PAGES',\n        payload: filteredPages\n      });\n    }\n\n    ;\n  };\n};\nexport const resetFilterPages = () => {\n  return dispatch => {\n    dispatch({\n      type: 'RESET_FILTER_PAGES'\n    });\n  };\n};\nexport const getDashboardPosts = Page => {\n  return dispatch => {\n    const fbHost = \"https://graph.facebook.com/v8.0\";\n    return axios.get(host + `/api/v1/secure/logEvent/dashbord/post/${Page.id}/${Page.accessToken}/${Page.platform}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('getDashboardPosts', res.data.data);\n      dispatch({\n        type: 'GET_DASHBOARD_POSTS',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"err getDashboardPosts\", err));\n  };\n};\nexport const getDashboard = Page => {\n  return dispatch => {\n    // console.log(\"Getting the dashboard with page =>\", Page.id);\n    return axios.get(host + `/api/v1/secure/logEvent/dashbord/intent/${Page.id}/${Page.platform}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      // console.log('getDashboard', res.data.data);\n      // let limitedTo5 = res.data.data.slice(0,5);\n      let allIntents = res.data.data;\n      let colors = ['#009EE3', \"#01096F\", \"#E5007D\", \"#E60A17\", \"#139216\"]; // Comparing with the logs :\n\n      axios.get(host + `/api/v1/secure/logEvent/post/${Page.id}/all`, {\n        headers: {\n          'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n        }\n      }).then(resLogs => {\n        if (resLogs.data.data[0].events) {\n          resLogs.data.data[0].events.map(log => {\n            log.intent.map(intentLog => {\n              if (typeof intentLog === \"object\" && intentLog.hasOwnProperty(\"intent\")) {\n                allIntents.map(intent => {\n                  if (intentLog.intent.toLowerCase() === intent.title.toLowerCase()) {\n                    // console.log(\"Comp\",intentLog.intent.toLowerCase(), \"===\", intent.title.toLowerCase() );\n                    // console.log(\"Put ?\",log.created_time);\n                    intent.date = log.created_time;\n                  }\n                });\n              }\n            });\n          }); // Filter the intents with dates !\n\n          let filtredIntents = allIntents.filter(a => a.date); // Sort from the highest total to the lowest: \n\n          let sortedIntents = filtredIntents.sort((a, b) => b.value - a.value);\n          sortedIntents.map((intentSorted, i) => {\n            intentSorted.color = colors[i];\n          });\n          console.log(\"All Intents sorted\", sortedIntents);\n          dispatch({\n            type: 'GET_DASHBOARD',\n            payload: sortedIntents.slice(0, 5)\n          });\n        }\n      }).catch(errLogs => {\n        console.log(\"Error Get logs on dashboard\", errLogs);\n        dispatch({\n          type: 'GET_DASHBOARD',\n          payload: []\n        });\n      }); // dispatch({\n      //     type: 'GET_DASHBOARD',\n      //     payload: limitedTo5,\n      // });\n    }).catch(err => console.log(\"err getDashboard\", err));\n  };\n};\nexport const setPreferences = (history, spam, likes, delay, Page, Platform, exactlySeconds, exactlyMinutes, randomlyFromSeconds, randomlyFromMinutes, randomlyToSeconds, randomlyToMinutes) => {\n  return dispatch => {\n    let objectToSend = null;\n    let pagePlatform = Platform === \"fb\" ? \"facebook\" : \"instagram\";\n\n    if (delay === \"immediatly\") {\n      objectToSend = {\n        platforme: pagePlatform,\n        likesComment: likes,\n        spam: spam,\n        respReplies: {\n          statut: 'immediatly',\n          time: [0]\n        }\n      };\n      console.log(\"Immediatly\", objectToSend);\n    } else if (delay === \"Exactly\") {\n      // Minutes + Seconds => X ms\n      let minutes = exactlyMinutes * 60000;\n      let seconds = exactlySeconds * 1000;\n      let finalTime = minutes + seconds;\n      objectToSend = {\n        platforme: pagePlatform,\n        likesComment: likes,\n        spam: spam,\n        respReplies: {\n          statut: 'Exactly',\n          time: [finalTime]\n        }\n      };\n      console.log(\"Exactly\", objectToSend);\n    } else {\n      // from Minutes + Seconds => X ms\n      // to Minutes + Seconds => X ms\n      let minutesFrom = randomlyFromMinutes * 60000;\n      let secondsFrom = randomlyFromSeconds * 1000;\n      let finalTimeFrom = minutesFrom + secondsFrom;\n      let minutesTo = randomlyToMinutes * 60000;\n      let secondsTo = randomlyToSeconds * 1000;\n      let finalTimeTo = minutesTo + secondsTo;\n      objectToSend = {\n        platforme: pagePlatform,\n        likesComment: likes,\n        spam: spam,\n        respReplies: {\n          statut: 'Randomly',\n          time: [finalTimeFrom, finalTimeTo]\n        }\n      };\n      console.log(\"Randomly\", objectToSend);\n    }\n\n    console.log(\"Preferences sending to nour\", objectToSend);\n    return axios.put(host + `/api/v1/secure/pages/preference/${Page.idPage}/${pagePlatform}`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('setPreferences Response =>', res.data.data);\n      history.push('/pages');\n    }).catch(err => console.log(\"setPreferences err\", err));\n  };\n};\nexport const addPageEntity = page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/pages/entities/add/${page.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('add entity', res.data.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err addPageEntity\", err));\n  };\n};\nexport const getPageEntities = page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/project/get/entitiesproject/${page.platform}/${page.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      // console.log('entities mtaaa page', res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_ENTITIES_OF_A_PAGE',\n        payload: categories\n      });\n    }).catch(err => console.log(\"err getPageEntities\", err));\n  };\n}; // TEAM:\n\nexport const getTeamMembers = Page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/membership/listUser/${Page.id}/${Page.platform}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      // console.log('membership/listUser/ Response api  => ', res.data.data);\n      dispatch({\n        type: 'GET_TEAM',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"membership/listUser/ error =>\", err));\n  };\n};\nexport const sendMailTeam = (Page, emailTeamMember, nameTeamMember, inviteToken) => {\n  return dispatch => {\n    // console.log(\"Page\", Page);\n    // console.log(\"Email\", emailTeamMember);\n    // console.log(\"Name\", nameTeamMember);\n    return axios.post(host + `/api/v1/secure/membership/sendMail/${Page.id}/${Page.platform}`, {\n      email: emailTeamMember,\n      nameUser: nameTeamMember,\n      token: inviteToken\n    }, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('membership/sendMail/ Response api  => ', res.data.data);\n    }).catch(err => console.log(\"membership/sendMail/ error =>\", err));\n  };\n};\nexport const inviteMember = (page, nameTeamMember) => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/membership/get/${page.id}/${page.platform}/${nameTeamMember}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }); // .then(res => {\n    //     console.log('membership/get  inviteMember !! =>', res.data.data);\n    // dispatch({\n    //     type: 'GET_ENTITIES_OF_A_PAGE',\n    //     payload: res.data.data\n    // })\n    // })\n    // .catch((err) => console.log(\"err inviteMember\", err))\n  };\n};\nexport const deleteTeamMember = (page, idFacebook, role) => {\n  return dispatch => {\n    let typePage = page.platform;\n    let idPage = page.id;\n    return axios.post(host + `/api/v1/secure/membership/deleteMember/${role}`, {\n      idFacebook,\n      idPage,\n      typePage\n    }, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('/membership/deleteMember/ response api', res.data.data);\n      dispatch({\n        type: 'GET_TEAM',\n        payload: res.data.data\n      });\n    }).catch(err => {\n      console.log(\"/membership/deleteMember/ error api\", err);\n      popup.fire({\n        title: 'Error while deleting the member',\n        confirmButtonText: 'Retry'\n      });\n    });\n  };\n};\n/* INSTAGRAM */\n\nexport const connectInstagramPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/connect/`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de connect page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err connect page insta\", err));\n  };\n};\nexport const disconnectInstagramPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/disconnect`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err disconnect page instagram\", err));\n  };\n};\nexport const deleteInstagramPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/delete`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err disconnect page instagram\", err));\n  };\n};\nexport const makeOwnerInstagramPage = (idPage, idFacebook) => {\n  return dispatch => {\n    let page = {\n      id: idPage,\n      idFacebook: idFacebook // idFacebook of the new owner\n\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/owner`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de owner page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err owner page instagram\", err));\n  };\n};\n/* FACEBOOK */\n\nexport const connectFacebookPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pages/connect/`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de connect page facebook', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err de connect page facebook\", err));\n  };\n};\nexport const disconnectFacebookPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pages/disconnect/disconnect`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page facebok', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err de disconnect page facebok\", err));\n  };\n};\nexport const deleteFacebookPage = (idPage, idFacebook) => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pages/disconnect/delete`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page facebok', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err de disconnect page facebok\", err));\n  };\n};\nexport const makeOwnerFacebookPage = (idPage, idFacebook) => {\n  return dispatch => {\n    let page = {\n      id: idPage,\n      idFacebook: idFacebook // idFacebook of the new owner\n\n    };\n    return axios.post(host + `/api/v1/secure/pages/disconnect/owner`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de owner page facebook', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err owner page facebook\", err));\n  };\n};\nexport const purgePages = (allPages, idPage) => {\n  return async dispatch => {\n    console.log('idPage', idPage, 'purge this =>', allPages); // allPages.filter(page => page.idPage !== idPage);\n\n    dispatch({\n      type: 'GET_ALL_PAGES',\n      payload: allPages.filter(page => page.idPage !== idPage)\n    });\n  };\n};\nexport const sycroPageWithWizard = (allPages, wizardPage) => {\n  return async dispatch => {\n    // console.log('Lets search for', wizardPage);\n    // console.log('in', allPages);\n    let found = allPages.filter(p => p.idPage === wizardPage.id);\n    let page = found[0]; // console.log(\"Pagek ahaya =>\", page);\n\n    const selectedPage = {\n      platform: page.platform,\n      name: page.name,\n      picture_url: page.imageUrl ? page.imageUrl : `https://graph.facebook.com/v8.0/${page.idPage}/picture?access_token=${page.access_token}`,\n      id: page.idPage,\n      accessToken: page.access_token,\n      team: page.user,\n      admins: page.admins,\n      status: page.status\n    }; // console.log(\"You just sync a page with wizard\", selectedPage)\n\n    dispatch({\n      type: 'SELECT_SOCIAL_MEDIA_PAGE',\n      payload: selectedPage\n    });\n  };\n};\nexport const selectSocialMediaPage = (page, platform, status) => {\n  return async dispatch => {\n    /*\r\n        ALL STATUS :\r\n        \"listPageConnectedOwner\" => #E5007D\" || \"listPageInvite\" => #139216\" \r\n        \"listPageInviteAdmin\" => \"#199EE3\"  || \"listPageConnectedOtherTeam\" => #B4B4B4\"\r\n        \"listPageNotConnected\" => \"No Color\"\r\n    */\n    const selectedPage = {\n      platform: platform === \"fb\" ? \"facebook\" : \"instagram\",\n      name: page.name,\n      picture_url: page.imageUrl ? page.imageUrl : `https://graph.facebook.com/v8.0/${page.idPage}/picture?access_token=${page.access_token}`,\n      id: page.idPage,\n      accessToken: page.access_token,\n      team: page.user,\n      admins: page.admins,\n      status: status\n    }; // console.log(\"u just selected a page\", selectedPage)\n\n    dispatch({\n      type: 'SELECT_SOCIAL_MEDIA_PAGE',\n      payload: selectedPage\n    });\n  };\n};\nexport const getFbData = () => {\n  return async dispatch => {\n    let token = await localStorage.getItem('authtoken');\n    return axios.get(host + '/api/v1/secure/pages/get/all/', {\n      headers: {\n        'authorization': 'Bearer ' + token\n      }\n    }).then(res => {\n      let allFbPages = [];\n      Object.entries(res.data.data).map(([key, tab]) => tab.map(page => {\n        page.status = key;\n        allFbPages.push(page);\n      }));\n      allFbPages.sort((page, nextPage) => {\n        let nameA = page.name.toLowerCase(),\n            nameB = nextPage.name.toLowerCase(); //sort ascending \n\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0; // default return value (no sorting)\n      });\n      dispatch({\n        type: 'GET_FB_DATA',\n        payload: allFbPages,\n        payload2: res.data.data\n      });\n    }).catch(err => {\n      console.log(\"GetFbData err\", JSON.stringify(err));\n    });\n  };\n};\nexport const getInstaData = () => {\n  return async dispatch => {\n    let token = await localStorage.getItem('authtoken');\n    return axios.get(host + '/api/v1/secure/pagesInsta/get/all/', {\n      headers: {\n        'authorization': 'Bearer ' + token\n      }\n    }).then(res => {\n      // console.log('Instagram pages ya haider =>', res.data.data)\n      let allInstaPages = [];\n      Object.entries(res.data.data).map(([key, tab]) => tab.map(page => {\n        page.status = key;\n        allInstaPages.push(page);\n      }));\n      allInstaPages.sort((page, nextPage) => {\n        let nameA = page.name.toLowerCase(),\n            nameB = nextPage.name.toLowerCase(); //sort ascending \n\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0; // default return value (no sorting)\n      });\n      dispatch({\n        type: 'GET_INSTA_DATA',\n        payload: allInstaPages,\n        payload2: res.data.data\n      });\n    }).catch(err => {\n      console.log(\"getInstaData error\", JSON.stringify(err));\n    });\n  };\n};\nexport const getAllPage = () => {\n  return async dispatch => {\n    let token = await localStorage.getItem('authtoken');\n    dispatch({\n      type: 'RESET_ALL_PAGES'\n    });\n    return axios.get(host + '/api/v1/secure/pages/test/get/all/', {\n      headers: {\n        'authorization': 'Bearer ' + token\n      }\n    }).then(res => {\n      // console.log('Donkey Nour getting all pages :D ===>', res.data.data)\n      let apiResp = res.data.data;\n      let allPages = []; // Push the Fb Data:\n\n      Object.entries(apiResp.facebookPages).map(([key, tab]) => tab.map(page => {\n        page.platform = \"facebook\";\n        page.status = key;\n        allPages.push(page);\n      })); // Push the Insta Data:\n\n      Object.entries(apiResp.instaPages).map(([key, tab]) => tab.map(page => {\n        page.platform = \"instagram\";\n        page.status = key;\n        allPages.push(page);\n      }));\n      allPages.sort((page, nextPage) => {\n        let nameA = page.name.toLowerCase(),\n            nameB = nextPage.name.toLowerCase(); //sort ascending \n\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0; // default return value (no sorting)\n      }); // console.log(\"All Pages for test are Sorted=>\",allPages);\n\n      dispatch({\n        type: 'GET_ALL_PAGES',\n        payload: allPages\n      });\n    }).catch(err => {\n      console.log(\"getAllPage error\", JSON.stringify(err));\n    });\n  };\n};\nexport const getAllPageConnected = () => {\n  return async dispatch => {\n    let token = await localStorage.getItem('authtoken');\n    dispatch({\n      type: 'RESET_ALL_PAGES'\n    });\n    return axios.get(host + '/api/v1/secure/pages/test/connect/get/all/', {\n      headers: {\n        'authorization': 'Bearer ' + token\n      }\n    }).then(res => {\n      // console.log('getAllPageConnected ===>', res.data.data)\n      let apiResp = res.data.data;\n      let allPages = []; // Push the Fb Data:\n\n      Object.entries(apiResp.facebookPages).map(([key, tab]) => tab.map(page => {\n        page.platform = \"facebook\";\n        page.status = key;\n        allPages.push(page);\n      }));\n      Object.entries(apiResp.instaPages).map(([key, tab]) => tab.map(page => {\n        page.platform = \"instagram\";\n        page.status = key;\n        allPages.push(page);\n      }));\n      allPages.sort((page, nextPage) => {\n        let nameA = page.name.toLowerCase(),\n            nameB = nextPage.name.toLowerCase(); //sort ascending \n\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0; // default return value (no sorting)\n      }); // console.log(\"All Pages Connected Pages for test are Sorted =>\",allPages);\n\n      dispatch({\n        type: 'GET_ALL_PAGES',\n        payload: allPages\n      });\n    }).catch(err => {\n      console.log(\"getAllPageConnected error\", JSON.stringify(err));\n    });\n  };\n};\nexport const resetAllPages = () => {\n  return dispatch => dispatch({\n    type: 'RESET_ALL_PAGES'\n  });\n};\nexport const resetDashboard = () => {\n  return dispatch => dispatch({\n    type: 'RESET_DASHBOARD'\n  });\n};\nexport const resetSocialMediaSelections = () => {\n  return dispatch => dispatch({\n    type: 'RESET_SM_SELECTIONS'\n  });\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/socialMediaActions.js"],"names":["axios","host","Swal","popup","mixin","customClass","confirmButton","buttonsStyling","setLang","lang","dispatch","console","log","localStorage","setItem","type","payload","filterPages","filterBy","Pages","filteredPages","filter","page","platform","resetFilterPages","getDashboardPosts","Page","fbHost","get","id","accessToken","headers","getItem","then","res","data","catch","err","getDashboard","allIntents","colors","resLogs","events","map","intent","intentLog","hasOwnProperty","toLowerCase","title","date","created_time","filtredIntents","a","sortedIntents","sort","b","value","intentSorted","i","color","slice","errLogs","setPreferences","history","spam","likes","delay","Platform","exactlySeconds","exactlyMinutes","randomlyFromSeconds","randomlyFromMinutes","randomlyToSeconds","randomlyToMinutes","objectToSend","pagePlatform","platforme","likesComment","respReplies","statut","time","minutes","seconds","finalTime","minutesFrom","secondsFrom","finalTimeFrom","minutesTo","secondsTo","finalTimeTo","put","idPage","push","addPageEntity","getPageEntities","categories","length","cat","index","default","splice","getTeamMembers","sendMailTeam","emailTeamMember","nameTeamMember","inviteToken","post","email","nameUser","token","inviteMember","deleteTeamMember","idFacebook","role","typePage","fire","confirmButtonText","connectInstagramPage","disconnectInstagramPage","deleteInstagramPage","makeOwnerInstagramPage","connectFacebookPage","disconnectFacebookPage","deleteFacebookPage","makeOwnerFacebookPage","purgePages","allPages","sycroPageWithWizard","wizardPage","found","p","selectedPage","name","picture_url","imageUrl","access_token","team","user","admins","status","selectSocialMediaPage","getFbData","allFbPages","Object","entries","key","tab","nextPage","nameA","nameB","payload2","JSON","stringify","getInstaData","allInstaPages","getAllPage","apiResp","facebookPages","instaPages","getAllPageConnected","resetAllPages","resetDashboard","resetSocialMediaSelections"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { host } from '../../config';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\n\r\n// Popup Config: \r\nconst popup = Swal.mixin({\r\n    customClass: {\r\n    confirmButton: 'wizard-pages-active-btn',\r\n    },\r\n    buttonsStyling: false\r\n});\r\n\r\n// Set Language :\r\nexport const setLang = (lang) => {\r\n    return (dispatch) => {\r\n        console.log(\"Lang !\", lang);\r\n        \r\n        localStorage.setItem(\"modoLang\", lang);\r\n\r\n        dispatch({\r\n            type: 'SET_LANG',\r\n            payload: lang,\r\n        });\r\n    };\r\n};\r\n\r\n// Filtring Pages:\r\nexport const filterPages = (filterBy,Pages) => {\r\n    return (dispatch) => {\r\n\r\n        // console.log(\"Filter\", filterBy, \"Those =>\", Pages)\r\n        \r\n        if(filterBy === \"all\") {\r\n            dispatch({\r\n                type: 'FILTER_PAGES',\r\n                payload: [],\r\n            });\r\n        } else {\r\n            let filteredPages = Pages.filter((page) => page.platform === filterBy);\r\n            dispatch({\r\n                type: 'GET_ALL_PAGES',\r\n                payload: filteredPages,\r\n            });\r\n        };\r\n        \r\n    };\r\n};\r\n\r\nexport const resetFilterPages = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: 'RESET_FILTER_PAGES' });\r\n    };\r\n};\r\n\r\n\r\nexport const getDashboardPosts = (Page) => {\r\n    return (dispatch) => {\r\n\r\n        const fbHost = \"https://graph.facebook.com/v8.0\";\r\n\r\n        return axios.get(host + `/api/v1/secure/logEvent/dashbord/post/${Page.id}/${Page.accessToken}/${Page.platform}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('getDashboardPosts', res.data.data);\r\n            \r\n            dispatch({\r\n                type: 'GET_DASHBOARD_POSTS',\r\n                payload: res.data.data,\r\n            });\r\n            \r\n        })\r\n        .catch((err) => console.log(\"err getDashboardPosts\", err))\r\n    };\r\n};\r\n\r\nexport const getDashboard = (Page) => {\r\n    return (dispatch) => {\r\n\r\n        // console.log(\"Getting the dashboard with page =>\", Page.id);\r\n\r\n        return axios.get(host + `/api/v1/secure/logEvent/dashbord/intent/${Page.id}/${Page.platform}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('getDashboard', res.data.data);\r\n            // let limitedTo5 = res.data.data.slice(0,5);\r\n\r\n            let allIntents = res.data.data;\r\n            let colors = ['#009EE3', \"#01096F\", \"#E5007D\", \"#E60A17\", \"#139216\"];\r\n\r\n            // Comparing with the logs :\r\n            axios.get(host + `/api/v1/secure/logEvent/post/${Page.id}/all`,{\r\n                headers: {\r\n                    'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n                }\r\n            })\r\n            .then(resLogs => {\r\n\r\n                if(resLogs.data.data[0].events) {\r\n                    resLogs.data.data[0].events.map(log => {\r\n                        log.intent.map((intentLog) => {\r\n                            if(typeof(intentLog) === \"object\" && intentLog.hasOwnProperty(\"intent\")) {\r\n                                allIntents.map(intent => {\r\n                                    if(intentLog.intent.toLowerCase() === intent.title.toLowerCase()) {\r\n                                        // console.log(\"Comp\",intentLog.intent.toLowerCase(), \"===\", intent.title.toLowerCase() );\r\n                                        // console.log(\"Put ?\",log.created_time);\r\n                                        intent.date = log.created_time;\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n                    });\r\n                    \r\n                    // Filter the intents with dates !\r\n                    let filtredIntents = allIntents.filter((a) => a.date);\r\n\r\n                    // Sort from the highest total to the lowest: \r\n                    let sortedIntents = filtredIntents.sort((a,b) => b.value - a.value);\r\n\r\n                    sortedIntents.map(((intentSorted,i) => {\r\n                        intentSorted.color = colors[i];\r\n                    }))\r\n\r\n                    console.log(\"All Intents sorted\", sortedIntents);\r\n\r\n                    dispatch({\r\n                        type: 'GET_DASHBOARD',\r\n                        payload: sortedIntents.slice(0,5),\r\n                    })\r\n                }\r\n            })\r\n            .catch((errLogs) => {\r\n                console.log(\"Error Get logs on dashboard\", errLogs);\r\n                dispatch({\r\n                    type: 'GET_DASHBOARD',\r\n                    payload: [],\r\n                })\r\n            });\r\n\r\n\r\n            // dispatch({\r\n            //     type: 'GET_DASHBOARD',\r\n            //     payload: limitedTo5,\r\n            // });\r\n        })\r\n        .catch((err) => console.log(\"err getDashboard\", err))\r\n    };\r\n};\r\n\r\nexport const setPreferences = (history,spam,likes,delay,Page,Platform,exactlySeconds,exactlyMinutes,randomlyFromSeconds,randomlyFromMinutes,randomlyToSeconds,randomlyToMinutes) => {\r\n    return (dispatch) => {\r\n        \r\n        let objectToSend = null;\r\n        let pagePlatform = Platform === \"fb\" ? \"facebook\" : \"instagram\";\r\n        if(delay === \"immediatly\") {\r\n            objectToSend = {\r\n                platforme: pagePlatform,\r\n                likesComment:likes,\r\n                spam: spam,\r\n                respReplies: {\r\n                    statut: 'immediatly',\r\n                    time: [0]\r\n                }\r\n            }\r\n\r\n            console.log(\"Immediatly\",objectToSend);\r\n\r\n        } else if(delay === \"Exactly\") {\r\n            // Minutes + Seconds => X ms\r\n            let minutes = exactlyMinutes * 60000;\r\n            let seconds = exactlySeconds * 1000;\r\n            let finalTime = minutes + seconds;\r\n\r\n            objectToSend = {\r\n                platforme: pagePlatform,\r\n                likesComment:likes,\r\n                spam: spam,\r\n                respReplies: {\r\n                    statut: 'Exactly',\r\n                    time: [finalTime],\r\n                }\r\n            }\r\n\r\n            console.log(\"Exactly\",objectToSend);\r\n\r\n        } else {\r\n            // from Minutes + Seconds => X ms\r\n            // to Minutes + Seconds => X ms\r\n            let minutesFrom = randomlyFromMinutes * 60000;\r\n            let secondsFrom = randomlyFromSeconds * 1000;\r\n            let finalTimeFrom = minutesFrom + secondsFrom;\r\n            \r\n            let minutesTo = randomlyToMinutes * 60000;\r\n            let secondsTo = randomlyToSeconds * 1000;\r\n            let finalTimeTo = minutesTo + secondsTo;\r\n\r\n            objectToSend = {\r\n                platforme: pagePlatform,\r\n                likesComment:likes,\r\n                spam: spam,\r\n                respReplies: {\r\n                    statut: 'Randomly',\r\n                    time: [finalTimeFrom,finalTimeTo],\r\n                }\r\n            }\r\n\r\n            console.log(\"Randomly\",objectToSend);\r\n\r\n        }\r\n\r\n\r\n        console.log(\"Preferences sending to nour\", objectToSend);\r\n\r\n        return axios.put(host + `/api/v1/secure/pages/preference/${Page.idPage}/${pagePlatform}`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('setPreferences Response =>', res.data.data);\r\n\r\n            history.push('/pages');\r\n        })\r\n        .catch((err) => console.log(\"setPreferences err\", err))\r\n    }\r\n};\r\n\r\nexport const addPageEntity = (page) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + `/api/v1/secure/pages/entities/add/${page.id}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('add entity', res.data.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err addPageEntity\", err))\r\n    }\r\n};\r\n\r\nexport const getPageEntities = (page) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + `/api/v1/secure/project/get/entitiesproject/${page.platform}/${page.id}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('entities mtaaa page', res.data.data);\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n\r\n\r\n            dispatch({\r\n                type: 'GET_ENTITIES_OF_A_PAGE',\r\n                payload: categories\r\n            })\r\n        })\r\n        .catch((err) => console.log(\"err getPageEntities\", err))\r\n    }\r\n};\r\n\r\n// TEAM:\r\n\r\nexport const getTeamMembers = (Page) => {\r\n    return (dispatch) => {\r\n\r\n        return axios.get(host + `/api/v1/secure/membership/listUser/${Page.id}/${Page.platform}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('membership/listUser/ Response api  => ', res.data.data);\r\n\r\n            dispatch({\r\n                type: 'GET_TEAM',\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch((err) => console.log(\"membership/listUser/ error =>\", err))\r\n    }\r\n};\r\n\r\nexport const sendMailTeam = (Page, emailTeamMember, nameTeamMember, inviteToken) => {\r\n    return (dispatch) => {\r\n    \r\n        // console.log(\"Page\", Page);\r\n        // console.log(\"Email\", emailTeamMember);\r\n        // console.log(\"Name\", nameTeamMember);\r\n\r\n        return axios.post(host + `/api/v1/secure/membership/sendMail/${Page.id}/${Page.platform}`, {\r\n            email: emailTeamMember,\r\n            nameUser: nameTeamMember,\r\n            token: inviteToken,\r\n        },\r\n        {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('membership/sendMail/ Response api  => ', res.data.data)\r\n        })\r\n        .catch((err) => console.log(\"membership/sendMail/ error =>\", err))\r\n    }\r\n};\r\n\r\nexport const inviteMember = (page,nameTeamMember) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + `/api/v1/secure/membership/get/${page.id}/${page.platform}/${nameTeamMember}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        // .then(res => {\r\n        //     console.log('membership/get  inviteMember !! =>', res.data.data);\r\n        \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        // })\r\n        // .catch((err) => console.log(\"err inviteMember\", err))\r\n    }\r\n};\r\n\r\nexport const deleteTeamMember = (page,idFacebook,role) => {\r\n    return (dispatch) => {\r\n       let typePage = page.platform;\r\n       let idPage = page.id;\r\n\r\n        return axios.post(host + `/api/v1/secure/membership/deleteMember/${role}`,{\r\n            idFacebook,\r\n            idPage,\r\n            typePage,\r\n        },{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('/membership/deleteMember/ response api', res.data.data);\r\n\r\n            dispatch({\r\n                type: 'GET_TEAM',\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"/membership/deleteMember/ error api\", err)\r\n            popup.fire({\r\n                title: 'Error while deleting the member',\r\n                confirmButtonText: 'Retry',\r\n            });\r\n        })\r\n    }\r\n};\r\n\r\n\r\n/* INSTAGRAM */\r\nexport const connectInstagramPage = (idPage) => {\r\n    return (dispatch) => {\r\n\r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/connect/`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de connect page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err connect page insta\", err))\r\n    }\r\n};\r\n\r\nexport const disconnectInstagramPage = (idPage) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/disconnect`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err disconnect page instagram\", err))\r\n    };\r\n};\r\n\r\nexport const deleteInstagramPage = (idPage) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/delete`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err disconnect page instagram\", err))\r\n    };\r\n};\r\n\r\nexport const makeOwnerInstagramPage = (idPage,idFacebook) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n            idFacebook: idFacebook // idFacebook of the new owner\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/owner`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de owner page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err owner page instagram\", err))\r\n    };\r\n};\r\n\r\n/* FACEBOOK */\r\nexport const connectFacebookPage = (idPage) => {\r\n    return (dispatch) => {\r\n        \r\n        let page ={\r\n            id: idPage,\r\n        };\r\n\r\n        return axios.post(host + `/api/v1/secure/pages/connect/`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de connect page facebook', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err de connect page facebook\", err))\r\n    }\r\n};\r\n\r\nexport const disconnectFacebookPage = (idPage) => {\r\n    return (dispatch) => {\r\n\r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pages/disconnect/disconnect`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page facebok', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err de disconnect page facebok\", err))\r\n\r\n    };\r\n};\r\n\r\nexport const deleteFacebookPage = (idPage,idFacebook) => {\r\n    return (dispatch) => {\r\n\r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pages/disconnect/delete`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page facebok', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err de disconnect page facebok\", err))\r\n\r\n    };\r\n};\r\n\r\nexport const makeOwnerFacebookPage = (idPage,idFacebook) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n            idFacebook: idFacebook // idFacebook of the new owner\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pages/disconnect/owner`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de owner page facebook', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err owner page facebook\", err))\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const purgePages = (allPages, idPage) => {\r\n    return async (dispatch) => {        \r\n        console.log('idPage', idPage,'purge this =>', allPages ,);\r\n        // allPages.filter(page => page.idPage !== idPage);\r\n    \r\n        dispatch({\r\n            type: 'GET_ALL_PAGES',\r\n            payload: allPages.filter(page => page.idPage !== idPage),\r\n        })\r\n    }\r\n};\r\n\r\nexport const sycroPageWithWizard = (allPages,wizardPage) => {\r\n    return async (dispatch) => {\r\n        \r\n        // console.log('Lets search for', wizardPage);\r\n        // console.log('in', allPages);\r\n\r\n        let found = allPages.filter((p) => p.idPage === wizardPage.id);\r\n        let page = found[0];\r\n        \r\n        // console.log(\"Pagek ahaya =>\", page);\r\n\r\n        const selectedPage = {\r\n            platform: page.platform,\r\n            name: page.name,\r\n            picture_url : page.imageUrl ? page.imageUrl : `https://graph.facebook.com/v8.0/${page.idPage}/picture?access_token=${page.access_token}`,\r\n            id: page.idPage,\r\n            accessToken: page.access_token,\r\n            team: page.user,\r\n            admins: page.admins,\r\n            status: page.status,\r\n        };\r\n        \r\n        // console.log(\"You just sync a page with wizard\", selectedPage)\r\n\r\n        dispatch({\r\n            type: 'SELECT_SOCIAL_MEDIA_PAGE',\r\n            payload: selectedPage\r\n        })\r\n    }\r\n};\r\n\r\nexport const selectSocialMediaPage = (page,platform,status) => {\r\n    return async (dispatch) => {\r\n        /*\r\n            ALL STATUS :\r\n            \"listPageConnectedOwner\" => #E5007D\" || \"listPageInvite\" => #139216\" \r\n            \"listPageInviteAdmin\" => \"#199EE3\"  || \"listPageConnectedOtherTeam\" => #B4B4B4\"\r\n            \"listPageNotConnected\" => \"No Color\"\r\n        */\r\n\r\n        const selectedPage = {\r\n            platform: platform === \"fb\" ? \"facebook\" : \"instagram\",\r\n            name: page.name,\r\n            picture_url : page.imageUrl ? page.imageUrl : `https://graph.facebook.com/v8.0/${page.idPage}/picture?access_token=${page.access_token}`,\r\n            id: page.idPage,\r\n            accessToken: page.access_token,\r\n            team: page.user,\r\n            admins: page.admins,\r\n            status: status,\r\n        };\r\n        \r\n        // console.log(\"u just selected a page\", selectedPage)\r\n\r\n        dispatch({\r\n            type: 'SELECT_SOCIAL_MEDIA_PAGE',\r\n            payload: selectedPage\r\n        })\r\n    }\r\n};\r\n\r\nexport const getFbData = () => {\r\n    return async (dispatch) => {\r\n           \r\n        let token = await localStorage.getItem('authtoken');\r\n\r\n        return axios.get(host + '/api/v1/secure/pages/get/all/', {\r\n            headers: {\r\n                'authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n        .then(res => {\r\n        \r\n            let allFbPages = [];\r\n            Object.entries(res.data.data).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.status = key;\r\n                    allFbPages.push(page);\r\n            }));\r\n\r\n            allFbPages.sort((page,nextPage) =>  {\r\n                let  nameA = page.name.toLowerCase(), nameB = nextPage.name.toLowerCase()\r\n                //sort ascending \r\n                if (nameA < nameB) return -1; \r\n\r\n                if (nameA > nameB) return 1;\r\n                \r\n                return 0; // default return value (no sorting)\r\n            });\r\n\r\n            dispatch({\r\n                type: 'GET_FB_DATA',\r\n                payload: allFbPages,\r\n                payload2: res.data.data,\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"GetFbData err\", JSON.stringify(err))\r\n        })\r\n    }\r\n};\r\n\r\nexport const getInstaData = () => {\r\n    return async (dispatch) => {\r\n\r\n       let token = await localStorage.getItem('authtoken');\r\n        \r\n        return axios.get(host + '/api/v1/secure/pagesInsta/get/all/', {\r\n            headers: {\r\n                'authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('Instagram pages ya haider =>', res.data.data)\r\n            let allInstaPages = [];\r\n            \r\n            Object.entries(res.data.data).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.status = key;\r\n                    allInstaPages.push(page);\r\n                }\r\n            ));\r\n\r\n            allInstaPages.sort((page,nextPage) =>  {                \r\n                let  nameA = page.name.toLowerCase(), nameB = nextPage.name.toLowerCase()\r\n                //sort ascending \r\n                if (nameA < nameB) return -1; \r\n\r\n                if (nameA > nameB) return 1;\r\n                \r\n                return 0; // default return value (no sorting)\r\n            });\r\n            \r\n            dispatch({\r\n                type: 'GET_INSTA_DATA',\r\n                payload: allInstaPages,\r\n                payload2: res.data.data\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"getInstaData error\", JSON.stringify(err))\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport const getAllPage = () => {\r\n    return async (dispatch) => {\r\n\r\n        let token = await localStorage.getItem('authtoken');\r\n\r\n        dispatch({ type: 'RESET_ALL_PAGES' })\r\n        \r\n        return axios.get(host + '/api/v1/secure/pages/test/get/all/', {\r\n            headers: {\r\n                'authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('Donkey Nour getting all pages :D ===>', res.data.data)\r\n\r\n            let apiResp = res.data.data;\r\n            let allPages = [];\r\n\r\n            // Push the Fb Data:\r\n            Object.entries(apiResp.facebookPages).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.platform = \"facebook\"\r\n                    page.status = key;\r\n                    allPages.push(page);\r\n            }));\r\n            \r\n            // Push the Insta Data:\r\n            Object.entries(apiResp.instaPages).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.platform = \"instagram\"\r\n                    page.status = key;\r\n                    allPages.push(page);\r\n            }));\r\n\r\n            allPages.sort((page,nextPage) =>  {                \r\n                let  nameA = page.name.toLowerCase(), nameB = nextPage.name.toLowerCase()\r\n                //sort ascending \r\n                if (nameA < nameB) return -1; \r\n\r\n                if (nameA > nameB) return 1;\r\n                \r\n                return 0; // default return value (no sorting)\r\n            });\r\n            \r\n            // console.log(\"All Pages for test are Sorted=>\",allPages);\r\n\r\n            dispatch({\r\n                type: 'GET_ALL_PAGES',\r\n                payload: allPages,\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"getAllPage error\", JSON.stringify(err))\r\n        });\r\n\r\n    }\r\n};\r\n\r\nexport const getAllPageConnected = () => {\r\n    return async (dispatch) => {\r\n\r\n        let token = await localStorage.getItem('authtoken');\r\n        \r\n        dispatch({ type: 'RESET_ALL_PAGES' })\r\n        \r\n\r\n        return axios.get(host + '/api/v1/secure/pages/test/connect/get/all/', {\r\n            headers: {\r\n                'authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('getAllPageConnected ===>', res.data.data)\r\n\r\n            let apiResp = res.data.data;\r\n            let allPages = [];\r\n\r\n            // Push the Fb Data:\r\n            Object.entries(apiResp.facebookPages).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.platform = \"facebook\"\r\n                    page.status = key;\r\n                    allPages.push(page);\r\n            }));\r\n            \r\n            Object.entries(apiResp.instaPages).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.platform = \"instagram\"\r\n                    page.status = key;\r\n                    allPages.push(page);\r\n            }));\r\n            \r\n            allPages.sort((page,nextPage) =>  {                \r\n                let  nameA = page.name.toLowerCase(), nameB = nextPage.name.toLowerCase()\r\n                //sort ascending \r\n                if (nameA < nameB) return -1; \r\n\r\n                if (nameA > nameB) return 1;\r\n                \r\n                return 0; // default return value (no sorting)\r\n            });\r\n\r\n            // console.log(\"All Pages Connected Pages for test are Sorted =>\",allPages);\r\n\r\n            dispatch({\r\n                type: 'GET_ALL_PAGES',\r\n                payload: allPages,\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"getAllPageConnected error\", JSON.stringify(err))\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport const resetAllPages = () => {\r\n    return (dispatch) => dispatch({ type: 'RESET_ALL_PAGES' });\r\n};\r\n\r\nexport const resetDashboard = () => {\r\n    return (dispatch) => dispatch({ type: 'RESET_DASHBOARD' });\r\n};\r\n\r\nexport const resetSocialMediaSelections = () => {\r\n    return (dispatch) => dispatch({ type: 'RESET_SM_SELECTIONS' });\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}