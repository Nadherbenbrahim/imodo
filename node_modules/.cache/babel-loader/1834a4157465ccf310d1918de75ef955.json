{"ast":null,"code":"import _objectSpread from\"/usr/work/smart_front_oussema/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/usr/work/smart_front_oussema/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"/usr/work/smart_front_oussema/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/usr/work/smart_front_oussema/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import IntentContainerTable from'./IntentContainerTable';import{connect}from'react-redux';import{withRouter}from'react-router-dom';import Loader from'react-loader-spinner';import{emptyToggleIntent as _emptyToggleIntent}from'../actions/index';function IntentContainer(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),intent=_useState2[0],setIntent=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),selectedEntent=_useState4[0],setselectedEntent=_useState4[1];var showententForm=function showententForm(intent){if(selectedEntent.includes(intent))return;setselectedEntent([].concat(_toConsumableArray(selectedEntent),[intent]));};var removeSelectedIntent=function removeSelectedIntent(removedIntent){setselectedEntent(selectedEntent.filter(function(el){return el!=removedIntent;}));};useEffect(function(){props.emptyToggleIntent();manupilateIntentsData();if(props.porject){var projectActiveIntent=props.porject.intents.map(function(el){return el.name;});console.log(projectActiveIntent);setselectedEntent(projectActiveIntent);}},[props.intent]);var manupilateIntentsData=function manupilateIntentsData(){var obj;var newdata={};// let expressions\nfor(var i=0;i<props.intent.length;i++){obj=_defineProperty({},props.intent[i]['intent'],{id:props.intent[i]['id'],// expression: props.intent[i + 1] && props.intent[i]['intent'] === props.intent[i + 1]['intent'] ? [...newdata.data[i]['intent']['expression'], props.intent[i]['expression']] : [...newdata.data[i]['intent']['expression'], props.intent[i]['expression']],\ndate:props.intent[i]['date']});newdata=_objectSpread({},newdata,{},obj);}setIntent(Object.keys(newdata));};return React.createElement(React.Fragment,null,props.porject?React.createElement(\"div\",null,React.createElement(\"div\",{style:{width:\"95%\",border:\"1px solid #B4B4B4\",borderRadius:15,padding:20}},React.createElement(\"h4\",{style:{marginTop:0}},\"Select Intents\"),React.createElement(\"div\",{style:{display:\"flex\",flexWrap:\"wrap\"}},intent.map(function(el){return React.createElement(\"button\",{key:el,className:\"btn\",style:{background:selectedEntent.find(function(Element){return el==Element;})?'rgba(229, 0, 125, 0.15)':'transparent',cursor:'pointer',margin:1},onClick:function onClick(){return showententForm(el);}},el);}))),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"div\",{style:{display:\"flex\",flexWrap:\"wrap\",alignItems:\"flex-start\"}},selectedEntent.map(function(el){return React.createElement(IntentContainerTable,{removeSelectedIntent:removeSelectedIntent,key:Math.random(),selectedEntent:el,intents:props.porject.hasOwnProperty(\"intents\")?props.porject.intents.find(function(Element){return Element.name==el;}):'undefined'});}))):React.createElement(\"div\",{style:{display:'flex',justifyContent:'center'}},React.createElement(Loader,{type:\"Puff\",color:\"#E5007D\",height:100,width:100})));}var mapStateToProps=function mapStateToProps(state,owenProps){var porject=state.allProjects.find(function(el){return el.post.idPost==owenProps.match.params.idpost;});console.log('mapStateToProps ',porject);return{porject:porject};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{emptyToggleIntent:function emptyToggleIntent(){return dispatch(_emptyToggleIntent());}};};export default withRouter(connect(mapStateToProps,mapDispatchToProps)(IntentContainer));","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/components/IntentContainer.js"],"names":["React","useState","useEffect","IntentContainerTable","connect","withRouter","Loader","emptyToggleIntent","IntentContainer","props","intent","setIntent","selectedEntent","setselectedEntent","showententForm","includes","removeSelectedIntent","removedIntent","filter","el","manupilateIntentsData","porject","projectActiveIntent","intents","map","name","console","log","obj","newdata","i","length","id","date","Object","keys","width","border","borderRadius","padding","marginTop","display","flexWrap","background","find","Element","cursor","margin","alignItems","Math","random","hasOwnProperty","justifyContent","mapStateToProps","state","owenProps","allProjects","post","idPost","match","params","idpost","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport IntentContainerTable from './IntentContainerTable'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Loader from 'react-loader-spinner'\r\nimport { emptyToggleIntent } from '../actions/index'\r\nfunction IntentContainer(props) {\r\n    const [intent, setIntent] = useState([])\r\n    const [selectedEntent, setselectedEntent] = useState([])\r\n    const showententForm = (intent) => {\r\n        if (selectedEntent.includes(intent)) return;\r\n        setselectedEntent([...selectedEntent, intent])\r\n    }\r\n\r\n    const removeSelectedIntent = (removedIntent) => {\r\n        setselectedEntent(selectedEntent.filter(el => el != removedIntent))\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.emptyToggleIntent()\r\n        manupilateIntentsData()\r\n        if (props.porject) {\r\n            const projectActiveIntent = props.porject.intents.map(el => el.name)\r\n            console.log(projectActiveIntent)\r\n            setselectedEntent(projectActiveIntent)\r\n        }\r\n    }, [props.intent])\r\n\r\n    const manupilateIntentsData = () => {\r\n        let obj\r\n        let newdata = {}\r\n        // let expressions\r\n        for (let i = 0; i < props.intent.length; i++) {\r\n            obj = {\r\n                [props.intent[i]['intent']]: {\r\n                    id: props.intent[i]['id'],\r\n                    // expression: props.intent[i + 1] && props.intent[i]['intent'] === props.intent[i + 1]['intent'] ? [...newdata.data[i]['intent']['expression'], props.intent[i]['expression']] : [...newdata.data[i]['intent']['expression'], props.intent[i]['expression']],\r\n                    date: props.intent[i]['date']\r\n                }\r\n            }\r\n            newdata = { ...newdata, ...obj }\r\n\r\n        }\r\n        setIntent(Object.keys(newdata))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                props.porject ?\r\n                    <div>\r\n                        <div style={{ width: \"95%\", border: \"1px solid #B4B4B4\", borderRadius: 15, padding: 20 }}>\r\n                            <h4 style={{ marginTop: 0 }}>Select Intents</h4>\r\n                            <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                                {\r\n                                    intent.map(el =>\r\n                                        <button key={el} className=\"btn\" style={{ background: selectedEntent.find(Element => el == Element) ? 'rgba(229, 0, 125, 0.15)' : 'transparent', cursor: 'pointer', margin: 1 }} onClick={() => showententForm(el)}>{el}</button>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <br /><br />\r\n                        <div style={{\r\n                            display: \"flex\",\r\n                            flexWrap: \"wrap\",\r\n                            alignItems: \"flex-start\"\r\n                        }}>\r\n\r\n                            {\r\n                                selectedEntent.map(el => <IntentContainerTable removeSelectedIntent={removeSelectedIntent} key={Math.random()} selectedEntent={el} intents={props.porject.hasOwnProperty(\"intents\") ? props.porject.intents.find(Element => Element.name == el) : 'undefined'} />)\r\n                            }\r\n                        </div>\r\n                    </div> :\r\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                        <Loader\r\n                            type=\"Puff\"\r\n                            color=\"#E5007D\"\r\n                            height={100}\r\n                            width={100}\r\n                        />\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, owenProps) => {\r\n    const porject = state.allProjects.find(el => el.post.idPost == owenProps.match.params.idpost)\r\n    console.log('mapStateToProps ', porject)\r\n    return {\r\n        porject\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        emptyToggleIntent: () => dispatch(emptyToggleIntent())\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(IntentContainer))\r\n"]},"metadata":{},"sourceType":"module"}