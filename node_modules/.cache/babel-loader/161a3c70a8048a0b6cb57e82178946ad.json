{"ast":null,"code":"import axios from 'axios';\nimport { host, trainAgentHost } from '../../config';\nexport const answerComment = (Page, project, comment, answer) => {\n  return dispatch => {\n    // console.log(\"Get from here\", project);\n    let objectToSend = {\n      logs: comment,\n      answer: answer,\n      project: project\n    };\n    console.log(\"im sending answerComment to nour\", objectToSend);\n    return axios.post(host + `/api/v1/secure/logEvent/answer/comment/${Page.platform}`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }) // .then(res => {\n    //     console.log('answerComment post APi Response =>', res.data.data);\n    // })\n    .catch(err => console.log(\"answerComment post Api error  =>\", err));\n  };\n};\nexport const resetLogs = () => {\n  return dispatch => {\n    dispatch({\n      type: 'RESET_LOGS_BY_PAGE'\n    });\n  };\n};\nexport const getLogs = (idPostOrPage, Page) => {\n  return dispatch => {\n    // console.log(\"Get from here\", project);\n    return axios.get(host + `/api/v1/secure/logEvent/post/${idPostOrPage}/all`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('getLogs post APi Response =>', res.data.data);\n      let commentsMatched = [];\n      let commentsNotMatched = [];\n      let allMatchedIntents = [];\n      let allNotMatchedIntents = [];\n\n      if (res.data.data[0].events) {\n        res.data.data[0].events.map(comment => {\n          if (comment.success) {\n            comment.intent.map(intent => allMatchedIntents.push(intent.intent));\n            commentsMatched.push(comment);\n          } else {\n            comment.intent.map(intent => allNotMatchedIntents.push(intent.intent));\n            commentsNotMatched.push(comment);\n          }\n        }); // console.log(\"Matched =>\", commentsMatched)\n        // console.log(\"Not Matched =>\", commentsNotMatched)\n      }\n\n      console.log(\"All Intents Matched\", allMatchedIntents);\n      console.log(\"All Intents NOT Matched\", allNotMatchedIntents);\n      dispatch({\n        type: 'GET_LOGS_BY_PAGE',\n        payload: res.data.data,\n        payload1: commentsMatched,\n        payload2: commentsNotMatched,\n        payload3: allMatchedIntents,\n        payload4: allNotMatchedIntents\n      });\n    }).catch(err => console.log(\"getLogs post Api error  =>\", err));\n  };\n};\nexport const deleteProjectByPage = projet => {\n  return dispatch => {\n    let objectToSend = {\n      project: projet\n    };\n    return axios.put(host + `/api/v1/secure/project/remove/project`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('deleteProjectByPage post APi Response =>', res.data.data);\n      dispatch({\n        type: 'GET_PROJECT_BY_PAGE',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"deleteProjectByPage post Api error  =>\", err));\n  };\n};\nexport const goToWizardConfig = (projet, Page, history) => {\n  return dispatch => {\n    // Detect intent Type \n    let intentDetection = projet.post.idPost === projet.post.page.idPage; // Because in the wizard variable Name is id not idPost :D sorry for that\n\n    projet.post.id = projet.post.idPost;\n    dispatch({\n      type: 'FROM_MY_AGENTS_TO_STEP_3_WIZARD',\n      payload: 2,\n      payload1: projet._id,\n      payload2: intentDetection ? \"generic\" : \"default\",\n      payload3: Page,\n      payload4: intentDetection ? null : projet.post\n    });\n    history.push({\n      pathname: '/home/auto-wizard',\n      state: {\n        imFrom: 'MyAgents'\n      }\n    });\n    dispatch({\n      type: 'SELECT_WIZARD_PAGE',\n      payload: Page\n    });\n  };\n};\nexport const setAgentsSelectedProject = (project, history) => {\n  return dispatch => {\n    dispatch({\n      type: 'SET_AGENTS_PROJECT',\n      payload: project\n    });\n    history.push('/home/my-agents-messages');\n  };\n};\nexport const getProjectByPage = Page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/pages/get/project/${Page.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('getProjectByPage post APi Response =>', res.data.data);\n      dispatch({\n        type: 'GET_PROJECT_BY_PAGE',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"getProjectByPage post Api error  =>\", err));\n  };\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/myAgentsActions.js"],"names":["axios","host","trainAgentHost","answerComment","Page","project","comment","answer","dispatch","objectToSend","logs","console","log","post","platform","headers","localStorage","getItem","catch","err","resetLogs","type","getLogs","idPostOrPage","get","then","res","data","commentsMatched","commentsNotMatched","allMatchedIntents","allNotMatchedIntents","events","map","success","intent","push","payload","payload1","payload2","payload3","payload4","deleteProjectByPage","projet","put","goToWizardConfig","history","intentDetection","idPost","page","idPage","id","_id","pathname","state","imFrom","setAgentsSelectedProject","getProjectByPage"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { host,trainAgentHost } from '../../config';\r\n\r\n\r\n\r\nexport const answerComment = (Page,project,comment,answer) => {\r\n    return (dispatch) => {\r\n        // console.log(\"Get from here\", project);\r\n    \r\n        let objectToSend = {\r\n            logs: comment,\r\n            answer: answer,\r\n            project: project, \r\n        };\r\n\r\n        console.log(\"im sending answerComment to nour\", objectToSend);\r\n\r\n        return axios.post(host + `/api/v1/secure/logEvent/answer/comment/${Page.platform}`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        // .then(res => {\r\n        //     console.log('answerComment post APi Response =>', res.data.data);\r\n        // })\r\n        .catch((err) => console.log(\"answerComment post Api error  =>\", err))\r\n    }\r\n};\r\n\r\n\r\nexport const resetLogs = () => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'RESET_LOGS_BY_PAGE',\r\n        });\r\n    }\r\n};\r\n\r\nexport const getLogs = (idPostOrPage,Page) => {\r\n    return (dispatch) => {\r\n        // console.log(\"Get from here\", project);\r\n\r\n\r\n        return axios.get(host + `/api/v1/secure/logEvent/post/${idPostOrPage}/all`,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('getLogs post APi Response =>', res.data.data);\r\n\r\n            let commentsMatched = [];\r\n            let commentsNotMatched = []; \r\n            let allMatchedIntents = [];\r\n            let allNotMatchedIntents = [];\r\n\r\n            if(res.data.data[0].events) {\r\n                res.data.data[0].events.map(comment => {\r\n                    \r\n                    if(comment.success) {\r\n                        comment.intent.map((intent) => allMatchedIntents.push(intent.intent))\r\n                        commentsMatched.push(comment);\r\n                    } else {\r\n                        comment.intent.map((intent) => allNotMatchedIntents.push(intent.intent));\r\n                        commentsNotMatched.push(comment);\r\n                    }\r\n                });\r\n\r\n                // console.log(\"Matched =>\", commentsMatched)\r\n                // console.log(\"Not Matched =>\", commentsNotMatched)\r\n            }\r\n\r\n            console.log(\"All Intents Matched\", allMatchedIntents);\r\n            console.log(\"All Intents NOT Matched\", allNotMatchedIntents)\r\n\r\n            dispatch({\r\n                type: 'GET_LOGS_BY_PAGE',\r\n                payload: res.data.data,\r\n                payload1: commentsMatched,\r\n                payload2: commentsNotMatched,\r\n                payload3: allMatchedIntents,\r\n                payload4: allNotMatchedIntents,\r\n            });\r\n            \r\n        })\r\n        .catch((err) => console.log(\"getLogs post Api error  =>\", err))\r\n    }\r\n};\r\n\r\nexport const deleteProjectByPage = (projet) => {\r\n    return (dispatch) => {\r\n\r\n        let objectToSend = {\r\n            project: projet,\r\n        };\r\n\r\n        return axios.put(host + `/api/v1/secure/project/remove/project`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('deleteProjectByPage post APi Response =>', res.data.data);\r\n\r\n            dispatch({\r\n                type: 'GET_PROJECT_BY_PAGE',\r\n                payload: res.data.data,\r\n            });\r\n        })\r\n        .catch((err) => console.log(\"deleteProjectByPage post Api error  =>\", err) )\r\n    }\r\n};\r\n\r\nexport const goToWizardConfig = (projet,Page,history) => {\r\n    return (dispatch) => {\r\n        // Detect intent Type \r\n        let intentDetection = projet.post.idPost === projet.post.page.idPage;\r\n\r\n        // Because in the wizard variable Name is id not idPost :D sorry for that\r\n        projet.post.id = projet.post.idPost;\r\n\r\n        dispatch({\r\n            type: 'FROM_MY_AGENTS_TO_STEP_3_WIZARD',\r\n            payload: 2,\r\n            payload1: projet._id,\r\n            payload2: intentDetection ? \"generic\" : \"default\",\r\n            payload3: Page,\r\n            payload4: intentDetection ? null : projet.post,\r\n        });\r\n\r\n        history.push({\r\n            pathname: '/home/auto-wizard',\r\n            state: { imFrom : 'MyAgents' }\r\n        });\r\n\r\n        dispatch({\r\n            type: 'SELECT_WIZARD_PAGE', \r\n            payload: Page,\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const setAgentsSelectedProject = (project,history) => {\r\n    return (dispatch) => {\r\n \r\n        dispatch({\r\n            type: 'SET_AGENTS_PROJECT',\r\n            payload: project,\r\n        });\r\n       \r\n        history.push('/home/my-agents-messages');\r\n    }\r\n};\r\n\r\nexport const getProjectByPage = (Page) => {\r\n    return (dispatch) => {\r\n \r\n        return axios.get(host + `/api/v1/secure/pages/get/project/${Page.id}`,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('getProjectByPage post APi Response =>', res.data.data);\r\n\r\n            dispatch({\r\n                type: 'GET_PROJECT_BY_PAGE',\r\n                payload: res.data.data,\r\n            });\r\n        })\r\n        .catch((err) => console.log(\"getProjectByPage post Api error  =>\", err) )\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}