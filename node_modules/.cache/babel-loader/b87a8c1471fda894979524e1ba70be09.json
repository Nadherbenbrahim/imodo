{"ast":null,"code":"import _objectSpread from\"/usr/work/smart_front_oussema/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";// LOGS === Comments\nvar initialState={agentsProjects:null,agentsSelectedProject:null,agentsProjectLogs:null,agentsCommentsMatched:null,agentsCommentsNotMatched:null};var myAgentsReducer=function myAgentsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'GET_LOGS_BY_PAGE':return _objectSpread(_objectSpread({},state),{},{agentsProjectLogs:action.payload,agentsCommentsMatched:action.payload1,agentsCommentsNotMatched:action.payload2});case'SET_AGENTS_PROJECT':return _objectSpread(_objectSpread({},state),{},{agentsSelectedProject:action.payload});case'GET_PROJECT_BY_PAGE':return _objectSpread(_objectSpread({},state),{},{agentsProjects:action.payload});default:return state;}};export default myAgentsReducer;","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/reducers/myAgentsReducer.js"],"names":["initialState","agentsProjects","agentsSelectedProject","agentsProjectLogs","agentsCommentsMatched","agentsCommentsNotMatched","myAgentsReducer","state","action","type","payload","payload1","payload2"],"mappings":"mJAAA;AAEA,GAAMA,CAAAA,YAAY,CAAG,CACjBC,cAAc,CAAE,IADC,CAEjBC,qBAAqB,CAAE,IAFN,CAGjBC,iBAAiB,CAAE,IAHF,CAIjBC,qBAAqB,CAAE,IAJN,CAKjBC,wBAAwB,CAAE,IALT,CAArB,CAQA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBP,YAAyB,IAAXQ,CAAAA,MAAW,2CAEtD,OAAQA,MAAM,CAACC,IAAf,EAEI,IAAK,kBAAL,CACI,sCACOF,KADP,MAEIJ,iBAAiB,CAAEK,MAAM,CAACE,OAF9B,CAGIN,qBAAqB,CAAEI,MAAM,CAACG,QAHlC,CAIIN,wBAAwB,CAAEG,MAAM,CAACI,QAJrC,GAOJ,IAAK,oBAAL,CACI,sCACOL,KADP,MAEIL,qBAAqB,CAAEM,MAAM,CAACE,OAFlC,GAKJ,IAAK,qBAAL,CACI,sCACOH,KADP,MAEIN,cAAc,CAAEO,MAAM,CAACE,OAF3B,GAKJ,QACI,MAAOH,CAAAA,KAAP,CAvBR,CAyBH,CA3BD,CA6BA,cAAeD,CAAAA,eAAf","sourcesContent":["// LOGS === Comments\r\n\r\nconst initialState = {\r\n    agentsProjects: null,\r\n    agentsSelectedProject: null,\r\n    agentsProjectLogs: null,\r\n    agentsCommentsMatched: null,\r\n    agentsCommentsNotMatched: null\r\n}\r\n\r\nconst myAgentsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n      \r\n        case 'GET_LOGS_BY_PAGE' :\r\n            return {\r\n                ...state,\r\n                agentsProjectLogs: action.payload,\r\n                agentsCommentsMatched: action.payload1,\r\n                agentsCommentsNotMatched: action.payload2,\r\n            }\r\n\r\n        case 'SET_AGENTS_PROJECT' :\r\n            return {\r\n                ...state,\r\n                agentsSelectedProject: action.payload,\r\n            }\r\n\r\n        case 'GET_PROJECT_BY_PAGE' :\r\n            return {\r\n                ...state,\r\n                agentsProjects: action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default myAgentsReducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}