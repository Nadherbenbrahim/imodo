{"ast":null,"code":"import axios from 'axios';\nimport { host } from '../../config';\nexport const addProject = post => {\n  return dispatch => {\n    return axios.post(host + `/api/v1/secure/project/add`, post, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('project added', res.data); // dispatch({\n      //     type: 'ADD_PROJECT',\n      //     payload: res.data\n      // })\n    }).catch(err => {\n      console.log(\"addProject action\", err);\n    });\n  };\n};\nexport const getAllIntents = intentType => {\n  return dispatch => {\n    return axios.get(host + (intentType === \"generic\" ? `/api/v1/intent/generiqueintent/all` : `/api/v1/intent/defaulintent/all`), {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(`get ${intentType} intents`, res.data); // dispatch({\n      //     type: 'GET_ALL_WIZARD_INTENTS',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"Get all intents action\", err));\n  };\n};\nexport const getConnectedPagesProject = () => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/project/get/user`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      // console.log('all projects for this user', res.data.data)\n      dispatch({\n        type: 'GET_WIZARD_ACTIVE_PAGE_POSTS',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"err \", err));\n  };\n};\nexport const getWizardPagesPosts = wizardPage => {\n  return dispatch => {\n    if (wizardPage.id !== null && wizardPage.id !== undefined) {\n      return axios.get(host + `/api/v1/secure/post/get/${wizardPage.id}/all`, {\n        headers: {\n          'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n        }\n      }).then(res => {\n        // console.log(\"posts\",res.data.data);\n        dispatch({\n          type: 'GET_WIZARD_PAGE_POSTS',\n          payload: res.data.data\n        });\n      }).catch(err => console.log(\"getWizardPagesPosts \", err));\n    }\n  };\n};\nexport const setWizardSelectedPost = post => {\n  return async dispatch => {\n    // const selectedPage = {\n    //     platform: platform,\n    //     name: pageName,\n    //     picture_url : picture !== null ? picture : `https://graph.facebook.com/v8.0/${idPage}/picture?access_token=${accessToken}`,\n    //     id: idPage,\n    //     accessToken: accessToken,\n    // };\n    dispatch({\n      type: 'SELECT_WIZARD_POST',\n      payload: post\n    });\n  };\n};\nexport const setWizardIntentType = intentType => {\n  return async dispatch => {\n    dispatch({\n      type: 'SELECT_WIZARD_INTENT_TYPE',\n      payload: intentType\n    });\n  };\n};\nexport const nextSpecificWizardStep = step => {\n  return async dispatch => {\n    dispatch({\n      type: 'NEXT_SPECIFIC_WIZARD_STEP',\n      payload: step\n    });\n  };\n};\nexport const nextWizardStep = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'NEXT_WIZARD_STEP'\n    });\n  };\n};\nexport const prevWizardStep = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'PREV_WIZARD_STEP'\n    });\n  };\n};\nexport const resetWizardStep = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'RESET_WIZARD_STEP'\n    });\n  };\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/wizardActions.js"],"names":["axios","host","addProject","post","dispatch","headers","localStorage","getItem","then","res","console","log","data","catch","err","getAllIntents","intentType","get","getConnectedPagesProject","type","payload","getWizardPagesPosts","wizardPage","id","undefined","setWizardSelectedPost","setWizardIntentType","nextSpecificWizardStep","step","nextWizardStep","prevWizardStep","resetWizardStep"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { host } from '../../config';\r\n\r\n\r\n\r\nexport const addProject = (post) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.post(host + `/api/v1/secure/project/add`,post, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('project added', res.data);\r\n\r\n            // dispatch({\r\n            //     type: 'ADD_PROJECT',\r\n            //     payload: res.data\r\n            // })\r\n        }).catch(err => {\r\n            console.log(\"addProject action\", err);\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport const getAllIntents = (intentType) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + (intentType === \"generic\" ? `/api/v1/intent/generiqueintent/all` : `/api/v1/intent/defaulintent/all`), {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n            .then(res => {\r\n                console.log(`get ${intentType} intents`, res.data);\r\n                // dispatch({\r\n                //     type: 'GET_ALL_WIZARD_INTENTS',\r\n                //     payload: res.data.data\r\n                // })\r\n               \r\n            }).catch((err) => console.log(\"Get all intents action\", err))\r\n    }\r\n};\r\n\r\nexport const getConnectedPagesProject = () => {\r\n    return (dispatch) => {\r\n        return axios.get(host + `/api/v1/secure/project/get/user`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('all projects for this user', res.data.data)\r\n            \r\n            dispatch({\r\n                type: 'GET_WIZARD_ACTIVE_PAGE_POSTS',\r\n                payload: res.data.data\r\n            })\r\n        }).catch((err) => console.log(\"err \", err))\r\n    }\r\n};\r\n\r\nexport const getWizardPagesPosts = (wizardPage) => {\r\n    return (dispatch) => {\r\n\r\n        if(wizardPage.id !== null && wizardPage.id !== undefined) {\r\n            return axios.get(host + `/api/v1/secure/post/get/${wizardPage.id}/all`, {\r\n                headers: {\r\n                    'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n                }\r\n            })\r\n            .then(res => {\r\n\r\n                // console.log(\"posts\",res.data.data);\r\n\r\n                dispatch({\r\n                    type: 'GET_WIZARD_PAGE_POSTS',\r\n                    payload: res.data.data\r\n                })\r\n            }).catch((err) => console.log(\"getWizardPagesPosts \", err))\r\n        }\r\n    }\r\n};\r\n\r\nexport const setWizardSelectedPost = (post) => {\r\n    return async (dispatch) => {\r\n\r\n        // const selectedPage = {\r\n        //     platform: platform,\r\n        //     name: pageName,\r\n        //     picture_url : picture !== null ? picture : `https://graph.facebook.com/v8.0/${idPage}/picture?access_token=${accessToken}`,\r\n        //     id: idPage,\r\n        //     accessToken: accessToken,\r\n        // };\r\n\r\n        dispatch({\r\n            type: 'SELECT_WIZARD_POST', \r\n            payload: post,\r\n        });\r\n    }\r\n};\r\n\r\nexport const setWizardIntentType = (intentType) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch({\r\n            type: 'SELECT_WIZARD_INTENT_TYPE', \r\n            payload: intentType,\r\n        });\r\n    }\r\n};\r\n\r\nexport const nextSpecificWizardStep = (step) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'NEXT_SPECIFIC_WIZARD_STEP', payload: step});\r\n    }\r\n};\r\n\r\n\r\nexport const nextWizardStep = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'NEXT_WIZARD_STEP' });\r\n    }\r\n};\r\n\r\nexport const prevWizardStep = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'PREV_WIZARD_STEP' });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const resetWizardStep = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'RESET_WIZARD_STEP' });\r\n    }\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}