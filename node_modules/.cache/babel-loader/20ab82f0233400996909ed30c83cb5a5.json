{"ast":null,"code":"import axios from 'axios';\nimport { host, trainAgentHost } from '../../config';\nexport const answerComment = (Page, project, comment, answer) => {\n  return dispatch => {\n    // console.log(\"Get from here\", project);\n    let objectToSend = {\n      logs: comment,\n      answer: answer,\n      project: project\n    };\n    console.log(\"im sending answerComment to nour\", objectToSend);\n    return axios.post(host + `/api/v1/secure/logEvent/answer/comment/${Page.platform}`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }) // .then(res => {\n    //     console.log('answerComment post APi Response =>', res.data.data);\n    // })\n    .catch(err => console.log(\"answerComment post Api error  =>\", err));\n  };\n};\nexport const resetLogs = () => {\n  return dispatch => {\n    dispatch({\n      type: 'RESET_LOGS_BY_PAGE'\n    });\n  };\n};\nexport const getLogs = (idPostOrPage, Page) => {\n  return dispatch => {\n    // console.log(\"Get from here\", project);\n    return axios.get(host + `/api/v1/secure/logEvent/post/${idPostOrPage}/all`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('getLogs post APi Response =>', res.data.data);\n      let commentsMatched = [];\n      let commentsNotMatched = [];\n\n      if (res.data.data[0].events) {\n        console.log(\"Seeing Events ....\");\n        res.data.data[0].events.map(comment => {\n          if (comment.success) {\n            commentsMatched.push(comment);\n          } else {\n            commentsNotMatched.push(comment);\n          }\n        });\n        console.log(\"Matched =>\", commentsMatched);\n        console.log(\"Not Matched =>\", commentsNotMatched);\n      }\n\n      dispatch({\n        type: 'GET_LOGS_BY_PAGE',\n        payload: res.data.data,\n        payload1: commentsMatched,\n        payload2: commentsNotMatched\n      });\n    }).catch(err => console.log(\"getLogs post Api error  =>\", err));\n  };\n};\nexport const deleteProjectByPage = projet => {\n  return dispatch => {\n    let objectToSend = {\n      project: projet\n    };\n    return axios.put(host + `/api/v1/secure/project/remove/project`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('deleteProjectByPage post APi Response =>', res.data.data);\n      dispatch({\n        type: 'GET_PROJECT_BY_PAGE',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"deleteProjectByPage post Api error  =>\", err));\n  };\n};\nexport const goToWizardConfig = (projet, Page, history) => {\n  return dispatch => {\n    // Detect intent Type \n    let intentDetection = projet.post.idPost === projet.post.page.idPage; // Because in the wizard variable Name is id not idPost :D sorry for that\n\n    projet.post.id = projet.post.idPost;\n    dispatch({\n      type: 'FROM_MY_AGENTS_TO_STEP_3_WIZARD',\n      payload: 2,\n      payload1: projet._id,\n      payload2: intentDetection ? \"generic\" : \"default\",\n      payload3: Page,\n      payload4: intentDetection ? null : projet.post\n    }); // history.push('/home/auto-wizard');\n\n    history.push({\n      pathname: '/home/auto-wizard',\n      state: {\n        imFrom: 'MyAgents'\n      }\n    });\n    dispatch({\n      type: 'SELECT_WIZARD_PAGE',\n      payload: Page\n    });\n  };\n};\nexport const setAgentsSelectedProject = (project, history) => {\n  return dispatch => {\n    dispatch({\n      type: 'SET_AGENTS_PROJECT',\n      payload: project\n    });\n    history.push('/home/my-agents-messages');\n  };\n};\nexport const getProjectByPage = Page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/pages/get/project/${Page.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('getProjectByPage post APi Response =>', res.data.data);\n      dispatch({\n        type: 'GET_PROJECT_BY_PAGE',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"getProjectByPage post Api error  =>\", err));\n  };\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/myAgentsActions.js"],"names":["axios","host","trainAgentHost","answerComment","Page","project","comment","answer","dispatch","objectToSend","logs","console","log","post","platform","headers","localStorage","getItem","catch","err","resetLogs","type","getLogs","idPostOrPage","get","then","res","data","commentsMatched","commentsNotMatched","events","map","success","push","payload","payload1","payload2","deleteProjectByPage","projet","put","goToWizardConfig","history","intentDetection","idPost","page","idPage","id","_id","payload3","payload4","pathname","state","imFrom","setAgentsSelectedProject","getProjectByPage"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { host,trainAgentHost } from '../../config';\r\n\r\n\r\n\r\nexport const answerComment = (Page,project,comment,answer) => {\r\n    return (dispatch) => {\r\n        // console.log(\"Get from here\", project);\r\n    \r\n        let objectToSend = {\r\n            logs: comment,\r\n            answer: answer,\r\n            project: project, \r\n        };\r\n\r\n        console.log(\"im sending answerComment to nour\", objectToSend);\r\n\r\n        return axios.post(host + `/api/v1/secure/logEvent/answer/comment/${Page.platform}`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        // .then(res => {\r\n        //     console.log('answerComment post APi Response =>', res.data.data);\r\n        // })\r\n        .catch((err) => console.log(\"answerComment post Api error  =>\", err))\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const resetLogs = () => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'RESET_LOGS_BY_PAGE',\r\n        });\r\n    }\r\n}\r\nexport const getLogs = (idPostOrPage,Page) => {\r\n    return (dispatch) => {\r\n        // console.log(\"Get from here\", project);\r\n\r\n\r\n        return axios.get(host + `/api/v1/secure/logEvent/post/${idPostOrPage}/all`,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('getLogs post APi Response =>', res.data.data);\r\n\r\n            let commentsMatched = [];\r\n            let commentsNotMatched = []; \r\n\r\n            if(res.data.data[0].events) {\r\n                console.log(\"Seeing Events ....\");\r\n                res.data.data[0].events.map(comment => {\r\n                    if(comment.success) {\r\n                        commentsMatched.push(comment);\r\n                    } else {\r\n                        commentsNotMatched.push(comment);\r\n                    }\r\n                });\r\n\r\n                console.log(\"Matched =>\", commentsMatched)\r\n                console.log(\"Not Matched =>\", commentsNotMatched)\r\n            }\r\n\r\n            dispatch({\r\n                type: 'GET_LOGS_BY_PAGE',\r\n                payload: res.data.data,\r\n                payload1: commentsMatched,\r\n                payload2: commentsNotMatched,\r\n            });\r\n            \r\n        })\r\n        .catch((err) => console.log(\"getLogs post Api error  =>\", err))\r\n    }\r\n};\r\n\r\nexport const deleteProjectByPage = (projet) => {\r\n    return (dispatch) => {\r\n\r\n        let objectToSend = {\r\n            project: projet,\r\n        };\r\n\r\n        return axios.put(host + `/api/v1/secure/project/remove/project`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('deleteProjectByPage post APi Response =>', res.data.data);\r\n\r\n            dispatch({\r\n                type: 'GET_PROJECT_BY_PAGE',\r\n                payload: res.data.data,\r\n            });\r\n        })\r\n        .catch((err) => console.log(\"deleteProjectByPage post Api error  =>\", err) )\r\n    }\r\n};\r\n\r\nexport const goToWizardConfig = (projet,Page,history) => {\r\n    return (dispatch) => {\r\n        // Detect intent Type \r\n        let intentDetection = projet.post.idPost === projet.post.page.idPage;\r\n\r\n        // Because in the wizard variable Name is id not idPost :D sorry for that\r\n        projet.post.id = projet.post.idPost;\r\n\r\n        dispatch({\r\n            type: 'FROM_MY_AGENTS_TO_STEP_3_WIZARD',\r\n            payload: 2,\r\n            payload1: projet._id,\r\n            payload2: intentDetection ? \"generic\" : \"default\",\r\n            payload3: Page,\r\n            payload4: intentDetection ? null : projet.post,\r\n        });\r\n\r\n        // history.push('/home/auto-wizard');\r\n\r\n        history.push({\r\n            pathname: '/home/auto-wizard',\r\n            state: { imFrom : 'MyAgents' }\r\n        });\r\n\r\n        dispatch({\r\n            type: 'SELECT_WIZARD_PAGE', \r\n            payload: Page,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const setAgentsSelectedProject = (project,history) => {\r\n    return (dispatch) => {\r\n \r\n        dispatch({\r\n            type: 'SET_AGENTS_PROJECT',\r\n            payload: project,\r\n        });\r\n       \r\n        history.push('/home/my-agents-messages');\r\n    }\r\n};\r\n\r\nexport const getProjectByPage = (Page) => {\r\n    return (dispatch) => {\r\n \r\n        return axios.get(host + `/api/v1/secure/pages/get/project/${Page.id}`,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('getProjectByPage post APi Response =>', res.data.data);\r\n\r\n            dispatch({\r\n                type: 'GET_PROJECT_BY_PAGE',\r\n                payload: res.data.data,\r\n            });\r\n        })\r\n        .catch((err) => console.log(\"getProjectByPage post Api error  =>\", err) )\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}