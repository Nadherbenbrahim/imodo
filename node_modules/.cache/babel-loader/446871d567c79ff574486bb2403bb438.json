{"ast":null,"code":"import _toConsumableArray from\"/usr/work/smart_front_oussema/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/usr/work/smart_front_oussema/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from'react';import axios from'axios';import{connect}from'react-redux';import{addGenericResponse,updateGenericResponse}from'../../../redux/actions/wizardActions';import{host}from'../../../config';import{Row,Col,Popover,Overlay,Modal,Image,Form,Spinner}from'react-bootstrap';import WizardMiracleInput from'./WizardMiracleInput';import ReactTooltip from'react-tooltip';import Swal from'sweetalert2/dist/sweetalert2.js';import{FaTrashAlt}from'react-icons/fa';import{IoIosArrowDown,IoIosClose}from'react-icons/io';import{AiOutlineCloseCircle}from'react-icons/ai';import{MdAddCircleOutline}from'react-icons/md';function WizardIntentDetails(props){// All Props from WizardConfig : \nvar indexOfIntent=props.indexOfIntent,intent=props.intent,setIntents=props.setIntents,selectedIntents=props.selectedIntents,wizardExistingProjectIntents=props.wizardExistingProjectIntents,intentStatus=props.intentStatus;// Popup Config:\nvar swalWithBootstrapButtons=Swal.mixin({customClass:{confirmButton:'wizard-pages-active-btn-alert'},buttonsStyling:false});// Generic:\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),GenericResponse=_useState2[0],setGenericResponse=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),GenericTags=_useState4[0],setGenericTags=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),GenericEmojis=_useState6[0],setGenericEmojis=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),GenericKeyboard=_useState8[0],setGenericKeyboard=_useState8[1];var _useState9=useState('web_url'),_useState10=_slicedToArray(_useState9,2),GenericBtnType=_useState10[0],setGenericBtnType=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),GenericBtnTitle=_useState12[0],setGenericBtnTitle=_useState12[1];var _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),GenericBtnValue=_useState14[0],setGenericBtnValue=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),GenericBtns=_useState16[0],setGenericBtns=_useState16[1];var resetGeneric=function resetGeneric(){setGenericResponse('');setGenericTags(false);setGenericEmojis(false);setGenericKeyboard(false);setGenericBtnType('web_url');setGenericBtnTitle('');setGenericBtnValue('');setGenericBtns([]);};var handleSaveGenericResponse=function handleSaveGenericResponse(intent,wizardIdProject){var project={genericAnswer:GenericResponse,intent:intent,buttons:GenericBtns};if(GenericResponse===\"\"){swalWithBootstrapButtons.fire({title:'Generic Response is empty !',confirmButtonText:'Okay'});}else if(intentState==='save'&&GenericResponse!==''){setSaveUpdateLoading(true);props.addGenericResponse(project,wizardIdProject).then(function(){setIntentState('update');setSaveUpdateLoading(false);}).catch(function(){setSaveUpdateLoading(false);swalWithBootstrapButtons.fire({title:'Error while saving the generic response. Try Again !',confirmButtonText:'Okay'});});}else if(intentState==='update'&&GenericResponse!==''){setSaveUpdateLoading(true);props.updateGenericResponse(project,wizardIdProject).then(function(){setSaveUpdateLoading(false);}).catch(function(){setSaveUpdateLoading(false);swalWithBootstrapButtons.fire({title:'Error while updating the generic response. Try Again !',confirmButtonText:'Okay'});});}};// Specific:\nvar _useState17=useState(''),_useState18=_slicedToArray(_useState17,2),SpecificResponse=_useState18[0],SetSpecificResponse=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),SpecificKeyBoard=_useState20[0],setSpecificKeyBoard=_useState20[1];var _useState21=useState(false),_useState22=_slicedToArray(_useState21,2),SpecificEmoji=_useState22[0],setSpecificEmoji=_useState22[1];var _useState23=useState(false),_useState24=_slicedToArray(_useState23,2),SpecificTags=_useState24[0],setSpecificTags=_useState24[1];var _useState25=useState('web_url'),_useState26=_slicedToArray(_useState25,2),SpecificBtnType=_useState26[0],setSpecificType=_useState26[1];var _useState27=useState(''),_useState28=_slicedToArray(_useState27,2),SpecificBtnTitle=_useState28[0],setSpecificTitle=_useState28[1];var _useState29=useState(''),_useState30=_slicedToArray(_useState29,2),SpecificBtnValue=_useState30[0],setSpecificValue=_useState30[1];var _useState31=useState([]),_useState32=_slicedToArray(_useState31,2),SpecificBtns=_useState32[0],setSpecificBtns=_useState32[1];var _useState33=useState(false),_useState34=_slicedToArray(_useState33,2),SpecificPopover=_useState34[0],setSpecificPopover=_useState34[1];var _useState35=useState(null),_useState36=_slicedToArray(_useState35,2),SpecificTarget=_useState36[0],setSpecificTarget=_useState36[1];var SpecificRef=useRef(null);var resetSpecific=function resetSpecific(){setProductName('');SetSpecificResponse('');setSpecificTags(false);setSpecificEmoji(false);setSpecificKeyBoard(false);setSpecificType('web_url');setSpecificTitle('');setSpecificValue('');setSpecificBtns([]);};var handleSpecificPopover=function handleSpecificPopover(event){setSpecificPopover(!SpecificPopover);setSpecificTarget(event.target);};// Specific Update:\nvar _useState37=useState(''),_useState38=_slicedToArray(_useState37,2),SpecificUpdateResponse=_useState38[0],SetSpecificUpdateResponse=_useState38[1];var _useState39=useState(false),_useState40=_slicedToArray(_useState39,2),SpecificUpdateKeyBoard=_useState40[0],setSpecificUpdateKeyBoard=_useState40[1];var _useState41=useState(false),_useState42=_slicedToArray(_useState41,2),SpecificUpdateEmoji=_useState42[0],setSpecificUpdateEmoji=_useState42[1];var _useState43=useState(false),_useState44=_slicedToArray(_useState43,2),SpecificUpdateTags=_useState44[0],setSpecificUpdateTags=_useState44[1];var _useState45=useState('web_url'),_useState46=_slicedToArray(_useState45,2),SpecificUpdateBtnType=_useState46[0],setSpecificUpdateType=_useState46[1];var _useState47=useState(''),_useState48=_slicedToArray(_useState47,2),SpecificUpdateBtnTitle=_useState48[0],setSpecificUpdateTitle=_useState48[1];var _useState49=useState(''),_useState50=_slicedToArray(_useState49,2),SpecificUpdateBtnValue=_useState50[0],setSpecificUpdateValue=_useState50[1];var _useState51=useState([]),_useState52=_slicedToArray(_useState51,2),SpecificUpdateBtns=_useState52[0],setSpecificUpdateBtns=_useState52[1];var _useState53=useState(false),_useState54=_slicedToArray(_useState53,2),SpecificUpdatePopover=_useState54[0],setSpecificUpdatePopover=_useState54[1];var _useState55=useState(null),_useState56=_slicedToArray(_useState55,2),SpecificUpdateTarget=_useState56[0],setSpecificUpdateTarget=_useState56[1];var SpecificUpdateRef=useRef(null);var resetUpdateSpecific=function resetUpdateSpecific(){setSpecificUpdatePopover(false);setSpecificUpdateTarget(null);SetSpecificUpdateResponse('');setSpecificUpdateKeyBoard(false);setSpecificUpdateEmoji(false);setSpecificUpdateTags(false);setSpecificUpdateType('web_url');setSpecificUpdateTitle('');setSpecificUpdateValue('');setSpecificUpdateBtns([]);};var handleSpecificUpdatePopover=function handleSpecificUpdatePopover(event,product){// console.log(\"Product to update =>\", product);\nsetProductUpdateName(product.product);SetSpecificUpdateResponse(product.preAnswer);setSpecificUpdateBtns(product.buttons);setSpecificUpdatePopover(!SpecificUpdatePopover);setSpecificUpdateTarget(event.target);};// Products\nvar _useState57=useState(''),_useState58=_slicedToArray(_useState57,2),productName=_useState58[0],setProductName=_useState58[1];var _useState59=useState(''),_useState60=_slicedToArray(_useState59,2),productUpdateName=_useState60[0],setProductUpdateName=_useState60[1];var _useState61=useState(''),_useState62=_slicedToArray(_useState61,2),savedProductToSend=_useState62[0],setSavedProductToSend=_useState62[1];var _useState63=useState([]),_useState64=_slicedToArray(_useState63,2),products=_useState64[0],setProducts=_useState64[1];// Categories\nvar _useState65=useState(''),_useState66=_slicedToArray(_useState65,2),newCategory=_useState66[0],setNewCategory=_useState66[1];var _useState67=useState(''),_useState68=_slicedToArray(_useState67,2),categorySelected=_useState68[0],setCategorySelected=_useState68[1];var _useState69=useState([]),_useState70=_slicedToArray(_useState69,2),allCategories=_useState70[0],setAllCategories=_useState70[1];var _useState71=useState(false),_useState72=_slicedToArray(_useState71,2),CategorieModal=_useState72[0],setCategorieModal=_useState72[1];var _useState73=useState(false),_useState74=_slicedToArray(_useState73,2),showModalInput=_useState74[0],setShowModalInput=_useState74[1];var handleCategoriesModal=function handleCategoriesModal(){setSpecificPopover(false);setCategorieModal(!CategorieModal);};// other:\nvar _useState75=useState(false),_useState76=_slicedToArray(_useState75,2),saveUpdateLoading=_useState76[0],setSaveUpdateLoading=_useState76[1];var _useState77=useState('save'),_useState78=_slicedToArray(_useState77,2),intentState=_useState78[0],setIntentState=_useState78[1];// Categories & Products functions :\nvar addNewProduct=function addNewProduct(idProjet){// First update api : entity === categorie :\nvar productToSend={idPage:props.wizardSelectedPage.id,typePage:props.wizardSelectedPage.platform,entity:productName,intent:props.intent.name,genericAnswer:GenericResponse,specificAnswer:SpecificResponse,categorie:productName,buttons:SpecificBtns};axios.put(\"\".concat(host,\"/api/v1/secure/project/firstupdate/\").concat(idProjet),productToSend,{headers:{'authorization':'Bearer '+localStorage.getItem('authtoken')}}).then(function(res){console.log('first update response =>',res.data.data);if(res.data.data===\"not exist\"){// Call the categories api :\naxios.get(\"\".concat(host,\"/api/v1/secure/project/get/entitiesproject/\").concat(props.wizardSelectedPage.platform,\"/\").concat(props.wizardSelectedPage.id)).then(function(res){console.log(\"get categories for modal /get/entitiesproject =>\",res.data.data);// Eliminate default categories:\nvar categories=res.data.data;if(categories.length>0){categories.map(function(cat,index){return cat.default===true&&categories.splice(index,1);});// console.log(\"Result after filtring the cats\", categories);\n};setAllCategories(categories);setSpecificPopover(!SpecificPopover);setSavedProductToSend(productToSend);setCategorieModal(true);// ==> Update the products array from addNewProductViaModal() <==\n}).catch(function(err){return console.log(\"addNewProduct WizardIntentDetails =>\",err);});}else if(res.data.data===\"exist\"){swalWithBootstrapButtons.fire({title:'Product already exists !',confirmButtonText:'Okay'});}else{// Update the products array :\nvar newSelectedIntents=_toConsumableArray(selectedIntents);newSelectedIntents.map(function(intent,index){if(index===props.indexOfIntent){// intent.products = res.data.data.intents[indexOfIntent].answer\nsetProducts([]);setProducts(res.data.data.intents[indexOfIntent].answer);};});setIntents(newSelectedIntents);// Reset\nresetSpecific();};}).catch(function(err){return console.log(\"Wizard Intent Detail addNewProduct fct first Update API err ===>\",err);});};var addNewProductViaModal=function addNewProductViaModal(idProjet){// Send the update with the new category name :) :\nvar productToSend=savedProductToSend;productToSend.categorie=categorySelected;// console.log(\"sendinnng product =>\",productToSend);\n// console.log(\"Category Selected To sennnnd\", categorySelected,\" and product =>>>\", productToSend);\nreturn axios.put(host+\"/api/v1/secure/project/update/\".concat(idProjet),productToSend,{headers:{'authorization':'Bearer '+localStorage.getItem('authtoken')}}).then(function(res){console.log('UPDATE API response =>',res.data);// set the products from the update api :\nvar newSelectedIntents=_toConsumableArray(selectedIntents);newSelectedIntents.map(function(_,index){if(index===props.indexOfIntent){//intent.products = res.data.data.intents[indexOfIntent].answer\nsetProducts([]);setProducts(res.data.data.intents[indexOfIntent].answer);};});setIntents(newSelectedIntents);// Reset\nresetSpecific();setCategorySelected('');setCategorieModal(false);}).catch(function(err){return console.log(\"addNewProductViaModal => api update err =>> \",err);});};var updateProduct=function updateProduct(idProjet){var productToSend={idPage:props.wizardSelectedPage.id,typePage:props.wizardSelectedPage.platform,entity:productUpdateName,intent:props.intent.name,genericAnswer:GenericResponse,specificAnswer:SpecificUpdateResponse,buttons:SpecificUpdateBtns// categorie: productUpdateName,\n};axios.put(host+\"/api/v1/secure/project/entitiesupdate/\".concat(props.wizardIdProject),productToSend,{headers:{'authorization':'Bearer '+localStorage.getItem('authtoken')}}).then(function(res){console.log('updateProduct API response =>',res.data);// set the products from the update api :\nvar newSelectedIntents=_toConsumableArray(selectedIntents);newSelectedIntents.map(function(_,index){if(index===props.indexOfIntent){//intent.products = res.data.data.intents[indexOfIntent].answer\nsetProducts([]);setProducts(res.data.data.intents[indexOfIntent].answer);};});setIntents(newSelectedIntents);resetUpdateSpecific();// setSpecificUpdatePopover(false);\n}).catch(function(err){console.log(\"updateProduct API error =>> \",err);swalWithBootstrapButtons.fire({title:'Error while updating the product. Try Again!',confirmButtonText:'Okay'});});};var deleteProduct=function deleteProduct(product,index){var newProducts=_toConsumableArray(products);var objectToSend={intent:intent.name,answer:product._id};console.log(\"To delete That\",objectToSend);axios.put(host+\"/api/v1/secure/project/\".concat(props.wizardIdProject,\"/remove/entity\"),objectToSend,{headers:{'authorization':'Bearer '+localStorage.getItem('authtoken')}}).then(function(res){console.log('deleteProduct API response =>',res.data);newProducts.splice(index,1);setProducts(newProducts);}).catch(function(err){console.log(\"deleteProduct api err =>> \",err);swalWithBootstrapButtons.fire({title:'Error while deleting the product. Try Again!',confirmButtonText:'Okay'});});};var pushNewCategory=function pushNewCategory(){var categoryToPush={name:newCategory};setAllCategories(function(categories){return[].concat(_toConsumableArray(categories),[categoryToPush]);});setCategorySelected(categoryToPush.name);setShowModalInput(false);setNewCategory('');};var deleteIntent=function deleteIntent(intent,index){// console.log(\"U want to delete this intent =>\", intent);\n// intent: nom intent\nvar newIntents=_toConsumableArray(selectedIntents);var objectToSend={intent:intent.name};console.log(\"i'm gonna delete intent ya nour with =>\",objectToSend);axios.put(host+\"/api/v1/secure/project/intents/remove/\".concat(props.wizardIdProject),objectToSend,{headers:{'authorization':'Bearer '+localStorage.getItem('authtoken')}}).then(function(res){console.log('deleteIntent API response =>',res.data);newIntents.splice(index,1);setIntents(newIntents);}).catch(function(err){console.log(\"deleteIntent api err =>> \",err);swalWithBootstrapButtons.fire({title:'Error while deleting the intent. Try Again!',confirmButtonText:'Okay'});});// setIntents(selectedIntents.filter( intent =>( intent !== props.intent.name )))\n};useEffect(function(){if(wizardExistingProjectIntents&&intentStatus===\"old\"){if(wizardExistingProjectIntents[indexOfIntent]){setGenericResponse(wizardExistingProjectIntents[indexOfIntent].genericAnswer);setGenericBtns(wizardExistingProjectIntents[indexOfIntent].buttons);setProducts(wizardExistingProjectIntents[indexOfIntent].answer);}setIntentState('update');}return function(){};},[wizardExistingProjectIntents]);return/*#__PURE__*/React.createElement(Col,{lg:5,className:\"mb-3 mr-3\",key:indexOfIntent},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex flex-column wizard-config-intents-container\",style:{borderRadius:'0.5rem'}},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{lg:12},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-between mx-0 p-0 wizard-config-intents-top-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex\"},/*#__PURE__*/React.createElement(\"p\",{className:\"my-auto wizard-config-intent-title p-2\"},intent.name)),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex mr-1\"},/*#__PURE__*/React.createElement(FaTrashAlt,{color:\"#818E94\",size:18,className:\"m-auto\",style:{cursor:'pointer'},onClick:function onClick(){return deleteIntent(intent,indexOfIntent);}}),/*#__PURE__*/React.createElement(IoIosArrowDown,{color:\"#818E94\",size:18,className:\"my-auto ml-1\",style:{cursor:'pointer'}}))))),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-2\"},/*#__PURE__*/React.createElement(WizardMiracleInput,{label:\"Generic Response\",response:GenericResponse,handleResponse:setGenericResponse,showTags:GenericTags,handleTags:setGenericTags,showEmojis:GenericEmojis,handleEmojis:setGenericEmojis,showKeyboard:GenericKeyboard,handleKeyboard:setGenericKeyboard,BtnType:GenericBtnType,handleBtnType:setGenericBtnType,BtnTitle:GenericBtnTitle,handleBtnTitle:setGenericBtnTitle,BtnValue:GenericBtnValue,handleBtnValue:setGenericBtnValue,Btns:GenericBtns,handleBtns:setGenericBtns,reset:resetGeneric,platform:props.wizardSelectedPage.platform})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex\"},intentState==='save'?!saveUpdateLoading?/*#__PURE__*/React.createElement(\"div\",{onClick:function onClick(){return handleSaveGenericResponse(props.intent.name,props.wizardIdProject);},className:\"ml-auto mr-2 mb-2 py-2 px-3 wizard-config-update-btn\"},\"Save\"):/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex ml-auto mr-2 mb-2 py-2 px-4 wizard-config-update-btn\"},/*#__PURE__*/React.createElement(Spinner,{animation:\"grow\",size:\"sm\",variant:\"light\",className:\"m-auto\"})):!saveUpdateLoading?/*#__PURE__*/React.createElement(\"div\",{onClick:function onClick(){return handleSaveGenericResponse(props.intent.name,props.wizardIdProject);},className:\"ml-auto mr-2 mb-2 py-2 px-3 wizard-config-update-btn\"},\"Update\"):/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex ml-auto mr-2 mb-2 py-2 px-4 wizard-config-update-btn\"},/*#__PURE__*/React.createElement(Spinner,{animation:\"grow\",size:\"sm\",variant:\"light\",className:\"m-auto\"}))),intentState==='update'&&/*#__PURE__*/React.createElement(Col,{lg:11,className:\"mx-auto mt-1\"},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-between\"},products.length>0&&products.map(function(product,index){return product.product.length>0&&/*#__PURE__*/React.createElement(Col,{key:index,lg:5,className:product.default?\"d-flex flex-row mb-3 py-2 wizard-config-product-box-exist\":\"d-flex flex-row mb-3 py-2 wizard-config-product-box\"},product.product.length>8?/*#__PURE__*/React.createElement(\"p\",{onClick:function onClick(e){return handleSpecificUpdatePopover(e,product);},\"data-for\":\"entityTip\",\"data-tip\":product.product,className:\"m-auto wizard-config-product-name\"},product.product.substring(0,7),\"...\"):/*#__PURE__*/React.createElement(\"p\",{onClick:function onClick(e){return handleSpecificUpdatePopover(e,product);},className:product.default?\"m-auto wizard-config-product-name-exist\":\"m-auto wizard-config-product-name\"},product.product),/*#__PURE__*/React.createElement(AiOutlineCloseCircle,{className:\"my-auto ml-1\",color:\"#F49BCC\",size:\"20\",style:{cursor:'pointer'},onClick:function onClick(){return deleteProduct(product,index);}}),/*#__PURE__*/React.createElement(ReactTooltip,{id:\"entityTip\",textColor:\"#fff\",backgroundColor:\"#E5007D\"}));}),/*#__PURE__*/React.createElement(Col,{lg:5,onClick:handleSpecificPopover,className:\"wizard-config-add-product-box mb-3 py-2 px-3\",style:{cursor:'pointer'}},/*#__PURE__*/React.createElement(Row,{className:\"d-flex justify-content-around\"},/*#__PURE__*/React.createElement(MdAddCircleOutline,{className:\"my-auto mr-2\",color:\"#4080FC\",size:20}),/*#__PURE__*/React.createElement(\"p\",{className:\"wizard-config-add-product-name my-auto\"},\"Add product\"))))))),/*#__PURE__*/React.createElement(\"div\",{ref:SpecificRef},/*#__PURE__*/React.createElement(Overlay,{show:SpecificPopover,target:SpecificTarget,container:SpecificRef.current,placement:\"top\"},/*#__PURE__*/React.createElement(Popover,{id:\"popover-specific\"},/*#__PURE__*/React.createElement(Popover.Content,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex\"},/*#__PURE__*/React.createElement(IoIosClose,{className:\"ml-auto\",color:'#9F9F9F',size:'25',onClick:handleSpecificPopover,style:{cursor:'pointer'}})),/*#__PURE__*/React.createElement(\"div\",{className:\"m-2\"},/*#__PURE__*/React.createElement(\"label\",{className:\"wizard-config-textarea-label\"},\"Product name\"),/*#__PURE__*/React.createElement(\"input\",{onChange:function onChange(e){return setProductName(e.target.value);},value:productName,className:\"wizard-config-product-input\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-2\"},/*#__PURE__*/React.createElement(WizardMiracleInput,{label:\"Specific Response\",response:SpecificResponse,handleResponse:SetSpecificResponse,showTags:SpecificTags,handleTags:setSpecificTags,showEmojis:SpecificEmoji,handleEmojis:setSpecificEmoji,showKeyboard:SpecificKeyBoard,handleKeyboard:setSpecificKeyBoard,BtnType:SpecificBtnType,handleBtnType:setSpecificType,BtnTitle:SpecificBtnTitle,handleBtnTitle:setSpecificTitle,BtnValue:SpecificBtnValue,handleBtnValue:setSpecificValue,Btns:SpecificBtns,handleBtns:setSpecificBtns,reset:resetSpecific,platform:props.wizardSelectedPage.platform})),/*#__PURE__*/React.createElement(\"div\",{className:\"mr-2 ml-2 mt-2 mb-2 d-flex\"},/*#__PURE__*/React.createElement(\"div\",{className:\"ml-auto mb-2 py-3 px-3 wizard-config-update-btn\",onClick:function onClick(){return addNewProduct(props.wizardIdProject);}},\"Add\")))))),/*#__PURE__*/React.createElement(\"div\",{ref:SpecificUpdateRef},/*#__PURE__*/React.createElement(Overlay,{show:SpecificUpdatePopover,target:SpecificUpdateTarget,container:SpecificUpdateRef.current,placement:\"top\"},/*#__PURE__*/React.createElement(Popover,{id:\"popover-specific\"},/*#__PURE__*/React.createElement(Popover.Content,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex\"},/*#__PURE__*/React.createElement(IoIosClose,{className:\"ml-auto\",color:'#9F9F9F',size:'25',onClick:resetUpdateSpecific,style:{cursor:'pointer'}})),/*#__PURE__*/React.createElement(\"div\",{className:\"m-2\"},/*#__PURE__*/React.createElement(\"label\",{className:\"wizard-config-textarea-label\"},\"Product name\"),/*#__PURE__*/React.createElement(\"input\",{onChange:function onChange(e){return setProductUpdateName(e.target.value);},value:productUpdateName,disabled:true,style:{cursor:'not-allowed'},className:\"wizard-config-product-input\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-2\"},/*#__PURE__*/React.createElement(WizardMiracleInput,{label:\"Update Specific Response\",response:SpecificUpdateResponse,handleResponse:SetSpecificUpdateResponse,showTags:SpecificUpdateKeyBoard,handleTags:setSpecificUpdateKeyBoard,showEmojis:SpecificUpdateEmoji,handleEmojis:setSpecificUpdateEmoji,showKeyboard:SpecificUpdateTags,handleKeyboard:setSpecificUpdateTags,BtnType:SpecificUpdateBtnType,handleBtnType:setSpecificUpdateType,BtnTitle:SpecificUpdateBtnTitle,handleBtnTitle:setSpecificUpdateTitle,BtnValue:SpecificUpdateBtnValue,handleBtnValue:setSpecificUpdateValue,Btns:SpecificUpdateBtns,handleBtns:setSpecificUpdateBtns,reset:resetUpdateSpecific,platform:props.wizardSelectedPage.platform})),/*#__PURE__*/React.createElement(\"div\",{className:\"mr-2 ml-2 mt-2 mb-2 d-flex\"},/*#__PURE__*/React.createElement(\"div\",{className:\"ml-auto mb-2 py-3 px-3 wizard-config-update-btn\",onClick:function onClick(){return updateProduct(props.wizardIdProject);}},\"Update\")))))),/*#__PURE__*/React.createElement(Modal,{show:CategorieModal,onHide:handleCategoriesModal,centered:true},/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(Row,{className:\"d-flex mb-3\"},/*#__PURE__*/React.createElement(IoIosClose,{className:\"ml-auto mr-3\",color:'#9F9F9F',size:'28',onClick:handleCategoriesModal,style:{cursor:'pointer'}})),/*#__PURE__*/React.createElement(Row,{className:\"d-flex mb-3\"},/*#__PURE__*/React.createElement(\"p\",{className:\"m-auto wizard-config-intent-title\"},\"Please specify the category\")),/*#__PURE__*/React.createElement(Row,{className:\"mb-3\"},/*#__PURE__*/React.createElement(Col,{lg:1}),/*#__PURE__*/React.createElement(Col,{lg:10,className:\"d-flex justify-content-between p-0 mx-0\"},/*#__PURE__*/React.createElement(Col,{lg:8,className:\"d-flex\"},showModalInput&&/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"mr-auto w-100 my-auto add-new-category-input-container\",onChange:function onChange(e){return setNewCategory(e.target.value);},value:newCategory// onKeyDown={(e) => e.key === 'Enter' && pushNewCategory()}\n})),/*#__PURE__*/React.createElement(Col,{lg:4,className:\"d-flex\"},!showModalInput&&/*#__PURE__*/React.createElement(\"p\",{className:\"ml-auto my-auto wizard-config-intent-name\",style:{cursor:'pointer'},onClick:function onClick(){return setShowModalInput(true);}},\"create new\"))),/*#__PURE__*/React.createElement(Col,{lg:1})),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{lg:1}),/*#__PURE__*/React.createElement(Col,{lg:10},/*#__PURE__*/React.createElement(Form.Group,{className:\"d-flex w-100\"},/*#__PURE__*/React.createElement(Form.Control,{className:\"wizard-config-intent-title\",as:\"select\",disabled:showModalInput||allCategories.length===0,onChange:function onChange(e){return setCategorySelected(e.target.value);},value:categorySelected,custom:true},/*#__PURE__*/React.createElement(\"option\",{className:\"wizard-config-intent-title\"},\"Choose Category...\"),allCategories.length>0&&allCategories.map(function(category,index){return/*#__PURE__*/React.createElement(\"option\",{key:index,className:\"wizard-config-intent-title\",value:category.name},category.name);})))),/*#__PURE__*/React.createElement(Col,{lg:1})),/*#__PURE__*/React.createElement(Row,{className:\"mb-3\"},showModalInput?/*#__PURE__*/React.createElement(\"div\",{className:\"m-auto mb-2 py-3 px-4 wizard-config-update-btn\",style:{backgroundColor:'#009EE3',cursor:'pointer'},onClick:function onClick(){return pushNewCategory();}},\"Create\"):/*#__PURE__*/React.createElement(\"div\",{className:\"m-auto mb-2 py-3 px-4 wizard-config-update-btn\",style:{backgroundColor:allCategories.length>0&&categorySelected?'#009EE3':'#707070',cursor:allCategories.length>0&&categorySelected?'pointer':'not-allowed'},onClick:function onClick(){return allCategories.length>0&&categorySelected?addNewProductViaModal(props.wizardIdProject):null;}},\"Add\")))));}var mapStateToProps=function mapStateToProps(state){return{wizardIdProject:state.wizardR.wizardIdProject,wizardIntentType:state.wizardR.wizardIntentType,wizardSelectedPage:state.wizardR.wizardSelectedPage,wizardSelectedPost:state.wizardR.wizardSelectedPost,wizardExistingProjectIntents:state.wizardR.wizardExistingProjectIntents// wizardStep: state.wizardR.wizardStep,\n};};export default connect(mapStateToProps,{addGenericResponse:addGenericResponse,updateGenericResponse:updateGenericResponse})(WizardIntentDetails);/**\r\n *\r\n * \r\n * \r\n *  {\r\n        products.length > 0 &&\r\n        products[props.indexOfIntent].products.map((product,index) => \r\n            <Col key={index} lg={5} className={product.default ? \"d-flex flex-row mb-3 py-2 wizard-config-product-box-exist\" : \"d-flex flex-row mb-3 py-2 wizard-config-product-box\"}>\r\n                {\r\n                    product.product.length > 8\r\n                    ?\r\n                    <p data-for='entityTip' data-tip={product.product} className=\"m-auto wizard-config-product-name\">{product.product.substring(0,7)}...</p>\r\n                    :\r\n                    <p className={product.default ? \"m-auto wizard-config-product-name-exist\" : \"m-auto wizard-config-product-name\"}>\r\n                        {product.product}\r\n                    </p>\r\n                }\r\n                <AiOutlineCloseCircle className=\"my-auto ml-1\" color={\"#F49BCC\"} size={\"20\"} style={{cursor: 'pointer'}} onClick={() => deleteProduct(product,index)} />\r\n                <ReactTooltip id='entityTip' textColor='#fff' backgroundColor='#E5007D' />\r\n            </Col> \r\n        )\r\n    }  \r\n * \r\n * {\r\n    products.length > 0 &&\r\n    products.map((product,index) => \r\n\r\n        <Col key={index} lg={5} className=\"d-flex flex-row mb-3 py-2 wizard-config-product-box\">\r\n            {\r\n                product.entity.length > 8\r\n                ?\r\n                <p data-for='entityTip' data-tip={product.entity} className=\"m-auto wizard-config-product-name\">{product.entity.substring(0,7)}...</p>\r\n                :\r\n                <p className=\"m-auto wizard-config-product-name\">{product.entity}</p>\r\n            }\r\n            <AiOutlineCloseCircle className=\"my-auto ml-1\" color={\"#F49BCC\"} size={\"20\"} style={{cursor: 'pointer'}} onClick={() => deleteProduct(product,index)} />\r\n            <ReactTooltip id='entityTip' textColor='#fff' backgroundColor='#E5007D' />\r\n        </Col> \r\n    )\r\n}   \r\n* \r\n * \r\n * \r\n * Generic Input\r\n <div className=\"mr-2 ml-2 mt-2 mb-2\">\r\n <label className=\"wizard-config-textarea-label\">Generic Response</label>\r\n <Col lg={12}>\r\n     <Row className=\"d-flex mb-1\">\r\n         <div className=\"d-flex mr-2\">\r\n             <Image src={showGenericTags ? BALISE_ICON_ACTIVE : BALISE_ICON} onClick={handleGenericTagsPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '19px', cursor: 'pointer'}} />    \r\n         </div>                                \r\n\r\n         <div className=\"d-flex mr-2\">\r\n             <Image src={showEmojiPickerGeneric ? EMO_ICON_ACTIVE : EMO_ICON} onClick={handleGenericEmojiPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '18px', cursor: 'pointer'}} />\r\n         </div>\r\n\r\n         <div className=\"d-flex mr-2\">\r\n             <Image src={showKeyBoardGeneric ? LETTER_ICON_ACTIVE : LETTER_ICON} onClick={handleGenericKeyboardPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '21px', cursor: 'pointer'}} />\r\n             \r\n             {showKeyBoardGeneric &&\r\n                 <div className=\"wizard-config-keyboard-container\">\r\n                     <Keyboard onChange={(input) => handleArabicKeyboardChange(input,\"generic\")} onKeyPress={(button) => onKeyPress(button,\"generic\")} layout={layout} />\r\n                 </div>\r\n             }\r\n             {showEmojiPickerGeneric &&\r\n                 <div className=\"wizard-config-emoji-container\" >\r\n                     <Picker onEmojiClick={(e,obj) => onEmojiClick(e,obj,\"generic\")} />\r\n                 </div>\r\n             }\r\n         </div>\r\n     </Row>\r\n </Col>\r\n <textarea onChange={(e) => setGenericResponse(e.target.value)} onFocus={() => console.log(\"Hey I'm Focused\")} value={genericResponse} className=\"wizard-config-textarea\" rows=\"5\"/>\r\n</div>\r\n\r\n\r\n\r\n Generic Tags modal \r\n<Modal show={showGenericTags} size=\"sm\" centered>\r\n<Row className=\"d-flex w-100\">\r\n    <IoIosClose className=\"ml-auto my-auto pt-1\" color={'#9F9F9F'} size={30} onClick={() => setShowGenericTags(false)} style={{cursor: 'pointer'}} />\r\n</Row>\r\n\r\n<Row className=\"d-flex w-100\">\r\n    <h3 className=\"m-auto wizard-config-intent-title\">Choose one tag variable</h3>\r\n</Row>\r\n\r\n<Modal.Body>  \r\n    <Row className=\"d-flex\">\r\n        <Col xs={12} className=\"m-auto d-flex\">\r\n            <p className=\"m-auto wizard-config-tag\" onClick={() => pushSelectedTag('##FIRST_NAME##',\"generic\")}>First Name</p>\r\n        </Col>\r\n        <Col xs={12} className=\"m-auto d-flex\">\r\n            <p className=\"m-auto wizard-config-tag\" onClick={() => pushSelectedTag('##LAST_NAME##',\"generic\")}>Last Name</p>\r\n        </Col>\r\n        <Col xs={12} className=\"m-auto d-flex\">\r\n            <p className=\"m-auto wizard-config-tag\" onClick={() => pushSelectedTag('##FULL_NAME##',\"generic\")}>Full Name</p>\r\n        </Col>\r\n        <Col xs={12} className=\"m-auto d-flex\">\r\n            <p className=\"m-auto wizard-config-tag\" onClick={() => pushSelectedTag('##PAGE_NAME##',\"generic\")}>Page Name</p>\r\n        </Col>\r\n    </Row>\r\n</Modal.Body>\r\n</Modal>\r\n\r\n  FUNCTIONS \r\n    // Generic :\r\n    const handleGenericTagsPopover = (event) => {\r\n        setShowEmojiPickerGeneric(false);\r\n        setShowKeyBoardGeneric(false);\r\n        setShowGenericTags(!showGenericTags);\r\n        setTargetGenericTags(event.target);\r\n\r\n        //Specific\r\n        setShowSpecificTags(false);\r\n        setShowEmojiPicker(false);\r\n        setShowKeyBoard(false);\r\n    };\r\n\r\n    const handleGenericKeyboardPopover = () => {\r\n        setShowEmojiPickerGeneric(false);\r\n        setShowGenericTags(false);\r\n        setShowKeyBoardGeneric(!showKeyBoardGeneric);\r\n\r\n        //Specific\r\n        setShowSpecificTags(false);\r\n        setShowEmojiPicker(false);\r\n        setShowKeyBoard(false);\r\n    };\r\n\r\n    const handleGenericEmojiPopover = () => {\r\n        setShowGenericTags(false);\r\n        setShowKeyBoardGeneric(false);\r\n        setShowEmojiPickerGeneric(!showEmojiPickerGeneric);\r\n\r\n        //Specific\r\n        setShowSpecificTags(false);\r\n        setShowEmojiPicker(false);\r\n        setShowKeyBoard(false);\r\n    };\r\n\r\n\r\n\r\n     Specific Tags Popover \r\n    <div ref={refSepecificTags}>\r\n    <Overlay\r\n        show={showSpecificTags}\r\n        target={targetSpecificTags}\r\n        placement=\"top\"\r\n        container={refSepecificTags.current}\r\n        containerPadding={20}\r\n    >\r\n        <Row className=\"d-flex\" style={{ width: '200px', height: '200px', background: '#fff', borderRadius: '0.3rem', marginBottom: \"9px\"}}>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\">First Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\">Last Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\">Full Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\">Page Name</p>\r\n            </Col>\r\n        </Row>\r\n    </Overlay>\r\n</div>\r\n\r\n\r\n const handleSpecificKeyboardPopover = () => {\r\n        // Generic\r\n        setShowEmojiPickerGeneric(false);\r\n        setShowKeyBoardGeneric(false);\r\n        setShowGenericTags(false);\r\n        \r\n        //Specific\r\n        setShowSpecificTags(false);\r\n        setShowEmojiPicker(false);\r\n        setShowKeyBoard(!showKeyBoard);\r\n    };\r\n\r\n    const handleSpecificEmojiPopover = () => {\r\n        // Generic\r\n        setShowEmojiPickerGeneric(false);\r\n        setShowKeyBoardGeneric(false);\r\n        setShowGenericTags(false);\r\n        \r\n        //Specific\r\n        setShowSpecificTags(false);\r\n        setShowKeyBoard(false);\r\n        setShowEmojiPicker(!showEmojiPicker);\r\n    };\r\n\r\n    const handleSpecificTagsPopover = (event) => {\r\n        // Generic\r\n        setShowEmojiPickerGeneric(false);\r\n        setShowKeyBoardGeneric(false);\r\n        setShowGenericTags(false);\r\n\r\n        // Specific\r\n        setShowEmojiPicker(false);\r\n        setShowKeyBoard(false);\r\n        SpecificPopover(false);\r\n        setShowSpecificTags(true);\r\n\r\n    };\r\n\r\n     const handleArabicKeyboardChange = (input,type) => {\r\n        if(type === \"generic\") {\r\n            let newGenericResponse = `${genericResponse}${input.charAt(input.length - 1)}`;\r\n            setGenericResponse(newGenericResponse);\r\n        } else {\r\n            let newSpecifiResponse = `${SpecificResponse}${input.charAt(input.length - 1)}`;\r\n            SetSpecificResponse(newSpecifiResponse);\r\n        }\r\n    };\r\n    \r\n    const onKeyPress = (button,type) => {\r\n        if(type === \"generic\") {\r\n            if (button.toString() == \"{enter}\") {\r\n                setShowKeyBoardGeneric(false);\r\n            }\r\n        } else {\r\n            if (button.toString() == \"{enter}\") {\r\n                setShowKeyBoard(false);\r\n            }\r\n        }\r\n    };\r\n    \r\n    const onEmojiClick = (event, emojiObject,type) => {\r\n        if(type === \"generic\") {\r\n            let newGenericResponse = `${genericResponse}${emojiObject.emoji}`;\r\n            setGenericResponse(newGenericResponse);\r\n        } else {\r\n            let newSpecifiResponse = `${SpecificResponse}${emojiObject.emoji}`;\r\n            SetSpecificResponse(newSpecifiResponse);\r\n        }\r\n    };\r\n\r\n    const pushSelectedTag = (tag,type) => {\r\n\r\n        if(type === \"generic\") {\r\n            let newGenericResponse = `${genericResponse} ${tag} `;\r\n            setGenericResponse(newGenericResponse);\r\n            setShowGenericTags(false);\r\n        } else {\r\n            let newSpecifiResponse = `${SpecificResponse} ${tag} `;\r\n            SetSpecificResponse(newSpecifiResponse);\r\n            setShowSpecificTags(false);\r\n        }\r\n    };\r\n\r\n\r\n    {/* Specific Tags modal \r\n    <Modal show={showSpecificTags} size=\"sm\" centered>   \r\n    <Row className=\"d-flex w-100\">\r\n        <IoIosClose className=\"ml-auto my-auto pt-1\" color={'#9F9F9F'} size={30} onClick={() => { setShowSpecificTags(false); SpecificPopover(true); }} style={{cursor: 'pointer'}} />\r\n    </Row>\r\n\r\n    <Row className=\"d-flex w-100\">\r\n        <h3 className=\"m-auto wizard-config-intent-title\">Choose one tag variable</h3>\r\n    </Row>\r\n   \r\n    <Modal.Body>  \r\n        <Row className=\"d-flex\">\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\" onClick={() => { pushSelectedTag('##FIRST_NAME##', \"specific\"); setShow(true); }}>First Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\" onClick={() => { pushSelectedTag('##LAST_NAME##', \"specific\"); setShow(true); }}>Last Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\" onClick={() => { pushSelectedTag('##FULL_NAME##', \"specific\"); setShow(true); }}>Full Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\" onClick={() => { pushSelectedTag('##PAGE_NAME##', \"specific\"); setShow(true); }}>Page Name</p>\r\n            </Col>\r\n        </Row>\r\n    </Modal.Body>\r\n</Modal>\r\n\r\n{/* Specific Btns (Quicks replies Modal) \r\n<Modal show={showButtonsModal} size=\"sm\" centered>   \r\n    <Modal.Body>  \r\n        <Row className=\"justify-content-center\">\r\n            <Col md={12}>\r\n                <Row>\r\n                    <Col md={12} className=\"mt-2 mb-3\">\r\n                        <Form.Control as=\"select\" onChange={(e) => setQuickReplyType(e.target.value)} defaultValue=\"url\">\r\n                            <option value=\"url\">Url</option>\r\n                            <option value=\"call\">Call</option>\r\n                        </Form.Control>\r\n                    </Col>\r\n                    \r\n                    <Col md={12} className=\"mt-2\">\r\n                        <Row className=\"d-flex\">\r\n                            <Col md={12}>\r\n                                <Form.Control type={\"text\"} onChange={(e) => setQuickReplyTitle(e.target.value)} value={quickReplyTitle}  placeholder=\"Title\" />\r\n                            </Col>\r\n\r\n                            <Col md={12} className=\"d-flex\">\r\n                                <p className=\"ml-auto wizard-config-input-feedback\">Remaining characters: 20</p>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Col md={12} className=\"mb-2\">\r\n                        <Form.Control type={quickReplyType === \"url\" ? \"text\" : \"number\"} onChange={(e) => setQuickReplyValue(e.target.value)} value={quickReplyValue}  placeholder={quickReplyType === \"url\" ? \"www.example.com\" : \"(+216) 99 999 999\"}  />\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n\r\n            <Col md={11} className=\"d-flex pl-1\">\r\n                <div className=\"wizard-pages-active-btn py-3 px-5\" onClick={() => addNewQuickReply()}>\r\n                    OK\r\n                </div>\r\n            </Col>\r\n           \r\n        </Row>\r\n    </Modal.Body>\r\n</Modal>\r\n\r\n\r\n\r\n <div className=\"m-2\">\r\n    <label className=\"wizard-config-textarea-label\">Specific response</label>\r\n    <Row>\r\n            <Col lg={12}>\r\n            <Row className=\"d-flex mb-1 ml-2\">\r\n                <div className=\"d-flex mr-2\">\r\n                    <Image src={showSpecificTags ? BALISE_ICON_ACTIVE : BALISE_ICON} onClick={handleSpecificTagsPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '19px', cursor: 'pointer'}} />    \r\n                </div>                                \r\n\r\n                <div className=\"d-flex mr-2\">\r\n                    <Image src={showEmojiPicker ? EMO_ICON_ACTIVE : EMO_ICON} onClick={handleSpecificEmojiPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '18px', cursor: 'pointer'}} />\r\n                </div>\r\n\r\n                <div className=\"d-flex mr-2\">\r\n                    <Image src={showKeyBoard ? LETTER_ICON_ACTIVE : LETTER_ICON} onClick={handleSpecificKeyboardPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '21px', cursor: 'pointer'}} />\r\n                    \r\n                    {showKeyBoard &&\r\n                        <div className=\"wizard-config-keyboard-container\">\r\n                            <Keyboard onChange={handleArabicKeyboardChange} onKeyPress={onKeyPress} layout={layout} />\r\n                        </div>\r\n                    }\r\n                    {showEmojiPicker &&\r\n                        <div className=\"wizard-config-emoji-container\" >\r\n                            <Picker onEmojiClick={onEmojiClick} />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Row>\r\n        </Col> \r\n\r\n        <Col lg={12} className=\"mb-2\">\r\n        <textarea onChange={(e) => setSpecificResponse(e.target.value)} value={SpecificResponse} className=\"wizard-config-textarea\" rows=\"5\"/>\r\n        <hr style={{borderColor: '#B4B4B4', borderWidth: '1.5px'}}/>\r\n    </Col> \r\n    \r\n        Quick replies \r\n        <Col lg={12} className=\"d-flex flex-row mb-2\">\r\n    \r\n        {quickReplies.map((quickReply,index) => \r\n            <Col key={index} lg={3} className=\"mr-2\">\r\n                <Row className=\"wizard-config-quick-replies-btn py-1\">\r\n                    <p className=\"m-auto\" data-for='quickReplyTip' data-tip={quickReply.value}>{quickReply.type}</p>\r\n                    <AiOutlineCloseCircle className=\"m-auto\" color={\"white\"} size={\"17\"} style={{cursor: 'pointer'}} onClick={() => deleteQuickReply(index)} />\r\n                </Row>\r\n                <ReactTooltip id='quickReplyTip' textColor='#fff' backgroundColor='#009EE3' />\r\n            </Col>\r\n        )}\r\n\r\n        // ADD BUTTON\r\n        {quickReplies.length < 3\r\n        &&\r\n        <Col lg={3}>\r\n            <Row \r\n                className=\"wizard-config-quick-replies-btn py-1\" \r\n                \r\n                onClick={() =>{ setShowButtonsModal(true); setShow(false); }}\r\n            >\r\n                <p className=\"m-auto\">Add button</p>\r\n            </Row>\r\n        </Col>\r\n        }\r\n\r\n    </Col>\r\n</Row>\r\n</div>\r\n\r\n */","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/app/Home/AutoWizard/WizardIntentDetails.js"],"names":["React","useState","useRef","useEffect","axios","connect","addGenericResponse","updateGenericResponse","host","Row","Col","Popover","Overlay","Modal","Image","Form","Spinner","WizardMiracleInput","ReactTooltip","Swal","FaTrashAlt","IoIosArrowDown","IoIosClose","AiOutlineCloseCircle","MdAddCircleOutline","WizardIntentDetails","props","indexOfIntent","intent","setIntents","selectedIntents","wizardExistingProjectIntents","intentStatus","swalWithBootstrapButtons","mixin","customClass","confirmButton","buttonsStyling","GenericResponse","setGenericResponse","GenericTags","setGenericTags","GenericEmojis","setGenericEmojis","GenericKeyboard","setGenericKeyboard","GenericBtnType","setGenericBtnType","GenericBtnTitle","setGenericBtnTitle","GenericBtnValue","setGenericBtnValue","GenericBtns","setGenericBtns","resetGeneric","handleSaveGenericResponse","wizardIdProject","project","genericAnswer","buttons","fire","title","confirmButtonText","intentState","setSaveUpdateLoading","then","setIntentState","catch","SpecificResponse","SetSpecificResponse","SpecificKeyBoard","setSpecificKeyBoard","SpecificEmoji","setSpecificEmoji","SpecificTags","setSpecificTags","SpecificBtnType","setSpecificType","SpecificBtnTitle","setSpecificTitle","SpecificBtnValue","setSpecificValue","SpecificBtns","setSpecificBtns","SpecificPopover","setSpecificPopover","SpecificTarget","setSpecificTarget","SpecificRef","resetSpecific","setProductName","handleSpecificPopover","event","target","SpecificUpdateResponse","SetSpecificUpdateResponse","SpecificUpdateKeyBoard","setSpecificUpdateKeyBoard","SpecificUpdateEmoji","setSpecificUpdateEmoji","SpecificUpdateTags","setSpecificUpdateTags","SpecificUpdateBtnType","setSpecificUpdateType","SpecificUpdateBtnTitle","setSpecificUpdateTitle","SpecificUpdateBtnValue","setSpecificUpdateValue","SpecificUpdateBtns","setSpecificUpdateBtns","SpecificUpdatePopover","setSpecificUpdatePopover","SpecificUpdateTarget","setSpecificUpdateTarget","SpecificUpdateRef","resetUpdateSpecific","handleSpecificUpdatePopover","product","setProductUpdateName","preAnswer","productName","productUpdateName","savedProductToSend","setSavedProductToSend","products","setProducts","newCategory","setNewCategory","categorySelected","setCategorySelected","allCategories","setAllCategories","CategorieModal","setCategorieModal","showModalInput","setShowModalInput","handleCategoriesModal","saveUpdateLoading","addNewProduct","idProjet","productToSend","idPage","wizardSelectedPage","id","typePage","platform","entity","name","specificAnswer","categorie","put","headers","localStorage","getItem","res","console","log","data","get","categories","length","map","cat","index","default","splice","err","newSelectedIntents","intents","answer","addNewProductViaModal","_","updateProduct","deleteProduct","newProducts","objectToSend","_id","pushNewCategory","categoryToPush","deleteIntent","newIntents","borderRadius","cursor","e","substring","current","value","category","backgroundColor","mapStateToProps","state","wizardR","wizardIntentType","wizardSelectedPost"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { addGenericResponse, updateGenericResponse } from '../../../redux/actions/wizardActions';\r\nimport { host } from '../../../config';\r\n\r\nimport {\r\n    Row,\r\n    Col,\r\n    Popover,\r\n    Overlay,\r\n    Modal,\r\n    Image,\r\n    Form,\r\n    Spinner,\r\n} from 'react-bootstrap';\r\nimport WizardMiracleInput from './WizardMiracleInput';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\n\r\nimport { FaTrashAlt } from 'react-icons/fa';\r\nimport { IoIosArrowDown,IoIosClose } from 'react-icons/io';\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\r\nimport { MdAddCircleOutline } from 'react-icons/md';\r\n\r\nfunction WizardIntentDetails(props) {\r\n\r\n    // All Props from WizardConfig : \r\n    let {\r\n        indexOfIntent,\r\n        intent,\r\n        setIntents,\r\n        selectedIntents,\r\n        // isExistingProject,\r\n        wizardExistingProjectIntents,\r\n        intentStatus,\r\n    } = props;\r\n    \r\n    // Popup Config:\r\n    const swalWithBootstrapButtons = Swal.mixin({ customClass: {confirmButton: 'wizard-pages-active-btn-alert'}, buttonsStyling: false });\r\n    \r\n    // Generic:\r\n    const [GenericResponse,setGenericResponse] = useState('');\r\n    const [GenericTags,setGenericTags] = useState(false);\r\n    const [GenericEmojis,setGenericEmojis] = useState(false);\r\n    const [GenericKeyboard,setGenericKeyboard] = useState(false);\r\n    const [GenericBtnType, setGenericBtnType] = useState('web_url');\r\n    const [GenericBtnTitle, setGenericBtnTitle] = useState('');\r\n    const [GenericBtnValue, setGenericBtnValue] = useState('');\r\n    const [GenericBtns, setGenericBtns] = useState([]);\r\n    const resetGeneric = () => {\r\n        setGenericResponse('');\r\n        setGenericTags(false);\r\n        setGenericEmojis(false);\r\n        setGenericKeyboard(false);\r\n        setGenericBtnType('web_url');\r\n        setGenericBtnTitle('');\r\n        setGenericBtnValue('');\r\n        setGenericBtns([]);\r\n    };\r\n    const handleSaveGenericResponse = (intent,wizardIdProject) => {  \r\n        \r\n        let project = {\r\n            genericAnswer : GenericResponse,\r\n            intent: intent,\r\n            buttons: GenericBtns,\r\n        };\r\n\r\n        if(GenericResponse === \"\") {\r\n            swalWithBootstrapButtons.fire({\r\n                title: 'Generic Response is empty !',\r\n                confirmButtonText: 'Okay',\r\n            });\r\n        } else if (intentState === 'save' && GenericResponse !== '') {\r\n            setSaveUpdateLoading(true);\r\n\r\n            props.addGenericResponse(project,wizardIdProject)\r\n            .then(() => {\r\n                setIntentState('update');\r\n                setSaveUpdateLoading(false);\r\n            })\r\n            .catch(() => {\r\n                setSaveUpdateLoading(false);\r\n                swalWithBootstrapButtons.fire({\r\n                    title: 'Error while saving the generic response. Try Again !',\r\n                    confirmButtonText: 'Okay',\r\n                });\r\n            });\r\n\r\n        } else if (intentState === 'update' && GenericResponse !== '') {\r\n            setSaveUpdateLoading(true);\r\n\r\n            props.updateGenericResponse(project,wizardIdProject)\r\n            .then(() => {\r\n                setSaveUpdateLoading(false);\r\n            })\r\n            .catch(() => {\r\n                setSaveUpdateLoading(false);\r\n                swalWithBootstrapButtons.fire({\r\n                    title: 'Error while updating the generic response. Try Again !',\r\n                    confirmButtonText: 'Okay',\r\n                });\r\n            });\r\n        }\r\n        \r\n    };\r\n\r\n    // Specific:\r\n    const [SpecificResponse, SetSpecificResponse] = useState('');\r\n    const [SpecificKeyBoard, setSpecificKeyBoard] = useState(false);\r\n    const [SpecificEmoji, setSpecificEmoji] = useState(false);\r\n    const [SpecificTags, setSpecificTags] = useState(false);\r\n    const [SpecificBtnType, setSpecificType] = useState('web_url');\r\n    const [SpecificBtnTitle, setSpecificTitle] = useState('');\r\n    const [SpecificBtnValue, setSpecificValue] = useState('');\r\n    const [SpecificBtns, setSpecificBtns] = useState([]);\r\n    const [SpecificPopover, setSpecificPopover] = useState(false);\r\n    const [SpecificTarget, setSpecificTarget] = useState(null);\r\n    const SpecificRef = useRef(null);\r\n    const resetSpecific = () => {\r\n        setProductName('');\r\n        SetSpecificResponse('');\r\n        setSpecificTags(false);\r\n        setSpecificEmoji(false);\r\n        setSpecificKeyBoard(false);\r\n        setSpecificType('web_url');\r\n        setSpecificTitle('');\r\n        setSpecificValue('');\r\n        setSpecificBtns([]);\r\n    };\r\n    const handleSpecificPopover = (event) => {\r\n        setSpecificPopover(!SpecificPopover);\r\n        setSpecificTarget(event.target);\r\n    };\r\n\r\n    // Specific Update:\r\n    const [SpecificUpdateResponse, SetSpecificUpdateResponse] = useState('');\r\n    const [SpecificUpdateKeyBoard, setSpecificUpdateKeyBoard] = useState(false);\r\n    const [SpecificUpdateEmoji, setSpecificUpdateEmoji] = useState(false);\r\n    const [SpecificUpdateTags, setSpecificUpdateTags] = useState(false);\r\n    const [SpecificUpdateBtnType, setSpecificUpdateType] = useState('web_url');\r\n    const [SpecificUpdateBtnTitle, setSpecificUpdateTitle] = useState('');\r\n    const [SpecificUpdateBtnValue, setSpecificUpdateValue] = useState('');\r\n    const [SpecificUpdateBtns, setSpecificUpdateBtns] = useState([]);\r\n    const [SpecificUpdatePopover, setSpecificUpdatePopover] = useState(false);\r\n    const [SpecificUpdateTarget, setSpecificUpdateTarget] = useState(null);\r\n    const SpecificUpdateRef = useRef(null);\r\n    const resetUpdateSpecific = () => {\r\n        setSpecificUpdatePopover(false);\r\n        setSpecificUpdateTarget(null);\r\n        SetSpecificUpdateResponse('');\r\n        setSpecificUpdateKeyBoard(false);\r\n        setSpecificUpdateEmoji(false);\r\n        setSpecificUpdateTags(false);\r\n        setSpecificUpdateType('web_url');\r\n        setSpecificUpdateTitle('');\r\n        setSpecificUpdateValue('');\r\n        setSpecificUpdateBtns([]);\r\n    };\r\n    const handleSpecificUpdatePopover = (event,product) => {\r\n        // console.log(\"Product to update =>\", product);\r\n        setProductUpdateName(product.product);\r\n        SetSpecificUpdateResponse(product.preAnswer);\r\n        setSpecificUpdateBtns(product.buttons);\r\n        setSpecificUpdatePopover(!SpecificUpdatePopover);\r\n        setSpecificUpdateTarget(event.target);\r\n    };\r\n\r\n    // Products\r\n    const [productName, setProductName] = useState('');\r\n    const [productUpdateName, setProductUpdateName] = useState('');\r\n    const [savedProductToSend, setSavedProductToSend] = useState('');\r\n    const [products, setProducts] = useState([]);\r\n\r\n    // Categories\r\n    const [newCategory, setNewCategory] = useState('');\r\n    const [categorySelected, setCategorySelected] = useState('');\r\n    const [allCategories, setAllCategories] = useState([]);\r\n    const [CategorieModal, setCategorieModal] = useState(false);\r\n    const [showModalInput, setShowModalInput] = useState(false);\r\n    const handleCategoriesModal = () => {\r\n        setSpecificPopover(false);\r\n        setCategorieModal(!CategorieModal);\r\n    };\r\n    // other:\r\n    const [saveUpdateLoading,setSaveUpdateLoading] = useState(false);\r\n    const [intentState, setIntentState] = useState('save');\r\n\r\n    // Categories & Products functions :\r\n    const addNewProduct = (idProjet) => {\r\n        \r\n        // First update api : entity === categorie :\r\n        let productToSend = {\r\n            idPage: props.wizardSelectedPage.id,\r\n            typePage : props.wizardSelectedPage.platform,\r\n            entity: productName,\r\n            intent: props.intent.name,\r\n            genericAnswer: GenericResponse,\r\n            specificAnswer: SpecificResponse,\r\n            categorie: productName,\r\n            buttons: SpecificBtns,\r\n        };\r\n\r\n        axios.put(`${host}/api/v1/secure/project/firstupdate/${idProjet}`, productToSend, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then( res => {\r\n            console.log('first update response =>', res.data.data);\r\n\r\n            if (res.data.data === \"not exist\") {\r\n                // Call the categories api :\r\n                axios.get(`${host}/api/v1/secure/project/get/entitiesproject/${props.wizardSelectedPage.platform}/${props.wizardSelectedPage.id}`)\r\n                .then((res) => {\r\n                    console.log(\"get categories for modal /get/entitiesproject =>\", res.data.data);\r\n                    \r\n                    // Eliminate default categories:\r\n                    let categories = res.data.data;\r\n\r\n                    if(categories.length > 0) {\r\n                        categories.map((cat,index) => \r\n                            cat.default === true && categories.splice(index,1)\r\n                        );\r\n                        // console.log(\"Result after filtring the cats\", categories);\r\n                    };\r\n                    setAllCategories(categories);\r\n                    setSpecificPopover(!SpecificPopover);\r\n                    setSavedProductToSend(productToSend);\r\n                    setCategorieModal(true);\r\n                    \r\n                    // ==> Update the products array from addNewProductViaModal() <==\r\n                })\r\n                .catch((err) => console.log(\"addNewProduct WizardIntentDetails =>\", err))\r\n            } else if(res.data.data === \"exist\") {\r\n                swalWithBootstrapButtons.fire({\r\n                    title: 'Product already exists !',\r\n                    confirmButtonText: 'Okay',\r\n                });\r\n            } else {\r\n                // Update the products array :\r\n                let newSelectedIntents = [...selectedIntents];\r\n\r\n                newSelectedIntents.map((intent,index) => {\r\n                    if(index === props.indexOfIntent)  {\r\n                        // intent.products = res.data.data.intents[indexOfIntent].answer\r\n                        setProducts([]);\r\n                        setProducts(res.data.data.intents[indexOfIntent].answer);\r\n                    };\r\n                });\r\n                setIntents(newSelectedIntents);\r\n                \r\n                // Reset\r\n                resetSpecific();\r\n            };\r\n        })\r\n        .catch( err => console.log(\"Wizard Intent Detail addNewProduct fct first Update API err ===>\", err))\r\n    };\r\n\r\n    const addNewProductViaModal = (idProjet) => {\r\n        // Send the update with the new category name :) :\r\n        let productToSend = savedProductToSend;\r\n        productToSend.categorie = categorySelected;\r\n    \r\n        // console.log(\"sendinnng product =>\",productToSend);\r\n        // console.log(\"Category Selected To sennnnd\", categorySelected,\" and product =>>>\", productToSend);\r\n        \r\n        return axios.put(host + `/api/v1/secure/project/update/${idProjet}`,productToSend, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('UPDATE API response =>', res.data);\r\n       \r\n            // set the products from the update api :\r\n            let newSelectedIntents = [...selectedIntents];\r\n\r\n            newSelectedIntents.map((_,index) => {\r\n                if(index === props.indexOfIntent)  {\r\n                    //intent.products = res.data.data.intents[indexOfIntent].answer\r\n                    setProducts([]);\r\n                    setProducts(res.data.data.intents[indexOfIntent].answer);\r\n                };\r\n            });\r\n            setIntents(newSelectedIntents);\r\n            \r\n            // Reset\r\n            resetSpecific();\r\n            setCategorySelected('');\r\n            setCategorieModal(false);\r\n        })\r\n        .catch((err) => console.log(\"addNewProductViaModal => api update err =>> \", err))\r\n    };\r\n\r\n    const updateProduct = (idProjet) => {\r\n       \r\n        let productToSend = {\r\n            idPage: props.wizardSelectedPage.id,\r\n            typePage : props.wizardSelectedPage.platform,\r\n            entity: productUpdateName,\r\n            intent: props.intent.name,\r\n            genericAnswer: GenericResponse,\r\n            specificAnswer: SpecificUpdateResponse,\r\n            buttons: SpecificUpdateBtns,\r\n            // categorie: productUpdateName,\r\n        };\r\n\r\n        axios.put(host + `/api/v1/secure/project/entitiesupdate/${props.wizardIdProject}`,productToSend,\r\n        {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('updateProduct API response =>', res.data);\r\n            // set the products from the update api :\r\n            let newSelectedIntents = [...selectedIntents];\r\n\r\n            newSelectedIntents.map((_,index) => {\r\n                if(index === props.indexOfIntent)  {\r\n                    //intent.products = res.data.data.intents[indexOfIntent].answer\r\n                    setProducts([]);\r\n                    setProducts(res.data.data.intents[indexOfIntent].answer);\r\n                };\r\n            });\r\n            setIntents(newSelectedIntents);\r\n            resetUpdateSpecific();\r\n            // setSpecificUpdatePopover(false);\r\n            \r\n        })\r\n        .catch((err) => {\r\n            console.log(\"updateProduct API error =>> \", err)\r\n            swalWithBootstrapButtons.fire({\r\n                title: 'Error while updating the product. Try Again!',\r\n                confirmButtonText: 'Okay',\r\n            });\r\n        });\r\n\r\n    };\r\n\r\n    const deleteProduct = (product,index) => {\r\n        \r\n        let newProducts = [...products];\r\n        \r\n        let objectToSend = {\r\n            intent: intent.name,\r\n            answer: product._id,\r\n        };\r\n        \r\n        console.log(\"To delete That\", objectToSend);\r\n\r\n        axios.put(host + `/api/v1/secure/project/${props.wizardIdProject}/remove/entity`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('deleteProduct API response =>', res.data);\r\n            newProducts.splice(index,1);\r\n            setProducts(newProducts);   \r\n        })\r\n        .catch((err) => {\r\n            console.log(\"deleteProduct api err =>> \", err)\r\n            swalWithBootstrapButtons.fire({\r\n                title: 'Error while deleting the product. Try Again!',\r\n                confirmButtonText: 'Okay',\r\n            });\r\n        });\r\n \r\n    };\r\n\r\n    const pushNewCategory = () => {  \r\n        \r\n        let categoryToPush = {\r\n            name : newCategory\r\n        };\r\n\r\n        setAllCategories(categories => [...categories, categoryToPush]);\r\n        setCategorySelected(categoryToPush.name);\r\n        setShowModalInput(false); \r\n        setNewCategory('');\r\n    };\r\n\r\n    const deleteIntent = (intent,index) => {\r\n        // console.log(\"U want to delete this intent =>\", intent);\r\n        // intent: nom intent\r\n        let newIntents = [...selectedIntents];\r\n    \r\n        let objectToSend = {\r\n            intent: intent.name,\r\n        };\r\n\r\n        console.log(\"i'm gonna delete intent ya nour with =>\", objectToSend);\r\n\r\n        axios.put(host + `/api/v1/secure/project/intents/remove/${props.wizardIdProject}`, objectToSend, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('deleteIntent API response =>', res.data);\r\n            newIntents.splice(index,1);\r\n            setIntents(newIntents);   \r\n        })\r\n        .catch((err) => {\r\n            console.log(\"deleteIntent api err =>> \", err)\r\n            swalWithBootstrapButtons.fire({\r\n                title: 'Error while deleting the intent. Try Again!',\r\n                confirmButtonText: 'Okay',\r\n            });\r\n        });\r\n\r\n        // setIntents(selectedIntents.filter( intent =>( intent !== props.intent.name )))\r\n    };\r\n     \r\n    useEffect(() => {\r\n        if(wizardExistingProjectIntents && intentStatus === \"old\") {\r\n            if(wizardExistingProjectIntents[indexOfIntent]) {\r\n                setGenericResponse(wizardExistingProjectIntents[indexOfIntent].genericAnswer);\r\n                setGenericBtns(wizardExistingProjectIntents[indexOfIntent].buttons)\r\n                setProducts(wizardExistingProjectIntents[indexOfIntent].answer);\r\n            }\r\n            setIntentState('update');\r\n        }\r\n        return () => {\r\n\r\n        };\r\n    },[wizardExistingProjectIntents]);\r\n\r\n    return (\r\n        <Col lg={5} className=\"mb-3 mr-3\" key={indexOfIntent}>\r\n            \r\n            <div className=\"d-flex flex-column wizard-config-intents-container\" style={{borderRadius: '0.5rem'}}>\r\n                \r\n                {/* Header */}\r\n                <Row>\r\n                    <Col lg={12}>\r\n                        <Row className=\"justify-content-between mx-0 p-0 wizard-config-intents-top-row\">\r\n                            <div className=\"d-flex\">\r\n                                <p className=\"my-auto wizard-config-intent-title p-2\">{intent.name}</p> \r\n                            </div>\r\n\r\n                            <div className=\"d-flex mr-1\">\r\n                                <FaTrashAlt  color={\"#818E94\"} size={18} className=\"m-auto\" style={{cursor: 'pointer'}} onClick={ () => deleteIntent(intent,indexOfIntent)} />\r\n                                <IoIosArrowDown color={\"#818E94\"} size={18} className=\"my-auto ml-1\" style={{cursor: 'pointer'}} />\r\n                            </div>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <div className=\"mb-2\">\r\n                  <WizardMiracleInput  \r\n                    label={\"Generic Response\"}\r\n                    response={GenericResponse} handleResponse={setGenericResponse}\r\n                    showTags={GenericTags} handleTags={setGenericTags}\r\n                    showEmojis={GenericEmojis} handleEmojis={setGenericEmojis}\r\n                    showKeyboard={GenericKeyboard} handleKeyboard={setGenericKeyboard}\r\n                    BtnType={GenericBtnType} handleBtnType={setGenericBtnType}\r\n                    BtnTitle={GenericBtnTitle} handleBtnTitle={setGenericBtnTitle}\r\n                    BtnValue={GenericBtnValue} handleBtnValue={setGenericBtnValue}\r\n                    Btns={GenericBtns} handleBtns={setGenericBtns}\r\n                    reset={resetGeneric}\r\n                    platform={props.wizardSelectedPage.platform}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                    {/* Save Update Button */}\r\n                    <div className=\"d-flex\">\r\n                        {\r\n                            intentState === 'save' \r\n                            ?\r\n                            (\r\n                                !saveUpdateLoading \r\n                                ?\r\n                                <div onClick={() => handleSaveGenericResponse(props.intent.name,props.wizardIdProject)} className=\"ml-auto mr-2 mb-2 py-2 px-3 wizard-config-update-btn\">\r\n                                    Save\r\n                                </div>\r\n                                :\r\n                                <div className=\"d-flex ml-auto mr-2 mb-2 py-2 px-4 wizard-config-update-btn\">\r\n                                    <Spinner animation=\"grow\" size=\"sm\" variant=\"light\" className=\"m-auto\" />\r\n                                </div>\r\n                            )\r\n                            :\r\n                            (\r\n                                !saveUpdateLoading \r\n                                ?\r\n                                <div onClick={() => handleSaveGenericResponse(props.intent.name,props.wizardIdProject)} className=\"ml-auto mr-2 mb-2 py-2 px-3 wizard-config-update-btn\">\r\n                                    Update\r\n                                </div>\r\n                                :\r\n                                <div className=\"d-flex ml-auto mr-2 mb-2 py-2 px-4 wizard-config-update-btn\">\r\n                                    <Spinner animation=\"grow\" size=\"sm\" variant=\"light\" className=\"m-auto\" />\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n\r\n                    {/* PRODUCTS */}\r\n                    {intentState === 'update' &&\r\n                    <Col lg={11} className=\"mx-auto mt-1\">\r\n                        <Row className=\"justify-content-between\">\r\n                            {products.length > 0 && products.map((product,index) => \r\n                                product.product.length > 0 \r\n                                &&\r\n                                <Col key={index} lg={5}  className={product.default ? \"d-flex flex-row mb-3 py-2 wizard-config-product-box-exist\" : \"d-flex flex-row mb-3 py-2 wizard-config-product-box\"}>\r\n                                    {\r\n                                        product.product.length > 8\r\n                                        ?\r\n                                        <p onClick={(e) => handleSpecificUpdatePopover(e,product)} data-for='entityTip' data-tip={product.product} className=\"m-auto wizard-config-product-name\">\r\n                                            {product.product.substring(0,7)}...\r\n                                        </p>\r\n                                        :\r\n                                        <p onClick={(e) => handleSpecificUpdatePopover(e,product)} className={product.default ? \"m-auto wizard-config-product-name-exist\" : \"m-auto wizard-config-product-name\"}>\r\n                                            {product.product}\r\n                                        </p>\r\n                                    }\r\n                                    <AiOutlineCloseCircle className=\"my-auto ml-1\" color={\"#F49BCC\"} size={\"20\"} style={{cursor: 'pointer'}} onClick={() => deleteProduct(product,index)} />\r\n                                    <ReactTooltip id='entityTip' textColor='#fff' backgroundColor='#E5007D' />\r\n                                </Col> \r\n                                )\r\n                            } \r\n    \r\n                            <Col lg={5} onClick={handleSpecificPopover} className=\"wizard-config-add-product-box mb-3 py-2 px-3\" style={{cursor: 'pointer'}}>\r\n                                <Row className=\"d-flex justify-content-around\">\r\n                                    <MdAddCircleOutline className=\"my-auto mr-2\" color={\"#4080FC\"} size={20} />\r\n                                    <p className=\"wizard-config-add-product-name my-auto\">Add product</p>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    }\r\n                </div>\r\n            </div>\r\n             \r\n            {/* Specific Response Popover */}\r\n            <div ref={SpecificRef}>\r\n                <Overlay\r\n                    show={SpecificPopover}\r\n                    target={SpecificTarget}\r\n                    container={SpecificRef.current}\r\n                    placement=\"top\"\r\n                >\r\n                    <Popover id=\"popover-specific\"> \r\n                        <Popover.Content>\r\n                            <div className=\"d-flex\">\r\n                                <IoIosClose className=\"ml-auto\" color={'#9F9F9F'} size={'25'} onClick={handleSpecificPopover} style={{cursor: 'pointer'}} />\r\n                            </div>\r\n\r\n                            <div className=\"m-2\">\r\n                                <label className=\"wizard-config-textarea-label\">Product name</label>\r\n                                <input onChange={(e) => setProductName(e.target.value)} value={productName} className=\"wizard-config-product-input\" />\r\n                            </div>\r\n\r\n                            <div className=\"mb-2\">\r\n                                <WizardMiracleInput  \r\n                                    label={\"Specific Response\"}\r\n                                    response={SpecificResponse} handleResponse={SetSpecificResponse}\r\n                                    showTags={SpecificTags} handleTags={setSpecificTags}\r\n                                    showEmojis={SpecificEmoji} handleEmojis={setSpecificEmoji}\r\n                                    showKeyboard={SpecificKeyBoard} handleKeyboard={setSpecificKeyBoard}\r\n                                    BtnType={SpecificBtnType} handleBtnType={setSpecificType}\r\n                                    BtnTitle={SpecificBtnTitle} handleBtnTitle={setSpecificTitle}\r\n                                    BtnValue={SpecificBtnValue} handleBtnValue={setSpecificValue}\r\n                                    Btns={SpecificBtns} handleBtns={setSpecificBtns}\r\n                                    reset={resetSpecific}\r\n                                    platform={props.wizardSelectedPage.platform}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"mr-2 ml-2 mt-2 mb-2 d-flex\">\r\n                                <div className=\"ml-auto mb-2 py-3 px-3 wizard-config-update-btn\" onClick={() => addNewProduct(props.wizardIdProject)}>Add</div>\r\n                            </div>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Overlay>\r\n            </div>\r\n            \r\n            {/* Specific Response Update Popover */}\r\n            <div ref={SpecificUpdateRef}>\r\n                <Overlay\r\n                    show={SpecificUpdatePopover}\r\n                    target={SpecificUpdateTarget}\r\n                    container={SpecificUpdateRef.current}\r\n                    placement=\"top\"\r\n                >\r\n                    <Popover id=\"popover-specific\"> \r\n                        <Popover.Content>\r\n                            <div className=\"d-flex\">\r\n                                <IoIosClose className=\"ml-auto\" color={'#9F9F9F'} size={'25'} onClick={resetUpdateSpecific} style={{cursor: 'pointer'}} />\r\n                            </div>\r\n\r\n                            <div className=\"m-2\">\r\n                                <label className=\"wizard-config-textarea-label\">Product name</label>\r\n                                <input onChange={(e) => setProductUpdateName(e.target.value)} value={productUpdateName} disabled={true} style={{cursor: 'not-allowed'}} className=\"wizard-config-product-input\" />\r\n                            </div>\r\n\r\n                            <div className=\"mb-2\">\r\n                                <WizardMiracleInput  \r\n                                    label={\"Update Specific Response\"}\r\n                                    response={SpecificUpdateResponse} handleResponse={SetSpecificUpdateResponse}\r\n                                    showTags={SpecificUpdateKeyBoard} handleTags={setSpecificUpdateKeyBoard}\r\n                                    showEmojis={SpecificUpdateEmoji} handleEmojis={setSpecificUpdateEmoji}\r\n                                    showKeyboard={SpecificUpdateTags} handleKeyboard={setSpecificUpdateTags}\r\n                                    BtnType={SpecificUpdateBtnType} handleBtnType={setSpecificUpdateType}\r\n                                    BtnTitle={SpecificUpdateBtnTitle} handleBtnTitle={setSpecificUpdateTitle}\r\n                                    BtnValue={SpecificUpdateBtnValue} handleBtnValue={setSpecificUpdateValue}\r\n                                    Btns={SpecificUpdateBtns} handleBtns={setSpecificUpdateBtns}\r\n                                    reset={resetUpdateSpecific}\r\n                                    platform={props.wizardSelectedPage.platform}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"mr-2 ml-2 mt-2 mb-2 d-flex\">\r\n                                <div className=\"ml-auto mb-2 py-3 px-3 wizard-config-update-btn\" onClick={() => updateProduct(props.wizardIdProject)}>Update</div>\r\n                            </div>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Overlay>\r\n            </div>\r\n\r\n            {/* Categories Modal */}\r\n            <Modal show={CategorieModal} onHide={handleCategoriesModal} centered>\r\n                <Modal.Body>          \r\n                    <Row className=\"d-flex mb-3\">\r\n                        <IoIosClose className=\"ml-auto mr-3\" color={'#9F9F9F'} size={'28'} onClick={handleCategoriesModal} style={{cursor: 'pointer'}} />\r\n                    </Row>\r\n\r\n                    <Row className=\"d-flex mb-3\">\r\n                        <p className=\"m-auto wizard-config-intent-title\">Please specify the category</p>\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\">\r\n                        <Col lg={1} />\r\n\r\n                        <Col lg={10} className=\"d-flex justify-content-between p-0 mx-0\">\r\n                            <Col lg={8} className=\"d-flex\">\r\n                                {showModalInput && \r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"mr-auto w-100 my-auto add-new-category-input-container\" \r\n                                        onChange={(e) => setNewCategory(e.target.value)}\r\n                                        value={newCategory}\r\n                                        // onKeyDown={(e) => e.key === 'Enter' && pushNewCategory()}\r\n                                    />\r\n                                }\r\n                            </Col>\r\n\r\n                            <Col lg={4} className=\"d-flex\">\r\n                                {!showModalInput\r\n                                &&\r\n                                <p className=\"ml-auto my-auto wizard-config-intent-name\" style={{cursor: 'pointer'}} onClick={() => setShowModalInput(true)}>\r\n                                    create new\r\n                                </p>\r\n                                }\r\n                            </Col>\r\n                        </Col>\r\n\r\n                        <Col lg={1} />\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col lg={1} />\r\n\r\n                        <Col lg={10}>\r\n                            <Form.Group className=\"d-flex w-100\">\r\n                                <Form.Control \r\n                                    className=\"wizard-config-intent-title\" \r\n                                    as=\"select\" \r\n                                    disabled={showModalInput || allCategories.length === 0} \r\n                                    onChange={(e) => setCategorySelected(e.target.value)}\r\n                                    value={categorySelected} \r\n                                    custom\r\n                                >\r\n                                    <option className=\"wizard-config-intent-title\">Choose Category...</option>\r\n                                    {allCategories.length > 0 \r\n                                    && \r\n                                    allCategories.map((category,index) => \r\n                                        <option key={index} className=\"wizard-config-intent-title\" value={category.name}>{category.name}</option>\r\n                                    )}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                        <Col lg={1} /> \r\n                    </Row>\r\n                    \r\n                    <Row className=\"mb-3\">\r\n                        {showModalInput\r\n                        ?\r\n                        <div \r\n                            className=\"m-auto mb-2 py-3 px-4 wizard-config-update-btn\" \r\n                            style={{backgroundColor: '#009EE3', cursor:'pointer' }} \r\n                            onClick={() => pushNewCategory()}\r\n                        >\r\n                        Create\r\n                        </div>\r\n                        :\r\n                        <div \r\n                        className=\"m-auto mb-2 py-3 px-4 wizard-config-update-btn\" \r\n                        style={{backgroundColor: allCategories.length > 0 && categorySelected ? '#009EE3' : '#707070', cursor: allCategories.length > 0 && categorySelected ? 'pointer' : 'not-allowed', }} \r\n                        onClick={() => allCategories.length > 0 && categorySelected ? addNewProductViaModal(props.wizardIdProject) : null}\r\n                        >\r\n                        Add\r\n                        </div>\r\n                        }\r\n                        {/* <div \r\n                            className=\"m-auto mb-2 py-3 px-4 wizard-config-update-btn\" \r\n                            style={{backgroundColor: allCategories.length > 0 && categorySelected ? '#009EE3' : '#707070', cursor: allCategories.length > 0 && categorySelected ? 'pointer' : 'not-allowed', }} \r\n                            onClick={() => allCategories.length > 0 && categorySelected ? addNewProductViaModal(props.wizardIdProject) : null}\r\n                        >\r\n                        Add\r\n                        </div> */}\r\n                    </Row>\r\n                </Modal.Body>\r\n            </Modal>\r\n            \r\n        </Col>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    wizardIdProject: state.wizardR.wizardIdProject,\r\n    wizardIntentType: state.wizardR.wizardIntentType,\r\n    wizardSelectedPage: state.wizardR.wizardSelectedPage,\r\n    wizardSelectedPost: state.wizardR.wizardSelectedPost,\r\n    wizardExistingProjectIntents: state.wizardR.wizardExistingProjectIntents,\r\n    // wizardStep: state.wizardR.wizardStep,\r\n})\r\n\r\nexport default connect(mapStateToProps, { addGenericResponse, updateGenericResponse })(WizardIntentDetails)\r\n\r\n\r\n/**\r\n *\r\n * \r\n * \r\n *  {\r\n        products.length > 0 &&\r\n        products[props.indexOfIntent].products.map((product,index) => \r\n            <Col key={index} lg={5} className={product.default ? \"d-flex flex-row mb-3 py-2 wizard-config-product-box-exist\" : \"d-flex flex-row mb-3 py-2 wizard-config-product-box\"}>\r\n                {\r\n                    product.product.length > 8\r\n                    ?\r\n                    <p data-for='entityTip' data-tip={product.product} className=\"m-auto wizard-config-product-name\">{product.product.substring(0,7)}...</p>\r\n                    :\r\n                    <p className={product.default ? \"m-auto wizard-config-product-name-exist\" : \"m-auto wizard-config-product-name\"}>\r\n                        {product.product}\r\n                    </p>\r\n                }\r\n                <AiOutlineCloseCircle className=\"my-auto ml-1\" color={\"#F49BCC\"} size={\"20\"} style={{cursor: 'pointer'}} onClick={() => deleteProduct(product,index)} />\r\n                <ReactTooltip id='entityTip' textColor='#fff' backgroundColor='#E5007D' />\r\n            </Col> \r\n        )\r\n    }  \r\n * \r\n * {\r\n    products.length > 0 &&\r\n    products.map((product,index) => \r\n\r\n        <Col key={index} lg={5} className=\"d-flex flex-row mb-3 py-2 wizard-config-product-box\">\r\n            {\r\n                product.entity.length > 8\r\n                ?\r\n                <p data-for='entityTip' data-tip={product.entity} className=\"m-auto wizard-config-product-name\">{product.entity.substring(0,7)}...</p>\r\n                :\r\n                <p className=\"m-auto wizard-config-product-name\">{product.entity}</p>\r\n            }\r\n            <AiOutlineCloseCircle className=\"my-auto ml-1\" color={\"#F49BCC\"} size={\"20\"} style={{cursor: 'pointer'}} onClick={() => deleteProduct(product,index)} />\r\n            <ReactTooltip id='entityTip' textColor='#fff' backgroundColor='#E5007D' />\r\n        </Col> \r\n    )\r\n}   \r\n* \r\n * \r\n * \r\n * Generic Input\r\n <div className=\"mr-2 ml-2 mt-2 mb-2\">\r\n <label className=\"wizard-config-textarea-label\">Generic Response</label>\r\n <Col lg={12}>\r\n     <Row className=\"d-flex mb-1\">\r\n         <div className=\"d-flex mr-2\">\r\n             <Image src={showGenericTags ? BALISE_ICON_ACTIVE : BALISE_ICON} onClick={handleGenericTagsPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '19px', cursor: 'pointer'}} />    \r\n         </div>                                \r\n\r\n         <div className=\"d-flex mr-2\">\r\n             <Image src={showEmojiPickerGeneric ? EMO_ICON_ACTIVE : EMO_ICON} onClick={handleGenericEmojiPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '18px', cursor: 'pointer'}} />\r\n         </div>\r\n\r\n         <div className=\"d-flex mr-2\">\r\n             <Image src={showKeyBoardGeneric ? LETTER_ICON_ACTIVE : LETTER_ICON} onClick={handleGenericKeyboardPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '21px', cursor: 'pointer'}} />\r\n             \r\n             {showKeyBoardGeneric &&\r\n                 <div className=\"wizard-config-keyboard-container\">\r\n                     <Keyboard onChange={(input) => handleArabicKeyboardChange(input,\"generic\")} onKeyPress={(button) => onKeyPress(button,\"generic\")} layout={layout} />\r\n                 </div>\r\n             }\r\n             {showEmojiPickerGeneric &&\r\n                 <div className=\"wizard-config-emoji-container\" >\r\n                     <Picker onEmojiClick={(e,obj) => onEmojiClick(e,obj,\"generic\")} />\r\n                 </div>\r\n             }\r\n         </div>\r\n     </Row>\r\n </Col>\r\n <textarea onChange={(e) => setGenericResponse(e.target.value)} onFocus={() => console.log(\"Hey I'm Focused\")} value={genericResponse} className=\"wizard-config-textarea\" rows=\"5\"/>\r\n</div>\r\n\r\n\r\n\r\n Generic Tags modal \r\n<Modal show={showGenericTags} size=\"sm\" centered>\r\n<Row className=\"d-flex w-100\">\r\n    <IoIosClose className=\"ml-auto my-auto pt-1\" color={'#9F9F9F'} size={30} onClick={() => setShowGenericTags(false)} style={{cursor: 'pointer'}} />\r\n</Row>\r\n\r\n<Row className=\"d-flex w-100\">\r\n    <h3 className=\"m-auto wizard-config-intent-title\">Choose one tag variable</h3>\r\n</Row>\r\n\r\n<Modal.Body>  \r\n    <Row className=\"d-flex\">\r\n        <Col xs={12} className=\"m-auto d-flex\">\r\n            <p className=\"m-auto wizard-config-tag\" onClick={() => pushSelectedTag('##FIRST_NAME##',\"generic\")}>First Name</p>\r\n        </Col>\r\n        <Col xs={12} className=\"m-auto d-flex\">\r\n            <p className=\"m-auto wizard-config-tag\" onClick={() => pushSelectedTag('##LAST_NAME##',\"generic\")}>Last Name</p>\r\n        </Col>\r\n        <Col xs={12} className=\"m-auto d-flex\">\r\n            <p className=\"m-auto wizard-config-tag\" onClick={() => pushSelectedTag('##FULL_NAME##',\"generic\")}>Full Name</p>\r\n        </Col>\r\n        <Col xs={12} className=\"m-auto d-flex\">\r\n            <p className=\"m-auto wizard-config-tag\" onClick={() => pushSelectedTag('##PAGE_NAME##',\"generic\")}>Page Name</p>\r\n        </Col>\r\n    </Row>\r\n</Modal.Body>\r\n</Modal>\r\n\r\n  FUNCTIONS \r\n    // Generic :\r\n    const handleGenericTagsPopover = (event) => {\r\n        setShowEmojiPickerGeneric(false);\r\n        setShowKeyBoardGeneric(false);\r\n        setShowGenericTags(!showGenericTags);\r\n        setTargetGenericTags(event.target);\r\n\r\n        //Specific\r\n        setShowSpecificTags(false);\r\n        setShowEmojiPicker(false);\r\n        setShowKeyBoard(false);\r\n    };\r\n\r\n    const handleGenericKeyboardPopover = () => {\r\n        setShowEmojiPickerGeneric(false);\r\n        setShowGenericTags(false);\r\n        setShowKeyBoardGeneric(!showKeyBoardGeneric);\r\n\r\n        //Specific\r\n        setShowSpecificTags(false);\r\n        setShowEmojiPicker(false);\r\n        setShowKeyBoard(false);\r\n    };\r\n\r\n    const handleGenericEmojiPopover = () => {\r\n        setShowGenericTags(false);\r\n        setShowKeyBoardGeneric(false);\r\n        setShowEmojiPickerGeneric(!showEmojiPickerGeneric);\r\n\r\n        //Specific\r\n        setShowSpecificTags(false);\r\n        setShowEmojiPicker(false);\r\n        setShowKeyBoard(false);\r\n    };\r\n\r\n\r\n\r\n     Specific Tags Popover \r\n    <div ref={refSepecificTags}>\r\n    <Overlay\r\n        show={showSpecificTags}\r\n        target={targetSpecificTags}\r\n        placement=\"top\"\r\n        container={refSepecificTags.current}\r\n        containerPadding={20}\r\n    >\r\n        <Row className=\"d-flex\" style={{ width: '200px', height: '200px', background: '#fff', borderRadius: '0.3rem', marginBottom: \"9px\"}}>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\">First Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\">Last Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\">Full Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\">Page Name</p>\r\n            </Col>\r\n        </Row>\r\n    </Overlay>\r\n</div>\r\n\r\n\r\n const handleSpecificKeyboardPopover = () => {\r\n        // Generic\r\n        setShowEmojiPickerGeneric(false);\r\n        setShowKeyBoardGeneric(false);\r\n        setShowGenericTags(false);\r\n        \r\n        //Specific\r\n        setShowSpecificTags(false);\r\n        setShowEmojiPicker(false);\r\n        setShowKeyBoard(!showKeyBoard);\r\n    };\r\n\r\n    const handleSpecificEmojiPopover = () => {\r\n        // Generic\r\n        setShowEmojiPickerGeneric(false);\r\n        setShowKeyBoardGeneric(false);\r\n        setShowGenericTags(false);\r\n        \r\n        //Specific\r\n        setShowSpecificTags(false);\r\n        setShowKeyBoard(false);\r\n        setShowEmojiPicker(!showEmojiPicker);\r\n    };\r\n\r\n    const handleSpecificTagsPopover = (event) => {\r\n        // Generic\r\n        setShowEmojiPickerGeneric(false);\r\n        setShowKeyBoardGeneric(false);\r\n        setShowGenericTags(false);\r\n\r\n        // Specific\r\n        setShowEmojiPicker(false);\r\n        setShowKeyBoard(false);\r\n        SpecificPopover(false);\r\n        setShowSpecificTags(true);\r\n\r\n    };\r\n\r\n     const handleArabicKeyboardChange = (input,type) => {\r\n        if(type === \"generic\") {\r\n            let newGenericResponse = `${genericResponse}${input.charAt(input.length - 1)}`;\r\n            setGenericResponse(newGenericResponse);\r\n        } else {\r\n            let newSpecifiResponse = `${SpecificResponse}${input.charAt(input.length - 1)}`;\r\n            SetSpecificResponse(newSpecifiResponse);\r\n        }\r\n    };\r\n    \r\n    const onKeyPress = (button,type) => {\r\n        if(type === \"generic\") {\r\n            if (button.toString() == \"{enter}\") {\r\n                setShowKeyBoardGeneric(false);\r\n            }\r\n        } else {\r\n            if (button.toString() == \"{enter}\") {\r\n                setShowKeyBoard(false);\r\n            }\r\n        }\r\n    };\r\n    \r\n    const onEmojiClick = (event, emojiObject,type) => {\r\n        if(type === \"generic\") {\r\n            let newGenericResponse = `${genericResponse}${emojiObject.emoji}`;\r\n            setGenericResponse(newGenericResponse);\r\n        } else {\r\n            let newSpecifiResponse = `${SpecificResponse}${emojiObject.emoji}`;\r\n            SetSpecificResponse(newSpecifiResponse);\r\n        }\r\n    };\r\n\r\n    const pushSelectedTag = (tag,type) => {\r\n\r\n        if(type === \"generic\") {\r\n            let newGenericResponse = `${genericResponse} ${tag} `;\r\n            setGenericResponse(newGenericResponse);\r\n            setShowGenericTags(false);\r\n        } else {\r\n            let newSpecifiResponse = `${SpecificResponse} ${tag} `;\r\n            SetSpecificResponse(newSpecifiResponse);\r\n            setShowSpecificTags(false);\r\n        }\r\n    };\r\n\r\n\r\n    {/* Specific Tags modal \r\n    <Modal show={showSpecificTags} size=\"sm\" centered>   \r\n    <Row className=\"d-flex w-100\">\r\n        <IoIosClose className=\"ml-auto my-auto pt-1\" color={'#9F9F9F'} size={30} onClick={() => { setShowSpecificTags(false); SpecificPopover(true); }} style={{cursor: 'pointer'}} />\r\n    </Row>\r\n\r\n    <Row className=\"d-flex w-100\">\r\n        <h3 className=\"m-auto wizard-config-intent-title\">Choose one tag variable</h3>\r\n    </Row>\r\n   \r\n    <Modal.Body>  \r\n        <Row className=\"d-flex\">\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\" onClick={() => { pushSelectedTag('##FIRST_NAME##', \"specific\"); setShow(true); }}>First Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\" onClick={() => { pushSelectedTag('##LAST_NAME##', \"specific\"); setShow(true); }}>Last Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\" onClick={() => { pushSelectedTag('##FULL_NAME##', \"specific\"); setShow(true); }}>Full Name</p>\r\n            </Col>\r\n            <Col xs={12} className=\"m-auto d-flex\">\r\n                <p className=\"m-auto wizard-config-tag\" onClick={() => { pushSelectedTag('##PAGE_NAME##', \"specific\"); setShow(true); }}>Page Name</p>\r\n            </Col>\r\n        </Row>\r\n    </Modal.Body>\r\n</Modal>\r\n\r\n{/* Specific Btns (Quicks replies Modal) \r\n<Modal show={showButtonsModal} size=\"sm\" centered>   \r\n    <Modal.Body>  \r\n        <Row className=\"justify-content-center\">\r\n            <Col md={12}>\r\n                <Row>\r\n                    <Col md={12} className=\"mt-2 mb-3\">\r\n                        <Form.Control as=\"select\" onChange={(e) => setQuickReplyType(e.target.value)} defaultValue=\"url\">\r\n                            <option value=\"url\">Url</option>\r\n                            <option value=\"call\">Call</option>\r\n                        </Form.Control>\r\n                    </Col>\r\n                    \r\n                    <Col md={12} className=\"mt-2\">\r\n                        <Row className=\"d-flex\">\r\n                            <Col md={12}>\r\n                                <Form.Control type={\"text\"} onChange={(e) => setQuickReplyTitle(e.target.value)} value={quickReplyTitle}  placeholder=\"Title\" />\r\n                            </Col>\r\n\r\n                            <Col md={12} className=\"d-flex\">\r\n                                <p className=\"ml-auto wizard-config-input-feedback\">Remaining characters: 20</p>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Col md={12} className=\"mb-2\">\r\n                        <Form.Control type={quickReplyType === \"url\" ? \"text\" : \"number\"} onChange={(e) => setQuickReplyValue(e.target.value)} value={quickReplyValue}  placeholder={quickReplyType === \"url\" ? \"www.example.com\" : \"(+216) 99 999 999\"}  />\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n\r\n            <Col md={11} className=\"d-flex pl-1\">\r\n                <div className=\"wizard-pages-active-btn py-3 px-5\" onClick={() => addNewQuickReply()}>\r\n                    OK\r\n                </div>\r\n            </Col>\r\n           \r\n        </Row>\r\n    </Modal.Body>\r\n</Modal>\r\n\r\n\r\n\r\n <div className=\"m-2\">\r\n    <label className=\"wizard-config-textarea-label\">Specific response</label>\r\n    <Row>\r\n            <Col lg={12}>\r\n            <Row className=\"d-flex mb-1 ml-2\">\r\n                <div className=\"d-flex mr-2\">\r\n                    <Image src={showSpecificTags ? BALISE_ICON_ACTIVE : BALISE_ICON} onClick={handleSpecificTagsPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '19px', cursor: 'pointer'}} />    \r\n                </div>                                \r\n\r\n                <div className=\"d-flex mr-2\">\r\n                    <Image src={showEmojiPicker ? EMO_ICON_ACTIVE : EMO_ICON} onClick={handleSpecificEmojiPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '18px', cursor: 'pointer'}} />\r\n                </div>\r\n\r\n                <div className=\"d-flex mr-2\">\r\n                    <Image src={showKeyBoard ? LETTER_ICON_ACTIVE : LETTER_ICON} onClick={handleSpecificKeyboardPopover} className=\"m-auto my-agents-msgs-tiny-icon\" style={{ width: '21px', cursor: 'pointer'}} />\r\n                    \r\n                    {showKeyBoard &&\r\n                        <div className=\"wizard-config-keyboard-container\">\r\n                            <Keyboard onChange={handleArabicKeyboardChange} onKeyPress={onKeyPress} layout={layout} />\r\n                        </div>\r\n                    }\r\n                    {showEmojiPicker &&\r\n                        <div className=\"wizard-config-emoji-container\" >\r\n                            <Picker onEmojiClick={onEmojiClick} />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Row>\r\n        </Col> \r\n\r\n        <Col lg={12} className=\"mb-2\">\r\n        <textarea onChange={(e) => setSpecificResponse(e.target.value)} value={SpecificResponse} className=\"wizard-config-textarea\" rows=\"5\"/>\r\n        <hr style={{borderColor: '#B4B4B4', borderWidth: '1.5px'}}/>\r\n    </Col> \r\n    \r\n        Quick replies \r\n        <Col lg={12} className=\"d-flex flex-row mb-2\">\r\n    \r\n        {quickReplies.map((quickReply,index) => \r\n            <Col key={index} lg={3} className=\"mr-2\">\r\n                <Row className=\"wizard-config-quick-replies-btn py-1\">\r\n                    <p className=\"m-auto\" data-for='quickReplyTip' data-tip={quickReply.value}>{quickReply.type}</p>\r\n                    <AiOutlineCloseCircle className=\"m-auto\" color={\"white\"} size={\"17\"} style={{cursor: 'pointer'}} onClick={() => deleteQuickReply(index)} />\r\n                </Row>\r\n                <ReactTooltip id='quickReplyTip' textColor='#fff' backgroundColor='#009EE3' />\r\n            </Col>\r\n        )}\r\n\r\n        // ADD BUTTON\r\n        {quickReplies.length < 3\r\n        &&\r\n        <Col lg={3}>\r\n            <Row \r\n                className=\"wizard-config-quick-replies-btn py-1\" \r\n                \r\n                onClick={() =>{ setShowButtonsModal(true); setShow(false); }}\r\n            >\r\n                <p className=\"m-auto\">Add button</p>\r\n            </Row>\r\n        </Col>\r\n        }\r\n\r\n    </Col>\r\n</Row>\r\n</div>\r\n\r\n */"]},"metadata":{},"sourceType":"module"}