{"ast":null,"code":"import axios from 'axios';\nimport { host } from '../../config';\nexport const removeSynonym = (synonymValue, categorySelected, product, indexProduct, idPage) => {\n  return dispatch => {\n    let objectToSend = {\n      index: indexProduct,\n      id: product._id,\n      synonym: synonymValue // idEntity : categorySelected._id,\n      // idChildren : product._id,\n      // synonyms: synonymValue,\n\n    };\n    console.log(\"Let's removeSynonym to the product => \", objectToSend); // return axios.put(host + `/api/v1/secure/pages/synonymssupdate/${idPage}`,objectToSend,{\n    //     headers: {\n    //         'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n    //     }\n    // })\n    // .then(res => {\n    //     console.log(\"removeSynonym response api =>\", res.data.data);\n    //     let categories = res.data.data;\n    //     if(categories.length > 0) {\n    //         categories.map((cat,index) =>\n    //             cat.default === true && categories.splice(index,1)\n    //         );\n    //     };\n    //     dispatch({\n    //         type: 'GET_CATEGORIES',\n    //         payload: categories\n    //     });\n    //     // To update the existing products\n    //     let findCategorySelected = categories.find((cat) => {\n    //         return cat._id === categorySelected._id\n    //     })\n    //     if(findCategorySelected) {\n    //         dispatch({\n    //             type: 'SELECT_CATEGORIE',\n    //             payload: findCategorySelected\n    //         });\n    //     };\n    // })\n    // .catch((err) => {\n    //     console.log(\"removeSynonym error api =>\", err)\n    // });\n  };\n};\nexport const addSynonym = (synonymValue, categorySelected, product, idPage) => {\n  return dispatch => {\n    let objectToSend = {\n      idEntity: categorySelected._id,\n      idChildren: product._id,\n      synonyms: synonymValue\n    };\n    console.log(\"Let's addSynonym to the product => \", objectToSend);\n    return axios.put(host + `/api/v1/secure/pages/synonymssupdate/${idPage}`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"addSynonym response api =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      }); // To update the existing products\n\n      let findCategorySelected = categories.find(cat => {\n        return cat._id === categorySelected._id;\n      });\n\n      if (findCategorySelected) {\n        dispatch({\n          type: 'SELECT_CATEGORIE',\n          payload: findCategorySelected\n        });\n      }\n\n      ;\n    }).catch(err => {\n      console.log(\"addSynonym error api =>\", err);\n    });\n  };\n};\nexport const updateProductName = (newProductName, categorySelected, product, idPage) => {\n  return dispatch => {\n    let objectToSend = {\n      name: newProductName,\n      productName: categorySelected.name,\n      id: categorySelected._id,\n      idChildren: product._id\n    }; // console.log(\"Let's update the product => \", objectToSend);\n\n    return axios.put(host + `/api/v1/secure/pages/contentupdate/${idPage}`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"updateProductName response api =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      }); // To update the existing products\n\n      let findCategorySelected = categories.find(cat => {\n        return cat._id === categorySelected._id;\n      });\n\n      if (findCategorySelected) {\n        dispatch({\n          type: 'SELECT_CATEGORIE',\n          payload: findCategorySelected\n        });\n      }\n\n      ;\n    }).catch(err => {\n      console.log(\"updateProductName error api =>\", err);\n    });\n  };\n};\nexport const updateCategoryName = (categorySelected, categoryName, idPage) => {\n  return dispatch => {\n    let objectToSend = {\n      id: categorySelected._id,\n      name: categoryName\n    };\n    console.log(\"Let's update the category\", objectToSend, 'id Page', idPage);\n    return axios.put(host + `/api/v1/secure/pages/nameentiteupdate/${idPage}`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"updateCategoryName response api =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      });\n    }).catch(err => {\n      console.log(\"updateCategoryName error api =>\", err);\n    });\n  };\n};\nexport const addCategory = objectToSend => {\n  return dispatch => {\n    // console.log(\"add New category\", objectToSend);\n    return axios.post(host + `/api/v1/secure/pages/entities/add/${objectToSend.idPage}`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"addCategory response api =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      });\n    }).catch(err => {\n      console.log(\"addCategory error api =>\", err);\n    });\n  };\n};\nexport const addProductInCategory = (category, page, newProductName) => {\n  return dispatch => {\n    let objectToSend = {\n      id: category._id,\n      entity: {\n        synonyms: [newProductName],\n        content: newProductName\n      }\n    }; // console.log(\"add New Product in category\", objectToSend);\n\n    return axios.put(host + `/api/v1/secure/pages/valuesadd/${page.id}`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"addProductInCategory response api =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      }); // To update the existing products\n\n      let findCategorySelected = categories.find(cat => {\n        return cat._id === category._id;\n      });\n\n      if (findCategorySelected) {\n        dispatch({\n          type: 'SELECT_CATEGORIE',\n          payload: findCategorySelected\n        });\n      }\n\n      ;\n    }).catch(err => {\n      console.log(\"addProductInCategory error api =>\", err);\n    });\n  };\n};\nexport const deleteCategory = (category, page) => {\n  return dispatch => {\n    // console.log(\"Rak bech tfasakh l category hedhu =>\", category);\n    // console.log(\"Rak bech tfasakh l category men page hedhi =>\", page);\n    let objectToSend = {\n      id: category._id\n    };\n    return axios.put(host + `/api/v1/secure/pages/entiteremove/${page.id}`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"deleteCategory response api =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      }); // dispatch({\n      //     type: 'GET_CATEGORIES',\n      //     payload: categories\n      // });\n    }).catch(err => {\n      console.log(\"deleteCategory error api =>\", err);\n    });\n  };\n};\nexport const selectProduct = product => {\n  return dispatch => {\n    console.log(\"Redux selected Product =>\", product);\n    dispatch({\n      type: 'SELECT_PRODUCT',\n      payload: product\n    });\n  };\n};\nexport const selectCategory = (category, history) => {\n  return dispatch => {\n    // console.log(\"Redux selected Category! =>\", category);\n    dispatch({\n      type: 'SELECT_CATEGORIE',\n      payload: category\n    });\n    history.push('update-products');\n  };\n};\nexport const getCategories = page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/project/get/entitiesproject/${page.platform}/${page.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      // console.log(\"all Categories of this page => =>\", res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_CATEGORIES',\n        payload: categories\n      });\n    }).catch(err => console.log(\"err getCategories\", err));\n  };\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/myProductsActions.js"],"names":["axios","host","removeSynonym","synonymValue","categorySelected","product","indexProduct","idPage","dispatch","objectToSend","index","id","_id","synonym","console","log","addSynonym","idEntity","idChildren","synonyms","put","headers","localStorage","getItem","then","res","data","categories","length","map","cat","default","splice","type","payload","findCategorySelected","find","catch","err","updateProductName","newProductName","name","productName","updateCategoryName","categoryName","addCategory","post","addProductInCategory","category","page","entity","content","deleteCategory","selectProduct","selectCategory","history","push","getCategories","get","platform"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { host } from '../../config';\r\n\r\nexport const removeSynonym = (synonymValue, categorySelected, product, indexProduct, idPage) => {\r\n    return (dispatch) => {\r\n       \r\n        let objectToSend = {\r\n            index : indexProduct,\r\n            id : product._id,\r\n            synonym: synonymValue,\r\n\r\n            // idEntity : categorySelected._id,\r\n            // idChildren : product._id,\r\n            // synonyms: synonymValue,\r\n        }\r\n        console.log(\"Let's removeSynonym to the product => \", objectToSend);\r\n\r\n        // return axios.put(host + `/api/v1/secure/pages/synonymssupdate/${idPage}`,objectToSend,{\r\n        //     headers: {\r\n        //         'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n        //     }\r\n        // })\r\n        // .then(res => {\r\n        //     console.log(\"removeSynonym response api =>\", res.data.data);\r\n\r\n        //     let categories = res.data.data;\r\n\r\n        //     if(categories.length > 0) {\r\n        //         categories.map((cat,index) =>\r\n        //             cat.default === true && categories.splice(index,1)\r\n        //         );\r\n        //     };\r\n\r\n        //     dispatch({\r\n        //         type: 'GET_CATEGORIES',\r\n        //         payload: categories\r\n        //     });\r\n\r\n        //     // To update the existing products\r\n        //     let findCategorySelected = categories.find((cat) => {\r\n        //         return cat._id === categorySelected._id\r\n        //     })\r\n\r\n        //     if(findCategorySelected) {\r\n        //         dispatch({\r\n        //             type: 'SELECT_CATEGORIE',\r\n        //             payload: findCategorySelected\r\n        //         });\r\n        //     };\r\n        // })\r\n        // .catch((err) => {\r\n        //     console.log(\"removeSynonym error api =>\", err)\r\n        // });\r\n    };\r\n};\r\n\r\nexport const addSynonym = (synonymValue, categorySelected, product, idPage) => {\r\n    return (dispatch) => {\r\n        \r\n        let objectToSend = {\r\n            idEntity : categorySelected._id,\r\n            idChildren : product._id,\r\n            synonyms: synonymValue,\r\n        }\r\n        \r\n        console.log(\"Let's addSynonym to the product => \", objectToSend);\r\n\r\n        return axios.put(host + `/api/v1/secure/pages/synonymssupdate/${idPage}`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"addSynonym response api =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n\r\n            // To update the existing products\r\n            let findCategorySelected = categories.find((cat) => {\r\n                return cat._id === categorySelected._id\r\n            })\r\n\r\n            if(findCategorySelected) {\r\n                dispatch({\r\n                    type: 'SELECT_CATEGORIE',\r\n                    payload: findCategorySelected\r\n                });\r\n            };\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"addSynonym error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const updateProductName = (newProductName, categorySelected, product, idPage) => {\r\n    return (dispatch) => {\r\n        \r\n        let objectToSend = {\r\n            name : newProductName,\r\n            productName: categorySelected.name,\r\n            id : categorySelected._id,\r\n            idChildren : product._id,\r\n        }\r\n        \r\n        // console.log(\"Let's update the product => \", objectToSend);\r\n\r\n        return axios.put(host + `/api/v1/secure/pages/contentupdate/${idPage}`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"updateProductName response api =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n\r\n            // To update the existing products\r\n            let findCategorySelected = categories.find((cat) => {\r\n                return cat._id === categorySelected._id\r\n            })\r\n\r\n            if(findCategorySelected) {\r\n                dispatch({\r\n                    type: 'SELECT_CATEGORIE',\r\n                    payload: findCategorySelected\r\n                });\r\n            };\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"updateProductName error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const updateCategoryName = (categorySelected,categoryName,idPage) => {\r\n    return (dispatch) => {\r\n        \r\n        let objectToSend = {\r\n            id : categorySelected._id,\r\n            name: categoryName,\r\n        };\r\n        \r\n        console.log(\"Let's update the category\", objectToSend, 'id Page', idPage);\r\n        \r\n        return axios.put(host + `/api/v1/secure/pages/nameentiteupdate/${idPage}`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"updateCategoryName response api =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"updateCategoryName error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const addCategory = (objectToSend) => {\r\n    return (dispatch) => {\r\n        // console.log(\"add New category\", objectToSend);\r\n\r\n        return axios.post(host + `/api/v1/secure/pages/entities/add/${objectToSend.idPage}`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"addCategory response api =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"addCategory error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const addProductInCategory = (category,page,newProductName) => {\r\n    return (dispatch) => {\r\n     \r\n        let objectToSend = {\r\n            id: category._id,\r\n            entity: {\r\n                synonyms: [newProductName],\r\n                content: newProductName,\r\n            },\r\n        };\r\n\r\n        // console.log(\"add New Product in category\", objectToSend);\r\n\r\n        return axios.put(host + `/api/v1/secure/pages/valuesadd/${page.id}`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"addProductInCategory response api =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n\r\n            // To update the existing products\r\n            let findCategorySelected = categories.find((cat) => {\r\n                return cat._id === category._id\r\n            })\r\n\r\n            if(findCategorySelected) {\r\n                dispatch({\r\n                    type: 'SELECT_CATEGORIE',\r\n                    payload: findCategorySelected\r\n                });\r\n            };\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"addProductInCategory error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const deleteCategory = (category,page) => {\r\n    return (dispatch) => {\r\n        // console.log(\"Rak bech tfasakh l category hedhu =>\", category);\r\n        // console.log(\"Rak bech tfasakh l category men page hedhi =>\", page);\r\n        \r\n        let objectToSend = {\r\n            id: category._id\r\n        };\r\n\r\n        return axios.put(host + `/api/v1/secure/pages/entiteremove/${page.id}`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"deleteCategory response api =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n\r\n            // dispatch({\r\n            //     type: 'GET_CATEGORIES',\r\n            //     payload: categories\r\n            // });\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"deleteCategory error api =>\", err)\r\n        });\r\n    };\r\n};\r\n\r\nexport const selectProduct = (product) => {\r\n    return (dispatch) => {\r\n        console.log(\"Redux selected Product =>\", product);\r\n        \r\n        dispatch({\r\n            type: 'SELECT_PRODUCT',\r\n            payload: product,\r\n        });\r\n    };\r\n};\r\n\r\nexport const selectCategory = (category,history) => {\r\n    return (dispatch) => {\r\n        // console.log(\"Redux selected Category! =>\", category);\r\n        \r\n        dispatch({\r\n            type: 'SELECT_CATEGORIE',\r\n            payload: category\r\n        });\r\n        history.push('update-products');\r\n    };\r\n};\r\n\r\nexport const getCategories = (page) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + `/api/v1/secure/project/get/entitiesproject/${page.platform}/${page.id}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log(\"all Categories of this page => =>\", res.data.data);\r\n\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n            dispatch({\r\n                type: 'GET_CATEGORIES',\r\n                payload: categories\r\n            });\r\n        })\r\n        .catch((err) => console.log(\"err getCategories\", err))\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}