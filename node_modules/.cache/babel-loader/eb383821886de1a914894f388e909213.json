{"ast":null,"code":"var _jsxFileName = \"/usr/work/smart_front_oussema/src/dachboard/AgentDetail.js\";\nimport React from 'react';\nimport TopMenu from '../components/TopMenu';\nimport { connect } from 'react-redux';\nimport { getComments } from '../actions';\nimport { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport CommentsMatch from '../components/CommentsMatch';\nimport CommentsNotMatch from '../components/CommentsNotMatch';\nimport { useState } from 'react';\n\nfunction AgentDetail(props) {\n  const [show, setshow] = useState(true);\n  useEffect(() => {\n    console.log('id ', props.match.params.id);\n    props.comments(props.match.params.id);\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(TopMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      padding: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"List Recieved Messages\"), React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"comments\",\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, show ? React.createElement(CommentsMatch, {\n    comments: props.comments,\n    setshow: setshow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }) : React.createElement(CommentsNotMatch, {\n    comments: props.comments,\n    setshow: setshow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"chat\",\n    style: {\n      flex: 3\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \" chatt\"))));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    comments: id => dispatch(getComments(id))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    comments: state.comments\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(AgentDetail));","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/dachboard/AgentDetail.js"],"names":["React","TopMenu","connect","getComments","useEffect","withRouter","CommentsMatch","CommentsNotMatch","useState","AgentDetail","props","show","setshow","console","log","match","params","id","comments","padding","display","flex","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC,EAAtC;AACAP,IAAAA,KAAK,CAACQ,QAAN,CAAeR,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC,EAAlC;AACH,GAHQ,EAGN,EAHM,CAAT;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQV,IAAI,GACA,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAED,KAAK,CAACQ,QAA/B;AAAyC,IAAA,OAAO,EAAEN,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAEA,oBAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEF,KAAK,CAACQ,QAAlC;AAA4C,IAAA,OAAO,EAAEN,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJZ,CADJ,EAQI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAE;AAAES,MAAAA,IAAI,EAAE;AAAR,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,CAFJ,CAFJ,CADJ;AAkBH;;AACD,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AAErC,SAAO;AACHL,IAAAA,QAAQ,EAAGD,EAAD,IAAQM,QAAQ,CAACpB,WAAW,CAACc,EAAD,CAAZ;AADvB,GAAP;AAGH,CALD;;AAOA,MAAMO,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHP,IAAAA,QAAQ,EAAEO,KAAK,CAACP;AADb,GAAP;AAGH,CAJD;;AAKA,eAAeb,UAAU,CAACH,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCb,WAAlC,CAAD,CAAzB","sourcesContent":["import React from 'react'\r\nimport TopMenu from '../components/TopMenu'\r\nimport { connect } from 'react-redux'\r\nimport { getComments } from '../actions'\r\nimport { useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport CommentsMatch from '../components/CommentsMatch'\r\nimport CommentsNotMatch from '../components/CommentsNotMatch'\r\nimport { useState } from 'react'\r\n\r\nfunction AgentDetail(props) {\r\n    const [show, setshow] = useState(true)\r\n    useEffect(() => {\r\n        console.log('id ', props.match.params.id)\r\n        props.comments(props.match.params.id)\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <TopMenu />\r\n            <div style={{ padding: 50 }}>\r\n                <h3>List Recieved Messages</h3>\r\n                <div style={{ display: 'flex' }}>\r\n                    <div className=\"comments\" style={{ flex: 1 }}>\r\n                        {\r\n                            show ?\r\n                                <CommentsMatch comments={props.comments} setshow={setshow} /> :\r\n                                <CommentsNotMatch comments={props.comments} setshow={setshow} />\r\n                        }\r\n                    </div>\r\n                    <div className=\"chat\" style={{ flex: 3 }}> chatt</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        comments: (id) => dispatch(getComments(id))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        comments: state.comments\r\n    }\r\n}\r\nexport default withRouter(connect(null, mapDispatchToProps)(AgentDetail))\r\n"]},"metadata":{},"sourceType":"module"}