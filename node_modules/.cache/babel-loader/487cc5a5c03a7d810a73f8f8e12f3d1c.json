{"ast":null,"code":"var _jsxFileName = \"/usr/work/smart_front_oussema/src/app/Home/ManageProducts/AddSynonymProducts.js\";\nimport React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Row } from 'react-bootstrap';\nimport { MdAddCircleOutline } from 'react-icons/md';\nexport const AddSynonymProducts = props => {\n  const inputRef = useRef(null);\n  const [enableSynonymInput, setEnableSynonymInput] = useState(false);\n  const [Synonym, setSynonym] = useState('');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, enableSynonymInput ? /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex mx-auto\",\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    ref: inputRef,\n    className: \"add-new-product-input w-100\",\n    value: Synonym,\n    onChange: e => setSynonym(e.target.value),\n    onKeyDown: e => {\n      if (e.key === 'Enter') {\n        props.addSynonym(props.index, Synonym);\n        setSynonym('');\n        setEnableSynonymInput(false);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  })) : /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex mx-auto mb-3\",\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      setEnableSynonymInput(true);\n      inputRef.current.focus();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MdAddCircleOutline, {\n    className: \"my-auto mr-1\",\n    color: '#818E94',\n    size: '17',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, \"Add Synonym\")));\n};\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, {})(AddSynonymProducts);","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/app/Home/ManageProducts/AddSynonymProducts.js"],"names":["React","useState","useRef","connect","Row","MdAddCircleOutline","AddSynonymProducts","props","inputRef","enableSynonymInput","setEnableSynonymInput","Synonym","setSynonym","cursor","e","target","value","key","addSynonym","index","current","focus","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SACIC,GADJ,QAEO,iBAFP;AAIA,SAASC,kBAAT,QAAmC,gBAAnC;AAGA,OAAO,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAEzC,QAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM,CAACO,kBAAD,EAAoBC,qBAApB,IAA6CT,QAAQ,CAAC,KAAD,CAA3D;AACA,QAAM,CAACU,OAAD,EAASC,UAAT,IAAuBX,QAAQ,CAAC,EAAD,CAArC;AAGA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIQ,kBAAkB,gBAEd,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,KAAK,EAAE;AAAEI,MAAAA,MAAM,EAAE;AAAV,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,GAAG,EAAEL,QAAxB;AAAkC,IAAA,SAAS,EAAC,6BAA5C;AAA0E,IAAA,KAAK,EAAEG,OAAjF;AAA0F,IAAA,QAAQ,EAAGG,CAAD,IAAOF,UAAU,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAArH;AAAuI,IAAA,SAAS,EAAGF,CAAD,IAAO;AAAE,UAAGA,CAAC,CAACG,GAAF,KAAU,OAAb,EAAsB;AAAEV,QAAAA,KAAK,CAACW,UAAN,CAAiBX,KAAK,CAACY,KAAvB,EAA6BR,OAA7B;AAAuCC,QAAAA,UAAU,CAAC,EAAD,CAAV;AAAgBF,QAAAA,qBAAqB,CAAC,KAAD,CAArB;AAA8B;AAAC,KAAzQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFc,gBAMd,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,KAAK,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAA5C;AAAmE,IAAA,OAAO,EAAE,MAAM;AAAEH,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AAA6BF,MAAAA,QAAQ,CAACY,OAAT,CAAiBC,KAAjB;AAA2B,KAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,kBAAD;AAAoB,IAAA,SAAS,EAAC,cAA9B;AAA6C,IAAA,KAAK,EAAE,SAApD;AAA+D,IAAA,IAAI,EAAE,IAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAG,IAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CARR,CADJ;AAgBH,CAvBM;;AAyBP,MAAMC,eAAe,GAAIC,KAAD,KAAY,EAAZ,CAAxB;;AAIA,eAAepB,OAAO,CAACmB,eAAD,EAAiB,EAAjB,CAAP,CAA4BhB,kBAA5B,CAAf","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n    Row,\r\n} from 'react-bootstrap';\r\n\r\nimport { MdAddCircleOutline } from 'react-icons/md';\r\n\r\n\r\nexport const AddSynonymProducts = (props) => {\r\n\r\n    const inputRef = useRef(null);\r\n    const [enableSynonymInput,setEnableSynonymInput] = useState(false);\r\n    const [Synonym,setSynonym] = useState('');\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n            enableSynonymInput\r\n                ?\r\n                <Row className=\"d-flex mx-auto\" style={{ cursor: 'pointer' }}>\r\n                    <input type=\"text\" ref={inputRef} className=\"add-new-product-input w-100\" value={Synonym} onChange={(e) => setSynonym(e.target.value)} onKeyDown={(e) => { if(e.key === 'Enter') { props.addSynonym(props.index,Synonym); setSynonym(''); setEnableSynonymInput(false) }}} />\r\n                </Row>\r\n                :\r\n                <Row className=\"d-flex mx-auto mb-3\" style={{ cursor: 'pointer' }} onClick={() => { setEnableSynonymInput(true); inputRef.current.focus(); }}>\r\n                    <MdAddCircleOutline className=\"my-auto mr-1\" color={'#818E94'} size={'17'} />\r\n                    <p className=\"my-auto\">Add Synonym</p>\r\n                </Row>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps,{})(AddSynonymProducts)\r\n"]},"metadata":{},"sourceType":"module"}