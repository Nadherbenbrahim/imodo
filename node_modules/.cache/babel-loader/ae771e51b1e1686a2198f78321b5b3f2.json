{"ast":null,"code":"import axios from 'axios';\nimport { host } from '../../config';\nexport const getExistingProject = () => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/get/project/${idproject}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('getExistingProject response redux =>', res.data);\n    }).catch(err => console.log(\"ERRRROOOOR while getExistingProject =>\", err));\n  };\n};\nexport const addGenericResponse = (project, idproject) => {\n  return dispatch => {\n    return axios.put(host + `/api/v1/secure/project/generiqueadd/${idproject}`, project, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('addReponseGeneric Redux =>', res.data);\n    }).catch(err => console.log(\"AddGenericResponse errorrr\", err));\n  };\n};\nexport const updateGenericResponse = (project, idproject) => {\n  return dispatch => {\n    return axios.put(host + `/api/v1/secure/project/generiqueupdate/${idproject}`, project, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => console.log('updateReponseGeneric redux ', res.data)).catch(err => console.log(\"Update GenericResponse err\", err));\n  };\n};\nexport const addProject = (wizardSelectedPage, wizardSelectedPost) => {\n  return dispatch => {\n    let post;\n\n    if (wizardSelectedPage.platform === \"instagram\") {\n      post = {\n        post: {\n          idPage: wizardSelectedPage.id,\n          name: wizardSelectedPage.name,\n          typePage: wizardSelectedPage.platform,\n          idPost: wizardSelectedPost !== null ? wizardSelectedPost.idPost : []\n        }\n      };\n    } else {\n      post = {\n        post: {\n          idPage: wizardSelectedPage.id,\n          name: wizardSelectedPage.name,\n          typePage: wizardSelectedPage.platform,\n          idPost: wizardSelectedPost !== null ? wizardSelectedPost.id : []\n        }\n      };\n    }\n\n    return axios.post(host + `/api/v1/secure/project/add`, post, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log(\"Ya nour you are sending this to add the project\", post);\n      console.log('project added his id is =>', res.data.data);\n      dispatch({\n        type: 'ADD_ID_PROJECT',\n        payload: res.data.data\n      });\n    }).catch(err => {\n      console.log(\"addProject action\", err);\n    });\n  };\n};\nexport const getAllIntents = intentType => {\n  return dispatch => {\n    return axios.get(host + (intentType === \"generic\" ? `/api/v1/intent/generiqueintent/all` : `/api/v1/intent/defaulintent/all`), {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      // console.log(`get ${intentType} intents`, res.data.data);\n      let obj = [];\n      let newData = {};\n\n      for (let i = 0; i < res.data.data.length; i++) {\n        obj = {\n          [res.data.data[i]['intent']]: {\n            id: res.data.data[i]['id'],\n            name: res.data.data[i]['intent'],\n            date: res.data.data[i]['date']\n          }\n        };\n        newData = { ...newData,\n          ...obj\n        };\n      }\n\n      ;\n      /*\r\n           if u want full intent object send newData :D \r\n          // console.log(\"Hey new data filtered :D\", newData);\r\n      */\n\n      dispatch({\n        type: 'GET_ALL_WIZARD_INTENTS',\n        payload: Object.keys(newData)\n      });\n    }).catch(err => console.log(\"Get all intents action\", err));\n  };\n};\nexport const getWizardPagesPosts = wizardPage => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/post/get/${wizardPage.id}/${wizardPage.platform}/all`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      // console.log(\"posts ya haaaaaiiderrr\",res.data.data);\n      // res.data.data.map((post, index) => {\n      //     let createdTime = new Date(Date.parse(post.created_time));\n      //     console.log(index, ' :=> ', createdTime)\n      // });\n      // let toSort = res.data.data;\n      res.data.data.sort(function (a, b) {\n        // Turn your strings into dates, and then subtract them\n        // to get a value that is either negative, positive, or zero.\n        return new Date(Date.parse(b.created_time)) - new Date(Date.parse(a.created_time));\n      }); // console.log(\"Final\", toSort);\n\n      dispatch({\n        type: 'GET_WIZARD_PAGE_POSTS',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"getWizardPagesPosts \", err));\n  };\n};\nexport const setWizardSelectedPost = post => {\n  return async dispatch => {\n    dispatch({\n      type: 'SELECT_WIZARD_POST',\n      payload: post\n    });\n  };\n};\nexport const setWizardIntentType = (intentType, navigation) => {\n  return async dispatch => {\n    dispatch({\n      type: 'SELECT_WIZARD_INTENT_TYPE',\n      payload: intentType\n    });\n    navigation.push('/home/auto-wizard');\n  };\n};\nexport const setWizardSelectedPage = (platform, pageName, picture, idPage, accessToken, status) => {\n  return async dispatch => {\n    const selectedPage = {\n      platform: platform === \"insta\" ? \"instagram\" : \"facebook\",\n      name: pageName,\n      picture_url: picture !== null ? picture : `https://graph.facebook.com/v8.0/${idPage}/picture?access_token=${accessToken}`,\n      id: idPage,\n      accessToken: accessToken,\n      status: status\n    };\n    dispatch({\n      type: 'SELECT_WIZARD_PAGE',\n      payload: selectedPage\n    });\n  };\n};\nexport const nextSpecificWizardStep = step => {\n  return async dispatch => {\n    dispatch({\n      type: 'NEXT_SPECIFIC_WIZARD_STEP',\n      payload: step\n    });\n  };\n};\nexport const nextWizardStep = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'NEXT_WIZARD_STEP'\n    });\n  };\n};\nexport const prevWizardStep = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'PREV_WIZARD_STEP'\n    });\n  };\n};\nexport const resetWizardStep = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'RESET_WIZARD_STEP'\n    });\n  };\n};\nexport const resetَAllWizard = () => {\n  return async dispatch => {\n    dispatch({\n      type: 'RESET_ALL_WIZARD'\n    });\n  };\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/wizardActions.js"],"names":["axios","host","getExistingProject","dispatch","get","idproject","headers","localStorage","getItem","then","res","console","log","data","catch","err","addGenericResponse","project","put","updateGenericResponse","addProject","wizardSelectedPage","wizardSelectedPost","post","platform","idPage","id","name","typePage","idPost","type","payload","getAllIntents","intentType","obj","newData","i","length","date","Object","keys","getWizardPagesPosts","wizardPage","sort","a","b","Date","parse","created_time","setWizardSelectedPost","setWizardIntentType","navigation","push","setWizardSelectedPage","pageName","picture","accessToken","status","selectedPage","picture_url","nextSpecificWizardStep","step","nextWizardStep","prevWizardStep","resetWizardStep","resetَAllWizard"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,cAArB;AAGA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACpC,SAAQC,QAAD,IAAc;AACjB,WAAOH,KAAK,CAACI,GAAN,CAAUH,IAAI,GAAI,8BAA6BI,SAAU,EAAzD,EAA4D;AAC/DC,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADsD,KAA5D,EAKNC,IALM,CAKDC,GAAG,IAAI;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDF,GAAG,CAACG,IAAxD;AAEN,KARM,EAQJC,KARI,CAQGC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsDG,GAAtD,CARX,CAAP;AASH,GAVD;AAWH,CAZM;AAcP,OAAO,MAAMC,kBAAkB,GAAG,CAACC,OAAD,EAAUZ,SAAV,KAAwB;AACtD,SAAQF,QAAD,IAAc;AAEjB,WAAOH,KAAK,CAACkB,GAAN,CAAUjB,IAAI,GAAI,uCAAsCI,SAAU,EAAlE,EAAqEY,OAArE,EAA8E;AACjFX,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADwE,KAA9E,EAKNC,IALM,CAKDC,GAAG,IAAI;AAAGC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,GAAG,CAACG,IAA9C;AAAqD,KAL9D,EAMNC,KANM,CAMCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CG,GAA1C,CANT,CAAP;AAOH,GATD;AAUH,CAXM;AAaP,OAAO,MAAMI,qBAAqB,GAAG,CAACF,OAAD,EAAUZ,SAAV,KAAwB;AACzD,SAAQF,QAAD,IAAc;AAEjB,WAAOH,KAAK,CAACkB,GAAN,CAAUjB,IAAI,GAAI,0CAAyCI,SAAU,EAArE,EAAwEY,OAAxE,EAAiF;AACpFX,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AAD2E,KAAjF,EAKNC,IALM,CAKDC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,GAAG,CAACG,IAA/C,CALN,EAMNC,KANM,CAMCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CG,GAA1C,CANT,CAAP;AAOH,GATD;AAUH,CAXM;AAaP,OAAO,MAAMK,UAAU,GAAG,CAACC,kBAAD,EAAoBC,kBAApB,KAA2C;AACjE,SAAQnB,QAAD,IAAc;AAEjB,QAAIoB,IAAJ;;AAEA,QAAGF,kBAAkB,CAACG,QAAnB,KAAgC,WAAnC,EAAgD;AAC5CD,MAAAA,IAAI,GAAG;AACHA,QAAAA,IAAI,EAAG;AACHE,UAAAA,MAAM,EAAEJ,kBAAkB,CAACK,EADxB;AAEHC,UAAAA,IAAI,EAAEN,kBAAkB,CAACM,IAFtB;AAGHC,UAAAA,QAAQ,EAAEP,kBAAkB,CAACG,QAH1B;AAIHK,UAAAA,MAAM,EAAEP,kBAAkB,KAAK,IAAvB,GAA8BA,kBAAkB,CAACO,MAAjD,GAA0D;AAJ/D;AADJ,OAAP;AAQH,KATD,MASO;AACCN,MAAAA,IAAI,GAAG;AACHA,QAAAA,IAAI,EAAG;AACHE,UAAAA,MAAM,EAAEJ,kBAAkB,CAACK,EADxB;AAEHC,UAAAA,IAAI,EAAEN,kBAAkB,CAACM,IAFtB;AAGHC,UAAAA,QAAQ,EAAEP,kBAAkB,CAACG,QAH1B;AAIHK,UAAAA,MAAM,EAAEP,kBAAkB,KAAK,IAAvB,GAA8BA,kBAAkB,CAACI,EAAjD,GAAsD;AAJ3D;AADJ,OAAP;AAQP;;AAED,WAAO1B,KAAK,CAACuB,IAAN,CAAWtB,IAAI,GAAI,4BAAnB,EAA+CsB,IAA/C,EAAoD;AACvDjB,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AAD8C,KAApD,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ,EAA+DW,IAA/D;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,GAAG,CAACG,IAAJ,CAASA,IAAnD;AAEAV,MAAAA,QAAQ,CAAC;AACL2B,QAAAA,IAAI,EAAE,gBADD;AAELC,QAAAA,OAAO,EAAErB,GAAG,CAACG,IAAJ,CAASA;AAFb,OAAD,CAAR;AAIH,KAbM,EAaJC,KAbI,CAaEC,GAAG,IAAI;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,GAAjC;AACH,KAfM,CAAP;AAgBH,GAxCD;AAyCH,CA1CM;AA4CP,OAAO,MAAMiB,aAAa,GAAIC,UAAD,IAAgB;AACzC,SAAQ9B,QAAD,IAAc;AAEjB,WAAOH,KAAK,CAACI,GAAN,CAAUH,IAAI,IAAIgC,UAAU,KAAK,SAAf,GAA4B,oCAA5B,GAAmE,iCAAvE,CAAd,EAAwH;AAC3H3B,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADkH,KAAxH,EAKFC,IALE,CAKGC,GAAG,IAAI;AACT;AAEA,UAAIwB,GAAG,GAAG,EAAV;AACA,UAAIC,OAAO,GAAG,EAAd;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1B,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcwB,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3CF,QAAAA,GAAG,GAAG;AACJ,WAACxB,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcuB,CAAd,EAAiB,QAAjB,CAAD,GAA8B;AAC1BV,YAAAA,EAAE,EAAEhB,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcuB,CAAd,EAAiB,IAAjB,CADsB;AAE1BT,YAAAA,IAAI,EAAEjB,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcuB,CAAd,EAAiB,QAAjB,CAFoB;AAG1BE,YAAAA,IAAI,EAAE5B,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcuB,CAAd,EAAiB,MAAjB;AAHoB;AAD1B,SAAN;AAOAD,QAAAA,OAAO,GAAG,EAAE,GAAGA,OAAL;AAAc,aAAGD;AAAjB,SAAV;AACH;;AAAA;AAED;;;;;AAKA/B,MAAAA,QAAQ,CAAC;AACL2B,QAAAA,IAAI,EAAE,wBADD;AAELC,QAAAA,OAAO,EAAEQ,MAAM,CAACC,IAAP,CAAYL,OAAZ;AAFJ,OAAD,CAAR;AAKH,KAhCE,EAgCArB,KAhCA,CAgCOC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCG,GAAtC,CAhCf,CAAP;AAiCH,GAnCD;AAoCH,CArCM;AAuCP,OAAO,MAAM0B,mBAAmB,GAAIC,UAAD,IAAgB;AAC/C,SAAQvC,QAAD,IAAc;AAEjB,WAAOH,KAAK,CAACI,GAAN,CAAUH,IAAI,GAAI,2BAA0ByC,UAAU,CAAChB,EAAG,IAAGgB,UAAU,CAAClB,QAAS,MAAjF,EAAwF;AAC3FlB,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADkF,KAAxF,EAKNC,IALM,CAKDC,GAAG,IAAI;AACT;AAEA;AACA;AAEA;AACA;AAEA;AAEAA,MAAAA,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAc8B,IAAd,CAAmB,UAASC,CAAT,EAAWC,CAAX,EAAa;AAC5B;AACA;AACA,eAAO,IAAIC,IAAJ,CAASA,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACG,YAAb,CAAT,IAAuC,IAAIF,IAAJ,CAASA,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACI,YAAb,CAAT,CAA9C;AACH,OAJD,EAXS,CAmBT;;AAEA7C,MAAAA,QAAQ,CAAC;AACL2B,QAAAA,IAAI,EAAE,uBADD;AAELC,QAAAA,OAAO,EAAErB,GAAG,CAACG,IAAJ,CAASA;AAFb,OAAD,CAAR;AAIH,KA9BM,EA8BJC,KA9BI,CA8BGC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCG,GAApC,CA9BX,CAAP;AA+BH,GAjCD;AAkCH,CAnCM;AAqCP,OAAO,MAAMkC,qBAAqB,GAAI1B,IAAD,IAAU;AAC3C,SAAO,MAAOpB,QAAP,IAAoB;AAEvBA,IAAAA,QAAQ,CAAC;AACL2B,MAAAA,IAAI,EAAE,oBADD;AAELC,MAAAA,OAAO,EAAER;AAFJ,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAM2B,mBAAmB,GAAG,CAACjB,UAAD,EAAYkB,UAAZ,KAA2B;AAC1D,SAAO,MAAOhD,QAAP,IAAoB;AAEvBA,IAAAA,QAAQ,CAAC;AACL2B,MAAAA,IAAI,EAAE,2BADD;AAELC,MAAAA,OAAO,EAAEE;AAFJ,KAAD,CAAR;AAIAkB,IAAAA,UAAU,CAACC,IAAX,CAAgB,mBAAhB;AACH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMC,qBAAqB,GAAG,CAAC7B,QAAD,EAAU8B,QAAV,EAAmBC,OAAnB,EAA2B9B,MAA3B,EAAkC+B,WAAlC,EAA8CC,MAA9C,KAAyD;AAC1F,SAAO,MAAOtD,QAAP,IAAoB;AAEvB,UAAMuD,YAAY,GAAG;AACjBlC,MAAAA,QAAQ,EAAEA,QAAQ,KAAK,OAAb,GAAuB,WAAvB,GAAqC,UAD9B;AAEjBG,MAAAA,IAAI,EAAE2B,QAFW;AAGjBK,MAAAA,WAAW,EAAGJ,OAAO,KAAK,IAAZ,GAAmBA,OAAnB,GAA8B,mCAAkC9B,MAAO,yBAAwB+B,WAAY,EAHxG;AAIjB9B,MAAAA,EAAE,EAAED,MAJa;AAKjB+B,MAAAA,WAAW,EAAEA,WALI;AAMjBC,MAAAA,MAAM,EAAEA;AANS,KAArB;AASAtD,IAAAA,QAAQ,CAAC;AACL2B,MAAAA,IAAI,EAAE,oBADD;AAELC,MAAAA,OAAO,EAAE2B;AAFJ,KAAD,CAAR;AAIH,GAfD;AAgBH,CAjBM;AAmBP,OAAO,MAAME,sBAAsB,GAAIC,IAAD,IAAU;AAC5C,SAAO,MAAO1D,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAAC;AAAE2B,MAAAA,IAAI,EAAE,2BAAR;AAAoCC,MAAAA,OAAO,EAAE8B;AAA7C,KAAD,CAAR;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,SAAO,MAAO3D,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAAC;AAAE2B,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,MAAMiC,cAAc,GAAG,MAAM;AAChC,SAAO,MAAO5D,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAAC;AAAE2B,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,MAAMkC,eAAe,GAAG,MAAM;AACjC,SAAO,MAAO7D,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAAC;AAAE2B,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,MAAMmC,eAAe,GAAG,MAAM;AACjC,SAAO,MAAO9D,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAAC;AAAE2B,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACH,GAFD;AAGH,CAJM","sourcesContent":["import axios from 'axios'\r\nimport { host } from '../../config';\r\n\r\n\r\nexport const getExistingProject = () => {\r\n    return (dispatch) => {\r\n        return axios.get(host + `/api/v1/secure/get/project/${idproject}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n               console.log('getExistingProject response redux =>', res.data)\r\n                \r\n        }).catch((err) => console.log(\"ERRRROOOOR while getExistingProject =>\", err) )\r\n    }\r\n};\r\n\r\nexport const addGenericResponse = (project, idproject) => {\r\n    return (dispatch) => {\r\n       \r\n        return axios.put(host + `/api/v1/secure/project/generiqueadd/${idproject}`, project, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {  console.log('addReponseGeneric Redux =>', res.data) })\r\n        .catch((err) => console.log(\"AddGenericResponse errorrr\", err))\r\n    }\r\n};\r\n\r\nexport const updateGenericResponse = (project, idproject) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.put(host + `/api/v1/secure/project/generiqueupdate/${idproject}`, project, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => console.log('updateReponseGeneric redux ', res.data))\r\n        .catch((err) => console.log(\"Update GenericResponse err\", err))\r\n    }\r\n};\r\n\r\nexport const addProject = (wizardSelectedPage,wizardSelectedPost) => {\r\n    return (dispatch) => {\r\n\r\n        let post;\r\n\r\n        if(wizardSelectedPage.platform === \"instagram\") {\r\n            post = {\r\n                post : {\r\n                    idPage: wizardSelectedPage.id,\r\n                    name: wizardSelectedPage.name,\r\n                    typePage: wizardSelectedPage.platform,\r\n                    idPost: wizardSelectedPost !== null ? wizardSelectedPost.idPost : [],\r\n                }\r\n            };\r\n        } else {\r\n                post = {\r\n                    post : {\r\n                        idPage: wizardSelectedPage.id,\r\n                        name: wizardSelectedPage.name,\r\n                        typePage: wizardSelectedPage.platform,\r\n                        idPost: wizardSelectedPost !== null ? wizardSelectedPost.id : [],\r\n                    }\r\n                };\r\n        }\r\n\r\n        return axios.post(host + `/api/v1/secure/project/add`,post,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(\"Ya nour you are sending this to add the project\", post);\r\n            console.log('project added his id is =>', res.data.data);\r\n\r\n            dispatch({\r\n                type: 'ADD_ID_PROJECT',\r\n                payload: res.data.data\r\n            })\r\n        }).catch(err => {\r\n            console.log(\"addProject action\", err);\r\n        })\r\n    }\r\n};\r\n\r\nexport const getAllIntents = (intentType) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + (intentType === \"generic\" ? `/api/v1/intent/generiqueintent/all` : `/api/v1/intent/defaulintent/all`), {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n            .then(res => {\r\n                // console.log(`get ${intentType} intents`, res.data.data);\r\n\r\n                let obj = [];\r\n                let newData = {}\r\n\r\n                for (let i = 0; i < res.data.data.length; i++) {\r\n                    obj = {\r\n                      [res.data.data[i]['intent']]: {\r\n                          id: res.data.data[i]['id'],\r\n                          name: res.data.data[i]['intent'],\r\n                          date: res.data.data[i]['date']\r\n                      }\r\n                    }\r\n                    newData = { ...newData, ...obj }\r\n                };\r\n\r\n                /*\r\n                     if u want full intent object send newData :D \r\n                    // console.log(\"Hey new data filtered :D\", newData);\r\n                */\r\n\r\n                dispatch({\r\n                    type: 'GET_ALL_WIZARD_INTENTS',\r\n                    payload: Object.keys(newData)\r\n                })\r\n               \r\n            }).catch((err) => console.log(\"Get all intents action\", err))\r\n    }\r\n};\r\n\r\nexport const getWizardPagesPosts = (wizardPage) => {\r\n    return (dispatch) => {\r\n\r\n        return axios.get(host + `/api/v1/secure/post/get/${wizardPage.id}/${wizardPage.platform}/all`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log(\"posts ya haaaaaiiderrr\",res.data.data);\r\n\r\n            // res.data.data.map((post, index) => {\r\n            //     let createdTime = new Date(Date.parse(post.created_time));\r\n\r\n            //     console.log(index, ' :=> ', createdTime)\r\n            // });\r\n            \r\n            // let toSort = res.data.data;\r\n\r\n            res.data.data.sort(function(a,b){\r\n                // Turn your strings into dates, and then subtract them\r\n                // to get a value that is either negative, positive, or zero.\r\n                return new Date(Date.parse(b.created_time)) - new Date(Date.parse(a.created_time));\r\n            });\r\n\r\n\r\n\r\n            // console.log(\"Final\", toSort);\r\n\r\n            dispatch({\r\n                type: 'GET_WIZARD_PAGE_POSTS',\r\n                payload: res.data.data\r\n            })\r\n        }).catch((err) => console.log(\"getWizardPagesPosts \", err))\r\n    }\r\n};\r\n\r\nexport const setWizardSelectedPost = (post) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch({\r\n            type: 'SELECT_WIZARD_POST', \r\n            payload: post,\r\n        });\r\n    }\r\n};\r\n\r\nexport const setWizardIntentType = (intentType,navigation) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch({\r\n            type: 'SELECT_WIZARD_INTENT_TYPE', \r\n            payload: intentType,\r\n        });\r\n        navigation.push('/home/auto-wizard')\r\n    }\r\n};\r\n\r\nexport const setWizardSelectedPage = (platform,pageName,picture,idPage,accessToken,status) => {\r\n    return async (dispatch) => {\r\n\r\n        const selectedPage = {\r\n            platform: platform === \"insta\" ? \"instagram\" : \"facebook\",\r\n            name: pageName,\r\n            picture_url : picture !== null ? picture : `https://graph.facebook.com/v8.0/${idPage}/picture?access_token=${accessToken}`,\r\n            id: idPage,\r\n            accessToken: accessToken,\r\n            status: status\r\n        };\r\n\r\n        dispatch({\r\n            type: 'SELECT_WIZARD_PAGE', \r\n            payload: selectedPage,\r\n        });\r\n    }\r\n};\r\n\r\nexport const nextSpecificWizardStep = (step) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'NEXT_SPECIFIC_WIZARD_STEP',payload: step });\r\n    }\r\n};\r\n\r\nexport const nextWizardStep = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'NEXT_WIZARD_STEP' });\r\n    }\r\n};\r\n\r\nexport const prevWizardStep = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'PREV_WIZARD_STEP' });\r\n    }\r\n};\r\n\r\nexport const resetWizardStep = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'RESET_WIZARD_STEP' });\r\n    }\r\n};\r\n\r\nexport const resetَAllWizard = () => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'RESET_ALL_WIZARD' });\r\n    }\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}