{"ast":null,"code":"var _jsxFileName = \"/usr/work/smart_front_oussema/src/components/Stats.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getComments } from '../actions';\n\nfunction Stats(props) {\n  useEffect(() => {\n    props.comments(props.postId.post.postId);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: 17,\n      width: \"100%\",\n      margin: \"20px 0\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-around\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, \" \", props.comments[0] ? props.comments[0].events.length : 0), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: \"lighter\",\n      color: \"gray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, \"Comments\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, \" \", props.comments[0] ? props.comments[0].events.filter(el => el.success == true).length : 0), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: \"lighter\",\n      color: \"gray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, \"Matched\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, \"% \", props.comments[0] ? props.comments[0].events.filter(el => el.success == true).length * 100 / props.comments[0].events.length : 0), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: \"lighter\",\n      color: \"gray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \"Performance\")));\n}\n\nconst mapStateToProps = state => ({\n  comments: state.comments\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    comments: id => dispatch(getComments(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stats);","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/components/Stats.js"],"names":["React","useEffect","connect","getComments","Stats","props","comments","postId","post","fontSize","width","margin","display","alignItems","justifyContent","flexDirection","fontWeight","events","length","color","filter","el","success","mapStateToProps","state","mapDispatchToProps","dispatch","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,YAA5B;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClBJ,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAACC,QAAN,CAAeD,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBD,MAAjC;AACH,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,KAAK,EAAE,MAAvB;AAA+BC,MAAAA,MAAM,EAAE,QAAvC;AAAiDC,MAAAA,OAAO,EAAE,MAA1D;AAAkEC,MAAAA,UAAU,EAAE,QAA9E;AAAwFC,MAAAA,cAAc,EAAE;AAAxG,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,UAAU,EAAE,QAA/B;AAAyCC,MAAAA,cAAc,EAAE,QAAzD;AAAmEC,MAAAA,aAAa,EAAE;AAAlF,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuCX,KAAK,CAACC,QAAN,CAAe,CAAf,IAAoBD,KAAK,CAACC,QAAN,CAAe,CAAf,EAAkBW,MAAlB,CAAyBC,MAA7C,GAAsD,CAA7F,CADJ,eAEI;AAAM,IAAA,KAAK,EAAE;AAAEF,MAAAA,UAAU,EAAE,SAAd;AAAyBG,MAAAA,KAAK,EAAE;AAAhC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ,eAKI;AAAK,IAAA,KAAK,EAAE;AAAEP,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,UAAU,EAAE,QAA/B;AAAyCC,MAAAA,cAAc,EAAE,QAAzD;AAAmEC,MAAAA,aAAa,EAAE;AAAlF,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuCX,KAAK,CAACC,QAAN,CAAe,CAAf,IAAoBD,KAAK,CAACC,QAAN,CAAe,CAAf,EAAkBW,MAAlB,CAAyBG,MAAzB,CAAgCC,EAAE,IAAIA,EAAE,CAACC,OAAH,IAAc,IAApD,EAA0DJ,MAA9E,GAAuF,CAA9H,CADJ,eAEI;AAAM,IAAA,KAAK,EAAE;AAAEF,MAAAA,UAAU,EAAE,SAAd;AAAyBG,MAAAA,KAAK,EAAE;AAAhC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CALJ,eASI;AAAK,IAAA,KAAK,EAAE;AAAEP,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,UAAU,EAAE,QAA/B;AAAyCC,MAAAA,cAAc,EAAE,QAAzD;AAAmEC,MAAAA,aAAa,EAAE;AAAlF,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwCX,KAAK,CAACC,QAAN,CAAe,CAAf,IAAqBD,KAAK,CAACC,QAAN,CAAe,CAAf,EAAkBW,MAAlB,CAAyBG,MAAzB,CAAgCC,EAAE,IAAIA,EAAE,CAACC,OAAH,IAAc,IAApD,EAA0DJ,MAA1D,GAAmE,GAApE,GAA2Eb,KAAK,CAACC,QAAN,CAAe,CAAf,EAAkBW,MAAlB,CAAyBC,MAAxH,GAAiI,CAAzK,CADJ,eAEI;AAAM,IAAA,KAAK,EAAE;AAAEF,MAAAA,UAAU,EAAE,SAAd;AAAyBG,MAAAA,KAAK,EAAE;AAAhC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CATJ,CADJ;AAgBH;;AAED,MAAMI,eAAe,GAAIC,KAAD,KAAY;AAChClB,EAAAA,QAAQ,EAAEkB,KAAK,CAAClB;AADgB,CAAZ,CAAxB;;AAIA,MAAMmB,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHpB,IAAAA,QAAQ,EAAGqB,EAAD,IAAQD,QAAQ,CAACvB,WAAW,CAACwB,EAAD,CAAZ;AADvB,GAAP;AAGH,CAJD;;AAMA,eAAezB,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CrB,KAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getComments } from '../actions'\r\n\r\nfunction Stats(props) {\r\n    useEffect(() => {\r\n        props.comments(props.postId.post.postId)\r\n    }, [])\r\n    return (\r\n        <div style={{ fontSize: 17, width: \"100%\", margin: \"20px 0\", display: \"flex\", alignItems: \"center\", justifyContent: \"space-around\" }}>\r\n            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexDirection: \"column\" }}>\r\n                <span style={{ fontWeight: \"bold\" }}> {props.comments[0] ? props.comments[0].events.length : 0}</span>\r\n                <span style={{ fontWeight: \"lighter\", color: \"gray\" }}>Comments</span>\r\n            </div>\r\n            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexDirection: \"column\" }}>\r\n                <span style={{ fontWeight: \"bold\" }}> {props.comments[0] ? props.comments[0].events.filter(el => el.success == true).length : 0}</span>\r\n                <span style={{ fontWeight: \"lighter\", color: \"gray\" }}>Matched</span>\r\n            </div>\r\n            <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flexDirection: \"column\" }}>\r\n                <span style={{ fontWeight: \"bold\" }}>% {props.comments[0] ? (props.comments[0].events.filter(el => el.success == true).length * 100) / props.comments[0].events.length : 0}</span>\r\n                <span style={{ fontWeight: \"lighter\", color: \"gray\" }}>Performance</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    comments: state.comments\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        comments: (id) => dispatch(getComments(id)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Stats)\r\n"]},"metadata":{},"sourceType":"module"}