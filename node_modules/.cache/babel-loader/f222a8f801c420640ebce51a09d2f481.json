{"ast":null,"code":"import axios from 'axios';\nimport { host } from '../../config';\nexport const getAllProductCategories = wizardSelectedPage => {\n  return dispatch => {\n    // console.log(\"categories with => \", wizardSelectedPage.platform, wizardSelectedPage.id);\n    return axios.get(host + `/api/v1/secure/project/get/entitiesproject/${wizardSelectedPage.platform}/${wizardSelectedPage.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('Social media actions => all Categories for this Page = ', res.data.data); // dispatch({\n      //     type: 'GET_ALL_PRODUCT_CATEGORIES',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err getConnectedPagesProject\", err));\n  };\n};\nexport const getConnectedPagesProject = () => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/project/get/user`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('all projects for this user', res.data.data);\n      dispatch({\n        type: 'GET_WIZARD_ACTIVE_PAGE_POSTS',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"err getConnectedPagesProject\", err));\n  };\n};\nexport const addPageEntity = page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/pages/entities/add/${page.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('add entity', res.data.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err addPageEntity\", err));\n  };\n};\nexport const getPageEntities = page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/project/get/entitiesproject/${page.platform}/${page.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      // console.log('entities mtaaa page', res.data.data);\n      dispatch({\n        type: 'GET_ENTITIES_OF_A_PAGE',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"err getPageEntities\", err));\n  };\n};\n/* INSTAGRAM */\n\nexport const connectInstagramPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/connect/`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de connect page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err connect page insta\", err));\n  };\n};\nexport const disconnectInstagramPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/disconnect`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err disconnect page instagram\", err));\n  };\n};\nexport const deleteInstagramPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/delete`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err disconnect page instagram\", err));\n  };\n};\nexport const makeOwnerInstagramPage = (idPage, idFacebook) => {\n  return dispatch => {\n    let page = {\n      id: idPage,\n      idFacebook: idFacebook // idFacebook of the new owner\n\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/owner`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de owner page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err owner page instagram\", err));\n  };\n};\n/* FACEBOOK */\n\nexport const connectFacebookPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pages/connect/`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de connect page facebook', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err de connect page facebook\", err));\n  };\n};\nexport const disconnectFacebookPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pages/disconnect/disconnect`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page facebok', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err de disconnect page facebok\", err));\n  };\n};\nexport const deleteFacebookPage = (idPage, idFacebook) => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pages/disconnect/delete`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page facebok', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err de disconnect page facebok\", err));\n  };\n};\nexport const makeOwnerFacebookPage = (idPage, idFacebook) => {\n  return dispatch => {\n    let page = {\n      id: idPage,\n      idFacebook: idFacebook // idFacebook of the new owner\n\n    };\n    return axios.post(host + `/api/v1/secure/pages/disconnect/owner`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de owner page facebook', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err owner page facebook\", err));\n  };\n};\nexport const selectSocialMediaPage = (page, platform, status) => {\n  return async dispatch => {\n    // console.log(\"Full page data =>\", page );\n    // let userData = JSON.parse(localStorage.getItem('userData'));\n    // console.log(\"Full userData\", userData.user.idFacebook);\n    const selectedPage = {\n      platform: platform === \"fb\" ? \"facebook\" : \"instagram\",\n      name: page.name,\n      picture_url: page.imageUrl ? page.imageUrl : `https://graph.facebook.com/v8.0/${page.idPage}/picture?access_token=${page.access_token}`,\n      id: page.idPage,\n      accessToken: page.access_token,\n      team: page.user,\n      admins: page.admins,\n      status: status\n    };\n    dispatch({\n      type: 'SELECT_SOCIAL_MEDIA_PAGE',\n      payload: selectedPage\n    });\n  };\n};\nexport const getFbData = () => {\n  return async dispatch => {\n    /*\r\n        platform={\"fb\"} \r\n        isConnectedPage={page.isConnected}\r\n        namePage={page.name} \r\n        idPage={page.idPage} \r\n        picture={null} \r\n        accessToken={page.access_token} \r\n        status={key} \r\n        team={page.user} \r\n        admins={page.admins}\r\n    */\n    let token = await localStorage.getItem('authtoken');\n    return axios.get(host + '/api/v1/secure/pages/get/all/', {\n      headers: {\n        'authorization': 'Bearer ' + token\n      }\n    }).then(res => {\n      // {Object.keys(res.data.data).map( (key, index) => \n      //     console.log(\"Yaaaa nadher \",key,\" => \",res.data.data[key])\n      // )}\n      let allFbPages = []; // let pageToPush = {};\n\n      Object.entries(res.data.data).map(([key, tab]) => tab.map(page => {\n        page.status = key;\n        allFbPages.push(page);\n      }));\n      console.log(\"Sorting\", allFbPages.sort((page, nextPage) => page.name.toLowerCase() < nextPage.name.toLowerCase()));\n      console.log(\"5atyetkom l console :D Final operation of facebook ====>\", allFbPages);\n      dispatch({\n        type: 'GET_FB_DATA',\n        payload: allFbPages // payload: res.data.data\n\n      });\n    }).catch(err => {\n      console.log(\"GetFbData err\", JSON.stringify(err));\n    });\n  };\n};\nexport const getInstaData = () => {\n  return async dispatch => {\n    /*\r\n        platform={\"fb\"} \r\n        isConnectedPage={page.isConnected}\r\n        namePage={page.name} \r\n        idPage={page.idPage} \r\n        picture={null} \r\n        accessToken={page.access_token} \r\n        status={key} \r\n        team={page.user} \r\n        admins={page.admins}\r\n    */\n    let token = await localStorage.getItem('authtoken');\n    return axios.get(host + '/api/v1/secure/pagesInsta/get/all/', {\n      headers: {\n        'authorization': 'Bearer ' + token\n      }\n    }).then(res => {\n      // console.log('Instagram pages ya haider =>', res.data.data)\n      let allInstaPages = [];\n      Object.entries(res.data.data).map(([key, tab]) => tab.map(page => {\n        page.status = key;\n        allInstaPages.push(page);\n      }));\n      console.log(\"5atyetkom l console :D Final operation of insta ====>\", allInstaPages);\n      dispatch({\n        type: 'GET_INSTA_DATA',\n        payload: allInstaPages // payload: res.data.data\n\n      });\n    }).catch(err => {\n      console.log(\"getInstaData error\", JSON.stringify(err));\n    });\n  };\n};\nexport const resetSocialMediaSelections = () => {\n  return async dispatch => dispatch({\n    type: 'RESET_SM_SELECTIONS'\n  });\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/socialMediaActions.js"],"names":["axios","host","getAllProductCategories","wizardSelectedPage","dispatch","get","platform","id","headers","localStorage","getItem","then","res","console","log","data","catch","err","getConnectedPagesProject","type","payload","addPageEntity","page","getPageEntities","connectInstagramPage","idPage","post","disconnectInstagramPage","deleteInstagramPage","makeOwnerInstagramPage","idFacebook","connectFacebookPage","disconnectFacebookPage","deleteFacebookPage","makeOwnerFacebookPage","selectSocialMediaPage","status","selectedPage","name","picture_url","imageUrl","access_token","accessToken","team","user","admins","getFbData","token","allFbPages","Object","entries","map","key","tab","push","sort","nextPage","toLowerCase","JSON","stringify","getInstaData","allInstaPages","resetSocialMediaSelections"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,cAArB;AAEA,OAAO,MAAMC,uBAAuB,GAAIC,kBAAD,IAAwB;AAC3D,SAAQC,QAAD,IAAc;AAEjB;AACA,WAAOJ,KAAK,CAACK,GAAN,CAAUJ,IAAI,GAAI,8CAA6CE,kBAAkB,CAACG,QAAS,IAAGH,kBAAkB,CAACI,EAAG,EAApH,EAAuH;AAC1HC,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADiH,KAAvH,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,yDAAZ,EAAuEF,GAAG,CAACG,IAAJ,CAASA,IAAhF,EADS,CAGT;AACA;AACA;AACA;AACH,KAZM,EAaNC,KAbM,CAaCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CG,GAA5C,CAbT,CAAP;AAcH,GAjBD;AAkBH,CAnBM;AAqBP,OAAO,MAAMC,wBAAwB,GAAG,MAAM;AAC1C,SAAQd,QAAD,IAAc;AAEjB,WAAOJ,KAAK,CAACK,GAAN,CAAUJ,IAAI,GAAI,iCAAlB,EAAoD;AACvDO,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AAD8C,KAApD,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,GAAG,CAACG,IAAJ,CAASA,IAAnD;AAEAX,MAAAA,QAAQ,CAAC;AACLe,QAAAA,IAAI,EAAE,8BADD;AAELC,QAAAA,OAAO,EAAER,GAAG,CAACG,IAAJ,CAASA;AAFb,OAAD,CAAR;AAIH,KAZM,EAaNC,KAbM,CAaCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CG,GAA5C,CAbT,CAAP;AAcH,GAhBD;AAiBH,CAlBM;AAoBP,OAAO,MAAMI,aAAa,GAAIC,IAAD,IAAU;AACnC,SAAQlB,QAAD,IAAc;AAEjB,WAAOJ,KAAK,CAACK,GAAN,CAAUJ,IAAI,GAAI,qCAAoCqB,IAAI,CAACf,EAAG,EAA9D,EAAiE;AACpEC,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AAD2D,KAAjE,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,GAAG,CAACG,IAAJ,CAASA,IAAnC,EADS,CAGT;AACA;AACA;AACA;AACH,KAZM,EAaNC,KAbM,CAaCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,GAAjC,CAbT,CAAP;AAcH,GAhBD;AAiBH,CAlBM;AAoBP,OAAO,MAAMM,eAAe,GAAID,IAAD,IAAU;AACrC,SAAQlB,QAAD,IAAc;AAEjB,WAAOJ,KAAK,CAACK,GAAN,CAAUJ,IAAI,GAAI,8CAA6CqB,IAAI,CAAChB,QAAS,IAAGgB,IAAI,CAACf,EAAG,EAAxF,EAA2F;AAC9FC,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADqF,KAA3F,EAKNC,IALM,CAKDC,GAAG,IAAI;AACT;AAEAR,MAAAA,QAAQ,CAAC;AACLe,QAAAA,IAAI,EAAE,wBADD;AAELC,QAAAA,OAAO,EAAER,GAAG,CAACG,IAAJ,CAASA;AAFb,OAAD,CAAR;AAIH,KAZM,EAaNC,KAbM,CAaCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCG,GAAnC,CAbT,CAAP;AAcH,GAhBD;AAiBH,CAlBM;AAoBP;;AACA,OAAO,MAAMO,oBAAoB,GAAIC,MAAD,IAAY;AAC5C,SAAQrB,QAAD,IAAc;AAEjB,QAAIkB,IAAI,GAAG;AACPf,MAAAA,EAAE,EAAEkB;AADG,KAAX;AAIA,WAAOzB,KAAK,CAAC0B,IAAN,CAAWzB,IAAI,GAAI,oCAAnB,EAAuDqB,IAAvD,EAA4D;AAC/Dd,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADsD,KAA5D,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,GAAG,CAACG,IAAhD,EADS,CAGT;AACA;AACA;AACA;AACH,KAZM,EAaNC,KAbM,CAaCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCG,GAAtC,CAbT,CAAP;AAcH,GApBD;AAqBH,CAtBM;AAwBP,OAAO,MAAMU,uBAAuB,GAAIF,MAAD,IAAY;AAC/C,SAAQrB,QAAD,IAAc;AAEjB,QAAIkB,IAAI,GAAG;AACPf,MAAAA,EAAE,EAAEkB;AADG,KAAX;AAIA,WAAOzB,KAAK,CAAC0B,IAAN,CAAWzB,IAAI,GAAI,iDAAnB,EAAoEqB,IAApE,EAAyE;AAC5Ed,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADmE,KAAzE,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,GAAG,CAACG,IAAnD,EADS,CAGT;AACA;AACA;AACA;AACH,KAZM,EAaNC,KAbM,CAaCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CG,GAA7C,CAbT,CAAP;AAcH,GApBD;AAqBH,CAtBM;AAwBP,OAAO,MAAMW,mBAAmB,GAAIH,MAAD,IAAY;AAC3C,SAAQrB,QAAD,IAAc;AAEjB,QAAIkB,IAAI,GAAG;AACPf,MAAAA,EAAE,EAAEkB;AADG,KAAX;AAIA,WAAOzB,KAAK,CAAC0B,IAAN,CAAWzB,IAAI,GAAI,6CAAnB,EAAgEqB,IAAhE,EAAqE;AACxEd,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AAD+D,KAArE,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,GAAG,CAACG,IAAnD,EADS,CAGT;AACA;AACA;AACA;AACH,KAZM,EAaNC,KAbM,CAaCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CG,GAA7C,CAbT,CAAP;AAcH,GApBD;AAqBH,CAtBM;AAwBP,OAAO,MAAMY,sBAAsB,GAAG,CAACJ,MAAD,EAAQK,UAAR,KAAuB;AACzD,SAAQ1B,QAAD,IAAc;AAEjB,QAAIkB,IAAI,GAAG;AACPf,MAAAA,EAAE,EAAEkB,MADG;AAEPK,MAAAA,UAAU,EAAEA,UAFL,CAEgB;;AAFhB,KAAX;AAKA,WAAO9B,KAAK,CAAC0B,IAAN,CAAWzB,IAAI,GAAI,4CAAnB,EAA+DqB,IAA/D,EAAoE;AACvEd,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AAD8D,KAApE,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,GAAG,CAACG,IAA9C,EADS,CAGT;AACA;AACA;AACA;AACH,KAZM,EAaNC,KAbM,CAaCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCG,GAAxC,CAbT,CAAP;AAcH,GArBD;AAsBH,CAvBM;AAyBP;;AACA,OAAO,MAAMc,mBAAmB,GAAIN,MAAD,IAAY;AAC3C,SAAQrB,QAAD,IAAc;AAEjB,QAAIkB,IAAI,GAAE;AACNf,MAAAA,EAAE,EAAEkB;AADE,KAAV;AAIA,WAAOzB,KAAK,CAAC0B,IAAN,CAAWzB,IAAI,GAAI,+BAAnB,EAAkDqB,IAAlD,EAAuD;AAC1Dd,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADiD,KAAvD,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,GAAG,CAACG,IAAnD,EADS,CAGT;AACA;AACA;AACA;AACH,KAZM,EAaNC,KAbM,CAaCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CG,GAA5C,CAbT,CAAP;AAcH,GApBD;AAqBH,CAtBM;AAwBP,OAAO,MAAMe,sBAAsB,GAAIP,MAAD,IAAY;AAC9C,SAAQrB,QAAD,IAAc;AAEjB,QAAIkB,IAAI,GAAG;AACPf,MAAAA,EAAE,EAAEkB;AADG,KAAX;AAIA,WAAOzB,KAAK,CAAC0B,IAAN,CAAWzB,IAAI,GAAI,4CAAnB,EAA+DqB,IAA/D,EAAoE;AACvEd,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AAD8D,KAApE,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDF,GAAG,CAACG,IAArD,EADS,CAGT;AACA;AACA;AACA;AACH,KAZM,EAaNC,KAbM,CAaCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CG,GAA9C,CAbT,CAAP;AAeH,GArBD;AAsBH,CAvBM;AAyBP,OAAO,MAAMgB,kBAAkB,GAAG,CAACR,MAAD,EAAQK,UAAR,KAAuB;AACrD,SAAQ1B,QAAD,IAAc;AAEjB,QAAIkB,IAAI,GAAG;AACPf,MAAAA,EAAE,EAAEkB;AADG,KAAX;AAIA,WAAOzB,KAAK,CAAC0B,IAAN,CAAWzB,IAAI,GAAI,wCAAnB,EAA2DqB,IAA3D,EAAgE;AACnEd,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AAD0D,KAAhE,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDF,GAAG,CAACG,IAArD,EADS,CAGT;AACA;AACA;AACA;AACH,KAZM,EAaNC,KAbM,CAaCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CG,GAA9C,CAbT,CAAP;AAeH,GArBD;AAsBH,CAvBM;AAyBP,OAAO,MAAMiB,qBAAqB,GAAG,CAACT,MAAD,EAAQK,UAAR,KAAuB;AACxD,SAAQ1B,QAAD,IAAc;AAEjB,QAAIkB,IAAI,GAAG;AACPf,MAAAA,EAAE,EAAEkB,MADG;AAEPK,MAAAA,UAAU,EAAEA,UAFL,CAEgB;;AAFhB,KAAX;AAKA,WAAO9B,KAAK,CAAC0B,IAAN,CAAWzB,IAAI,GAAI,uCAAnB,EAA0DqB,IAA1D,EAA+D;AAClEd,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADxB;AADyD,KAA/D,EAKNC,IALM,CAKDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CF,GAAG,CAACG,IAAjD,EADS,CAGT;AACA;AACA;AACA;AACH,KAZM,EAaNC,KAbM,CAaCC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCG,GAAvC,CAbT,CAAP;AAcH,GArBD;AAsBH,CAvBM;AA2BP,OAAO,MAAMkB,qBAAqB,GAAG,CAACb,IAAD,EAAMhB,QAAN,EAAe8B,MAAf,KAA0B;AAC3D,SAAO,MAAOhC,QAAP,IAAoB;AAEvB;AACA;AAEA;AAEA,UAAMiC,YAAY,GAAG;AACjB/B,MAAAA,QAAQ,EAAEA,QAAQ,KAAK,IAAb,GAAoB,UAApB,GAAiC,WAD1B;AAEjBgC,MAAAA,IAAI,EAAEhB,IAAI,CAACgB,IAFM;AAGjBC,MAAAA,WAAW,EAAGjB,IAAI,CAACkB,QAAL,GAAgBlB,IAAI,CAACkB,QAArB,GAAiC,mCAAkClB,IAAI,CAACG,MAAO,yBAAwBH,IAAI,CAACmB,YAAa,EAHtH;AAIjBlC,MAAAA,EAAE,EAAEe,IAAI,CAACG,MAJQ;AAKjBiB,MAAAA,WAAW,EAAEpB,IAAI,CAACmB,YALD;AAMjBE,MAAAA,IAAI,EAAErB,IAAI,CAACsB,IANM;AAOjBC,MAAAA,MAAM,EAAEvB,IAAI,CAACuB,MAPI;AAQjBT,MAAAA,MAAM,EAAEA;AARS,KAArB;AAWAhC,IAAAA,QAAQ,CAAC;AACLe,MAAAA,IAAI,EAAE,0BADD;AAELC,MAAAA,OAAO,EAAEiB;AAFJ,KAAD,CAAR;AAIH,GAtBD;AAuBH,CAxBM;AA0BP,OAAO,MAAMS,SAAS,GAAG,MAAM;AAC3B,SAAO,MAAO1C,QAAP,IAAoB;AAEvB;;;;;;;;;;;AAYA,QAAI2C,KAAK,GAAG,MAAMtC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;AAEA,WAAOV,KAAK,CAACK,GAAN,CAAUJ,IAAI,GAAG,+BAAjB,EAAkD;AACrDO,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYuC;AADxB;AAD4C,KAAlD,EAKNpC,IALM,CAKDC,GAAG,IAAI;AACT;AACA;AACA;AAEA,UAAIoC,UAAU,GAAG,EAAjB,CALS,CAMT;;AAEAC,MAAAA,MAAM,CAACC,OAAP,CAAetC,GAAG,CAACG,IAAJ,CAASA,IAAxB,EAA8BoC,GAA9B,CAAmC,CAAC,CAACC,GAAD,EAAMC,GAAN,CAAD,KAC/BA,GAAG,CAACF,GAAJ,CAAS7B,IAAD,IAAU;AACdA,QAAAA,IAAI,CAACc,MAAL,GAAcgB,GAAd;AACAJ,QAAAA,UAAU,CAACM,IAAX,CAAgBhC,IAAhB;AACP,OAHG,CADJ;AAMAT,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBkC,UAAU,CAACO,IAAX,CAAgB,CAACjC,IAAD,EAAMkC,QAAN,KAAoBlC,IAAI,CAACgB,IAAL,CAAUmB,WAAV,KAA0BD,QAAQ,CAAClB,IAAT,CAAcmB,WAAd,EAA9D,CAAvB;AAEA5C,MAAAA,OAAO,CAACC,GAAR,CAAY,0DAAZ,EAAwEkC,UAAxE;AAEA5C,MAAAA,QAAQ,CAAC;AACLe,QAAAA,IAAI,EAAE,aADD;AAELC,QAAAA,OAAO,EAAE4B,UAFJ,CAGL;;AAHK,OAAD,CAAR;AAKH,KA5BM,EA6BNhC,KA7BM,CA6BCC,GAAD,IAAS;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B4C,IAAI,CAACC,SAAL,CAAe1C,GAAf,CAA7B;AACH,KA/BM,CAAP;AAgCH,GAhDD;AAiDH,CAlDM;AAoDP,OAAO,MAAM2C,YAAY,GAAG,MAAM;AAC9B,SAAO,MAAOxD,QAAP,IAAoB;AAEvB;;;;;;;;;;;AAWD,QAAI2C,KAAK,GAAG,MAAMtC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;AAEC,WAAOV,KAAK,CAACK,GAAN,CAAUJ,IAAI,GAAG,oCAAjB,EAAuD;AAC1DO,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYuC;AADxB;AADiD,KAAvD,EAKNpC,IALM,CAKDC,GAAG,IAAI;AACT;AACA,UAAIiD,aAAa,GAAG,EAApB;AAEAZ,MAAAA,MAAM,CAACC,OAAP,CAAetC,GAAG,CAACG,IAAJ,CAASA,IAAxB,EAA8BoC,GAA9B,CAAmC,CAAC,CAACC,GAAD,EAAMC,GAAN,CAAD,KAC/BA,GAAG,CAACF,GAAJ,CAAS7B,IAAD,IAAU;AACdA,QAAAA,IAAI,CAACc,MAAL,GAAcgB,GAAd;AACAS,QAAAA,aAAa,CAACP,IAAd,CAAmBhC,IAAnB;AACH,OAHD,CADJ;AAOAT,MAAAA,OAAO,CAACC,GAAR,CAAY,uDAAZ,EAAqE+C,aAArE;AAEAzD,MAAAA,QAAQ,CAAC;AACLe,QAAAA,IAAI,EAAE,gBADD;AAELC,QAAAA,OAAO,EAAEyC,aAFJ,CAGL;;AAHK,OAAD,CAAR;AAKH,KAvBM,EAwBN7C,KAxBM,CAwBCC,GAAD,IAAS;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC4C,IAAI,CAACC,SAAL,CAAe1C,GAAf,CAAlC;AACH,KA1BM,CAAP;AA2BH,GA1CD;AA2CH,CA5CM;AA8CP,OAAO,MAAM6C,0BAA0B,GAAG,MAAM;AAC5C,SAAO,MAAO1D,QAAP,IAAoBA,QAAQ,CAAC;AAAEe,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAnC;AACH,CAFM","sourcesContent":["import axios from 'axios'\r\nimport { host } from '../../config';\r\n\r\nexport const getAllProductCategories = (wizardSelectedPage) => {\r\n    return (dispatch) => {\r\n    \r\n        // console.log(\"categories with => \", wizardSelectedPage.platform, wizardSelectedPage.id);\r\n        return axios.get(host + `/api/v1/secure/project/get/entitiesproject/${wizardSelectedPage.platform}/${wizardSelectedPage.id}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('Social media actions => all Categories for this Page = ', res.data.data)\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ALL_PRODUCT_CATEGORIES',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err getConnectedPagesProject\", err))\r\n    }\r\n};\r\n\r\nexport const getConnectedPagesProject = () => {\r\n    return (dispatch) => {\r\n    \r\n        return axios.get(host + `/api/v1/secure/project/get/user`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('all projects for this user', res.data.data)\r\n            \r\n            dispatch({\r\n                type: 'GET_WIZARD_ACTIVE_PAGE_POSTS',\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch((err) => console.log(\"err getConnectedPagesProject\", err))\r\n    }\r\n};\r\n\r\nexport const addPageEntity = (page) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + `/api/v1/secure/pages/entities/add/${page.id}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('add entity', res.data.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err addPageEntity\", err))\r\n    }\r\n};\r\n\r\nexport const getPageEntities = (page) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + `/api/v1/secure/project/get/entitiesproject/${page.platform}/${page.id}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('entities mtaaa page', res.data.data);\r\n            \r\n            dispatch({\r\n                type: 'GET_ENTITIES_OF_A_PAGE',\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch((err) => console.log(\"err getPageEntities\", err))\r\n    }\r\n};\r\n\r\n/* INSTAGRAM */\r\nexport const connectInstagramPage = (idPage) => {\r\n    return (dispatch) => {\r\n\r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/connect/`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de connect page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err connect page insta\", err))\r\n    }\r\n};\r\n\r\nexport const disconnectInstagramPage = (idPage) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/disconnect`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err disconnect page instagram\", err))\r\n    };\r\n};\r\n\r\nexport const deleteInstagramPage = (idPage) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/delete`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err disconnect page instagram\", err))\r\n    };\r\n};\r\n\r\nexport const makeOwnerInstagramPage = (idPage,idFacebook) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n            idFacebook: idFacebook // idFacebook of the new owner\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/owner`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de owner page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err owner page instagram\", err))\r\n    };\r\n};\r\n\r\n/* FACEBOOK */\r\nexport const connectFacebookPage = (idPage) => {\r\n    return (dispatch) => {\r\n        \r\n        let page ={\r\n            id: idPage,\r\n        };\r\n\r\n        return axios.post(host + `/api/v1/secure/pages/connect/`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de connect page facebook', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err de connect page facebook\", err))\r\n    }\r\n};\r\n\r\nexport const disconnectFacebookPage = (idPage) => {\r\n    return (dispatch) => {\r\n\r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pages/disconnect/disconnect`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page facebok', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err de disconnect page facebok\", err))\r\n\r\n    };\r\n};\r\n\r\nexport const deleteFacebookPage = (idPage,idFacebook) => {\r\n    return (dispatch) => {\r\n\r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pages/disconnect/delete`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page facebok', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err de disconnect page facebok\", err))\r\n\r\n    };\r\n};\r\n\r\nexport const makeOwnerFacebookPage = (idPage,idFacebook) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n            idFacebook: idFacebook // idFacebook of the new owner\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pages/disconnect/owner`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de owner page facebook', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err owner page facebook\", err))\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const selectSocialMediaPage = (page,platform,status) => {\r\n    return async (dispatch) => {\r\n\r\n        // console.log(\"Full page data =>\", page );\r\n        // let userData = JSON.parse(localStorage.getItem('userData'));\r\n\r\n        // console.log(\"Full userData\", userData.user.idFacebook);\r\n \r\n        const selectedPage = {\r\n            platform: platform === \"fb\" ? \"facebook\" : \"instagram\",\r\n            name: page.name,\r\n            picture_url : page.imageUrl ? page.imageUrl : `https://graph.facebook.com/v8.0/${page.idPage}/picture?access_token=${page.access_token}`,\r\n            id: page.idPage,\r\n            accessToken: page.access_token,\r\n            team: page.user,\r\n            admins: page.admins,\r\n            status: status,\r\n        };\r\n        \r\n        dispatch({\r\n            type: 'SELECT_SOCIAL_MEDIA_PAGE',\r\n            payload: selectedPage\r\n        })\r\n    }\r\n};\r\n\r\nexport const getFbData = () => {\r\n    return async (dispatch) => {\r\n        \r\n        /*\r\n            platform={\"fb\"} \r\n            isConnectedPage={page.isConnected}\r\n            namePage={page.name} \r\n            idPage={page.idPage} \r\n            picture={null} \r\n            accessToken={page.access_token} \r\n            status={key} \r\n            team={page.user} \r\n            admins={page.admins}\r\n        */\r\n        \r\n        let token = await localStorage.getItem('authtoken');\r\n\r\n        return axios.get(host + '/api/v1/secure/pages/get/all/', {\r\n            headers: {\r\n                'authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n        .then(res => {\r\n            // {Object.keys(res.data.data).map( (key, index) => \r\n            //     console.log(\"Yaaaa nadher \",key,\" => \",res.data.data[key])\r\n            // )}\r\n\r\n            let allFbPages = [];\r\n            // let pageToPush = {};\r\n\r\n            Object.entries(res.data.data).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.status = key;\r\n                    allFbPages.push(page);\r\n            }));\r\n\r\n            console.log(\"Sorting\", allFbPages.sort((page,nextPage) =>  page.name.toLowerCase() < nextPage.name.toLowerCase()  ));\r\n\r\n            console.log(\"5atyetkom l console :D Final operation of facebook ====>\", allFbPages);\r\n\r\n            dispatch({\r\n                type: 'GET_FB_DATA',\r\n                payload: allFbPages\r\n                // payload: res.data.data\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"GetFbData err\", JSON.stringify(err))\r\n        })\r\n    }\r\n};\r\n\r\nexport const getInstaData = () => {\r\n    return async (dispatch) => {\r\n\r\n        /*\r\n            platform={\"fb\"} \r\n            isConnectedPage={page.isConnected}\r\n            namePage={page.name} \r\n            idPage={page.idPage} \r\n            picture={null} \r\n            accessToken={page.access_token} \r\n            status={key} \r\n            team={page.user} \r\n            admins={page.admins}\r\n        */\r\n       let token = await localStorage.getItem('authtoken');\r\n        \r\n        return axios.get(host + '/api/v1/secure/pagesInsta/get/all/', {\r\n            headers: {\r\n                'authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('Instagram pages ya haider =>', res.data.data)\r\n            let allInstaPages = [];\r\n            \r\n            Object.entries(res.data.data).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.status = key;\r\n                    allInstaPages.push(page);\r\n                }\r\n            ));\r\n\r\n            console.log(\"5atyetkom l console :D Final operation of insta ====>\", allInstaPages);\r\n            \r\n            dispatch({\r\n                type: 'GET_INSTA_DATA',\r\n                payload: allInstaPages,\r\n                // payload: res.data.data\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"getInstaData error\", JSON.stringify(err))\r\n        })\r\n    }\r\n};\r\n\r\nexport const resetSocialMediaSelections = () => {\r\n    return async (dispatch) => dispatch({ type: 'RESET_SM_SELECTIONS' });\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}