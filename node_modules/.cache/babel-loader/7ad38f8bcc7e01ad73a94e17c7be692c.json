{"ast":null,"code":"var _jsxFileName = \"/usr/work/smart_front_oussema/src/components/IntentContainer.js\";\nimport React, { useState, useEffect } from 'react';\nimport IntentContainerTable from './IntentContainerTable';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nfunction IntentContainer(props) {\n  const [intent, setIntent] = useState([]);\n  const [selectedEntent, setselectedEntent] = useState([]);\n\n  const showententForm = intent => {\n    if (selectedEntent.includes(intent)) return;\n    setselectedEntent([...selectedEntent, intent]);\n  };\n\n  useEffect(() => {\n    manupilateIntentsData();\n    const projectActiveIntent = props.porject.intents.map(el => el.name);\n    console.log(projectActiveIntent);\n    setselectedEntent(projectActiveIntent);\n  }, []);\n\n  const manupilateIntentsData = () => {\n    let obj;\n    let newdata = {}; // let expressions\n\n    for (let i = 0; i < props.intent.length; i++) {\n      obj = {\n        [props.intent[i]['intent']]: {\n          id: props.intent[i]['id'],\n          // expression: props.intent[i + 1] && props.intent[i]['intent'] === props.intent[i + 1]['intent'] ? [...newdata.data[i]['intent']['expression'], props.intent[i]['expression']] : [...newdata.data[i]['intent']['expression'], props.intent[i]['expression']],\n          date: props.intent[i]['date']\n        }\n      };\n      newdata = { ...newdata,\n        ...obj\n      };\n    }\n\n    setIntent(Object.keys(newdata));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: \"95%\",\n      border: \"1px solid #B4B4B4\",\n      borderRadius: 15,\n      padding: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    style: {\n      marginTop: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Select Intents\"), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, intent.map(el => React.createElement(\"button\", {\n    key: el,\n    className: \"btn\",\n    style: {\n      background: selectedEntent.find(Element => el == Element) ? 'rgba(229, 0, 125, 0.15)' : 'transparent',\n      cursor: 'pointer',\n      margin: 1\n    },\n    onClick: () => showententForm(el),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, el)))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), selectedEntent.map(el => React.createElement(IntentContainerTable, {\n    key: Math.random(),\n    selectedEntent: el,\n    intents: props.porject.intents.find(Element => Element.name == el) || {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })));\n}\n\nconst mapStateToProps = (state, owenProps) => {\n  const porject = state.allProjects.find(el => el.post.idPost == owenProps.match.params.idpost);\n  return {\n    porject\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(IntentContainer));","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/components/IntentContainer.js"],"names":["React","useState","useEffect","IntentContainerTable","connect","withRouter","IntentContainer","props","intent","setIntent","selectedEntent","setselectedEntent","showententForm","includes","manupilateIntentsData","projectActiveIntent","porject","intents","map","el","name","console","log","obj","newdata","i","length","id","date","Object","keys","width","border","borderRadius","padding","marginTop","display","flexWrap","background","find","Element","cursor","margin","Math","random","mapStateToProps","state","owenProps","allProjects","post","idPost","match","params","idpost"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport IntentContainerTable from './IntentContainerTable'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nfunction IntentContainer(props) {\r\n    const [intent, setIntent] = useState([])\r\n    const [selectedEntent, setselectedEntent] = useState([])\r\n    const showententForm = (intent) => {\r\n        if (selectedEntent.includes(intent)) return;\r\n        setselectedEntent([...selectedEntent, intent])\r\n    }\r\n\r\n    useEffect(() => {\r\n        manupilateIntentsData()\r\n        const projectActiveIntent = props.porject.intents.map(el => el.name)\r\n        console.log(projectActiveIntent)\r\n        setselectedEntent(projectActiveIntent)\r\n    }, [])\r\n\r\n    const manupilateIntentsData = () => {\r\n        let obj\r\n        let newdata = {}\r\n        // let expressions\r\n        for (let i = 0; i < props.intent.length; i++) {\r\n            obj = {\r\n                [props.intent[i]['intent']]: {\r\n                    id: props.intent[i]['id'],\r\n                    // expression: props.intent[i + 1] && props.intent[i]['intent'] === props.intent[i + 1]['intent'] ? [...newdata.data[i]['intent']['expression'], props.intent[i]['expression']] : [...newdata.data[i]['intent']['expression'], props.intent[i]['expression']],\r\n                    date: props.intent[i]['date']\r\n                }\r\n            }\r\n            newdata = { ...newdata, ...obj }\r\n\r\n        }\r\n        setIntent(Object.keys(newdata))\r\n    }\r\n    return (\r\n        <div>\r\n            <div style={{ width: \"95%\", border: \"1px solid #B4B4B4\", borderRadius: 15, padding: 20 }}>\r\n                <h4 style={{ marginTop: 0 }}>Select Intents</h4>\r\n                <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                    {\r\n                        intent.map(el =>\r\n                            <button key={el} className=\"btn\" style={{ background: selectedEntent.find(Element => el == Element) ? 'rgba(229, 0, 125, 0.15)' : 'transparent', cursor: 'pointer', margin: 1 }} onClick={() => showententForm(el)}>{el}</button>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n            <br /><br />\r\n            {\r\n                selectedEntent.map(el => <IntentContainerTable key={Math.random()} selectedEntent={el} intents={props.porject.intents.find(Element => Element.name == el) || {}} />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, owenProps) => {\r\n    const porject = state.allProjects.find(el => el.post.idPost == owenProps.match.params.idpost)\r\n    return {\r\n        porject\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(IntentContainer))\r\n"]},"metadata":{},"sourceType":"module"}