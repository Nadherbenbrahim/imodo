{"ast":null,"code":"import axios from 'axios';\nimport { host } from '../../config';\nimport Swal from 'sweetalert2/dist/sweetalert2.js'; // Popup Config: \n\nconst popup = Swal.mixin({\n  customClass: {\n    confirmButton: 'wizard-pages-active-btn'\n  },\n  buttonsStyling: false\n}); // Public reply:\n\nexport const setPublicReply = (history, page, message) => {\n  return dispatch => {\n    let objectToSend = null;\n    let pagePlatform = page.platform === \"fb\" ? \"facebook\" : \"instagram\";\n    objectToSend = {\n      statut: page.status,\n      message: message\n    };\n    console.log(\"Public Reply sending to nour\", objectToSend); // return axios.put(host + `/api/v1/secure/pages/publicreply/${Page.idPage}/${page.platform}`,objectToSend,{\n    //     headers: {\n    //         'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n    //     }\n    // })\n    // .then(res => {\n    //     console.log('Public Reply Response =>', res.data.data);\n    //     history.push('/pages');\n    // })\n    // .catch((err) => console.log(\"setPreferences err\", err))\n  };\n}; // Set Language :\n\nexport const setLang = lang => {\n  return dispatch => {\n    // console.log(\"Lang !\", lang);\n    localStorage.setItem(\"modoLang\", lang);\n    dispatch({\n      type: 'SET_LANG',\n      payload: lang\n    });\n  };\n}; // Filtring Pages:\n\nexport const filterPages = (filterBy, Pages) => {\n  return dispatch => {\n    // console.log(\"Filter\", filterBy, \"Those =>\", Pages)\n    if (filterBy === \"all\") {\n      dispatch({\n        type: 'FILTER_PAGES',\n        payload: []\n      });\n    } else {\n      let filteredPages = Pages.filter(page => page.platform === filterBy);\n      dispatch({\n        type: 'GET_ALL_PAGES',\n        payload: filteredPages\n      });\n    }\n\n    ;\n  };\n};\nexport const resetFilterPages = () => {\n  return dispatch => {\n    dispatch({\n      type: 'RESET_FILTER_PAGES'\n    });\n  };\n};\nexport const filterDashboardIntents = (Page, filter) => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/logEvent/dashbord/intent/${Page.id}/${Page.platform}/${filter}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('Filtring dashboard intents RESULTS =>', res.data.data);\n      let limitedTo5 = res.data.data.slice(0, 5);\n      dispatch({\n        type: 'GET_DASHBOARD',\n        payload: limitedTo5\n      });\n    }).catch(err => console.log(\"Error Filtring dashboard intents\", err));\n  };\n};\nexport const getDashboardPosts = Page => {\n  return dispatch => {\n    const fbHost = \"https://graph.facebook.com/v8.0\";\n    return axios.get(host + `/api/v1/secure/logEvent/dashbord/post/${Page.id}/${Page.accessToken}/${Page.platform}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('getDashboardPosts', res.data.data);\n      dispatch({\n        type: 'GET_DASHBOARD_POSTS',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"err getDashboardPosts\", err));\n  };\n};\nexport const getDashboard = Page => {\n  return dispatch => {\n    // console.log(\"Getting the dashboard with page =>\", Page.id);\n    let filter = \"all\";\n    return axios.get(host + `/api/v1/secure/logEvent/dashbord/intent/${Page.id}/${Page.platform}/${filter}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('/logEvent/dashbord/intent/ Result =>', res.data.data);\n      let limitedTo5 = res.data.data.slice(0, 5);\n      dispatch({\n        type: 'GET_DASHBOARD',\n        payload: limitedTo5\n      });\n    }).catch(err => console.log(\"err getDashboard\", err));\n  };\n};\nexport const setPreferences = (history, spam, likes, delay, Page, Platform, exactlySeconds, exactlyMinutes, randomlyFromSeconds, randomlyFromMinutes, randomlyToSeconds, randomlyToMinutes) => {\n  return dispatch => {\n    let objectToSend = null;\n    let pagePlatform = Platform === \"fb\" ? \"facebook\" : \"instagram\";\n\n    if (delay === \"immediatly\") {\n      objectToSend = {\n        platforme: pagePlatform,\n        likesComment: likes,\n        spam: spam,\n        respReplies: {\n          statut: 'immediatly',\n          time: [0]\n        }\n      };\n      console.log(\"Immediatly\", objectToSend);\n    } else if (delay === \"Exactly\") {\n      // Minutes + Seconds => X ms\n      let minutes = exactlyMinutes * 60000;\n      let seconds = exactlySeconds * 1000;\n      let finalTime = minutes + seconds;\n      objectToSend = {\n        platforme: pagePlatform,\n        likesComment: likes,\n        spam: spam,\n        respReplies: {\n          statut: 'Exactly',\n          time: [finalTime]\n        }\n      };\n      console.log(\"Exactly\", objectToSend);\n    } else {\n      // from Minutes + Seconds => X ms\n      // to Minutes + Seconds => X ms\n      let minutesFrom = randomlyFromMinutes * 60000;\n      let secondsFrom = randomlyFromSeconds * 1000;\n      let finalTimeFrom = minutesFrom + secondsFrom;\n      let minutesTo = randomlyToMinutes * 60000;\n      let secondsTo = randomlyToSeconds * 1000;\n      let finalTimeTo = minutesTo + secondsTo;\n      objectToSend = {\n        platforme: pagePlatform,\n        likesComment: likes,\n        spam: spam,\n        respReplies: {\n          statut: 'Randomly',\n          time: [finalTimeFrom, finalTimeTo]\n        }\n      };\n      console.log(\"Randomly\", objectToSend);\n    }\n\n    console.log(\"Preferences sending to nour\", objectToSend);\n    return axios.put(host + `/api/v1/secure/pages/preference/${Page.idPage}/${pagePlatform}`, objectToSend, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('setPreferences Response =>', res.data.data);\n      history.push('/pages');\n    }).catch(err => console.log(\"setPreferences err\", err));\n  };\n};\nexport const addPageEntity = page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/pages/entities/add/${page.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('add entity', res.data.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err addPageEntity\", err));\n  };\n};\nexport const getPageEntities = page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/project/get/entitiesproject/${page.platform}/${page.id}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      // console.log('entities mtaaa page', res.data.data);\n      let categories = res.data.data;\n\n      if (categories.length > 0) {\n        categories.map((cat, index) => cat.default === true && categories.splice(index, 1));\n      }\n\n      ;\n      dispatch({\n        type: 'GET_ENTITIES_OF_A_PAGE',\n        payload: categories\n      });\n    }).catch(err => console.log(\"err getPageEntities\", err));\n  };\n}; // TEAM:\n\nexport const getTeamMembers = Page => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/membership/listUser/${Page.id}/${Page.platform}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      // console.log('membership/listUser/ Response api  => ', res.data.data);\n      dispatch({\n        type: 'GET_TEAM',\n        payload: res.data.data\n      });\n    }).catch(err => console.log(\"membership/listUser/ error =>\", err));\n  };\n};\nexport const sendMailTeam = (Page, emailTeamMember, nameTeamMember, inviteToken) => {\n  return dispatch => {\n    // console.log(\"Page\", Page);\n    // console.log(\"Email\", emailTeamMember);\n    // console.log(\"Name\", nameTeamMember);\n    return axios.post(host + `/api/v1/secure/membership/sendMail/${Page.id}/${Page.platform}`, {\n      email: emailTeamMember,\n      nameUser: nameTeamMember,\n      token: inviteToken\n    }, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('membership/sendMail/ Response api  => ', res.data.data);\n    }).catch(err => console.log(\"membership/sendMail/ error =>\", err));\n  };\n};\nexport const inviteMember = (page, nameTeamMember) => {\n  return dispatch => {\n    return axios.get(host + `/api/v1/secure/membership/get/${page.id}/${page.platform}/${nameTeamMember}`, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }); // .then(res => {\n    //     console.log('membership/get  inviteMember !! =>', res.data.data);\n    // dispatch({\n    //     type: 'GET_ENTITIES_OF_A_PAGE',\n    //     payload: res.data.data\n    // })\n    // })\n    // .catch((err) => console.log(\"err inviteMember\", err))\n  };\n};\nexport const deleteTeamMember = (page, idFacebook, role) => {\n  return dispatch => {\n    let typePage = page.platform;\n    let idPage = page.id;\n    return axios.post(host + `/api/v1/secure/membership/deleteMember/${role}`, {\n      idFacebook,\n      idPage,\n      typePage\n    }, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('/membership/deleteMember/ response api', res.data.data);\n      dispatch({\n        type: 'GET_TEAM',\n        payload: res.data.data\n      });\n    }).catch(err => {\n      console.log(\"/membership/deleteMember/ error api\", err);\n      popup.fire({\n        title: 'Error while deleting the member',\n        confirmButtonText: 'Retry'\n      });\n    });\n  };\n};\n/* INSTAGRAM */\n\nexport const connectInstagramPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/connect/`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de connect page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err connect page insta\", err));\n  };\n};\nexport const disconnectInstagramPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/disconnect`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err disconnect page instagram\", err));\n  };\n};\nexport const deleteInstagramPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/delete`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err disconnect page instagram\", err));\n  };\n};\nexport const makeOwnerInstagramPage = (idPage, idFacebook) => {\n  return dispatch => {\n    let page = {\n      id: idPage,\n      idFacebook: idFacebook // idFacebook of the new owner\n\n    };\n    return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/owner`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de owner page insta', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err owner page instagram\", err));\n  };\n};\n/* FACEBOOK */\n\nexport const connectFacebookPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pages/connect/`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de connect page facebook', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err de connect page facebook\", err));\n  };\n};\nexport const disconnectFacebookPage = idPage => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pages/disconnect/disconnect`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page facebok', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err de disconnect page facebok\", err));\n  };\n};\nexport const deleteFacebookPage = (idPage, idFacebook) => {\n  return dispatch => {\n    let page = {\n      id: idPage\n    };\n    return axios.post(host + `/api/v1/secure/pages/disconnect/delete`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de disconnect page facebok', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err de disconnect page facebok\", err));\n  };\n};\nexport const makeOwnerFacebookPage = (idPage, idFacebook) => {\n  return dispatch => {\n    let page = {\n      id: idPage,\n      idFacebook: idFacebook // idFacebook of the new owner\n\n    };\n    return axios.post(host + `/api/v1/secure/pages/disconnect/owner`, page, {\n      headers: {\n        'authorization': 'Bearer ' + localStorage.getItem('authtoken')\n      }\n    }).then(res => {\n      console.log('retour de owner page facebook', res.data); // dispatch({\n      //     type: 'GET_ENTITIES_OF_A_PAGE',\n      //     payload: res.data.data\n      // })\n    }).catch(err => console.log(\"err owner page facebook\", err));\n  };\n};\nexport const purgePages = (allPages, idPage) => {\n  return async dispatch => {\n    console.log('idPage', idPage, 'purge this =>', allPages); // allPages.filter(page => page.idPage !== idPage);\n\n    dispatch({\n      type: 'GET_ALL_PAGES',\n      payload: allPages.filter(page => page.idPage !== idPage)\n    });\n  };\n};\nexport const sycroPageWithWizard = (allPages, wizardPage) => {\n  return async dispatch => {\n    // console.log('Lets search for', wizardPage);\n    // console.log('in', allPages);\n    let found = allPages.filter(p => p.idPage === wizardPage.id);\n    let page = found[0]; // console.log(\"Pagek ahaya =>\", page);\n\n    const selectedPage = {\n      platform: page.platform,\n      name: page.name,\n      picture_url: page.imageUrl ? page.imageUrl : `https://graph.facebook.com/v8.0/${page.idPage}/picture?access_token=${page.access_token}`,\n      id: page.idPage,\n      accessToken: page.access_token,\n      team: page.user,\n      admins: page.admins,\n      status: page.status\n    }; // console.log(\"You just sync a page with wizard\", selectedPage)\n\n    dispatch({\n      type: 'SELECT_SOCIAL_MEDIA_PAGE',\n      payload: selectedPage\n    });\n  };\n};\nexport const selectSocialMediaPage = (page, platform, status) => {\n  return async dispatch => {\n    /*\r\n        ALL STATUS :\r\n        \"listPageConnectedOwner\" => #E5007D\" || \"listPageInvite\" => #139216\" \r\n        \"listPageInviteAdmin\" => \"#199EE3\"  || \"listPageConnectedOtherTeam\" => #B4B4B4\"\r\n        \"listPageNotConnected\" => \"No Color\"\r\n    */\n    const selectedPage = {\n      platform: platform === \"fb\" ? \"facebook\" : \"instagram\",\n      name: page.name,\n      picture_url: page.imageUrl ? page.imageUrl : `https://graph.facebook.com/v8.0/${page.idPage}/picture?access_token=${page.access_token}`,\n      id: page.idPage,\n      accessToken: page.access_token,\n      team: page.user,\n      admins: page.admins,\n      status: status\n    }; // console.log(\"u just selected a page\", selectedPage)\n\n    dispatch({\n      type: 'SELECT_SOCIAL_MEDIA_PAGE',\n      payload: selectedPage\n    });\n  };\n};\nexport const getFbData = () => {\n  return async dispatch => {\n    let token = await localStorage.getItem('authtoken');\n    return axios.get(host + '/api/v1/secure/pages/get/all/', {\n      headers: {\n        'authorization': 'Bearer ' + token\n      }\n    }).then(res => {\n      let allFbPages = [];\n      Object.entries(res.data.data).map(([key, tab]) => tab.map(page => {\n        page.status = key;\n        allFbPages.push(page);\n      }));\n      allFbPages.sort((page, nextPage) => {\n        let nameA = page.name.toLowerCase(),\n            nameB = nextPage.name.toLowerCase(); //sort ascending \n\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0; // default return value (no sorting)\n      });\n      dispatch({\n        type: 'GET_FB_DATA',\n        payload: allFbPages,\n        payload2: res.data.data\n      });\n    }).catch(err => {\n      console.log(\"GetFbData err\", JSON.stringify(err));\n    });\n  };\n};\nexport const getInstaData = () => {\n  return async dispatch => {\n    let token = await localStorage.getItem('authtoken');\n    return axios.get(host + '/api/v1/secure/pagesInsta/get/all/', {\n      headers: {\n        'authorization': 'Bearer ' + token\n      }\n    }).then(res => {\n      // console.log('Instagram pages ya haider =>', res.data.data)\n      let allInstaPages = [];\n      Object.entries(res.data.data).map(([key, tab]) => tab.map(page => {\n        page.status = key;\n        allInstaPages.push(page);\n      }));\n      allInstaPages.sort((page, nextPage) => {\n        let nameA = page.name.toLowerCase(),\n            nameB = nextPage.name.toLowerCase(); //sort ascending \n\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0; // default return value (no sorting)\n      });\n      dispatch({\n        type: 'GET_INSTA_DATA',\n        payload: allInstaPages,\n        payload2: res.data.data\n      });\n    }).catch(err => {\n      console.log(\"getInstaData error\", JSON.stringify(err));\n    });\n  };\n};\nexport const getAllPage = () => {\n  return async dispatch => {\n    let token = await localStorage.getItem('authtoken');\n    dispatch({\n      type: 'RESET_ALL_PAGES'\n    });\n    return axios.get(host + '/api/v1/secure/pages/test/get/all/', {\n      headers: {\n        'authorization': 'Bearer ' + token\n      }\n    }).then(res => {\n      // console.log('getting all pages :D ===>', res.data.data)\n      let apiResp = res.data.data;\n      let allPages = []; // Push the Fb Data:\n\n      Object.entries(apiResp.facebookPages).map(([key, tab]) => tab.map(page => {\n        page.platform = \"facebook\";\n        page.status = key;\n        allPages.push(page);\n      })); // Push the Insta Data:\n\n      Object.entries(apiResp.instaPages).map(([key, tab]) => tab.map(page => {\n        page.platform = \"instagram\";\n        page.status = key;\n        allPages.push(page);\n      }));\n      allPages.sort((page, nextPage) => {\n        let nameA = page.name.toLowerCase(),\n            nameB = nextPage.name.toLowerCase(); //sort ascending \n\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0; // default return value (no sorting)\n      }); // console.log(\"All Pages for test are Sorted=>\",allPages);\n\n      dispatch({\n        type: 'GET_ALL_PAGES',\n        payload: allPages\n      });\n    }).catch(err => {\n      console.log(\"getAllPage error\", JSON.stringify(err));\n    });\n  };\n};\nexport const getAllPageConnected = () => {\n  return async dispatch => {\n    let token = await localStorage.getItem('authtoken');\n    dispatch({\n      type: 'RESET_ALL_PAGES'\n    });\n    return axios.get(host + '/api/v1/secure/pages/test/connect/get/all/', {\n      headers: {\n        'authorization': 'Bearer ' + token\n      }\n    }).then(res => {\n      // console.log('getAllPageConnected ===>', res.data.data)\n      let apiResp = res.data.data;\n      let allPages = []; // Push the Fb Data:\n\n      Object.entries(apiResp.facebookPages).map(([key, tab]) => tab.map(page => {\n        page.platform = \"facebook\";\n        page.status = key;\n        allPages.push(page);\n      }));\n      Object.entries(apiResp.instaPages).map(([key, tab]) => tab.map(page => {\n        page.platform = \"instagram\";\n        page.status = key;\n        allPages.push(page);\n      }));\n      allPages.sort((page, nextPage) => {\n        let nameA = page.name.toLowerCase(),\n            nameB = nextPage.name.toLowerCase(); //sort ascending \n\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0; // default return value (no sorting)\n      }); // console.log(\"All Pages Connected Pages for test are Sorted =>\",allPages);\n\n      dispatch({\n        type: 'GET_ALL_PAGES',\n        payload: allPages\n      });\n    }).catch(err => {\n      console.log(\"getAllPageConnected error\", JSON.stringify(err));\n    });\n  };\n};\nexport const resetAllPages = () => {\n  return dispatch => dispatch({\n    type: 'RESET_ALL_PAGES'\n  });\n};\nexport const resetDashboard = () => {\n  return dispatch => dispatch({\n    type: 'RESET_DASHBOARD'\n  });\n};\nexport const resetSocialMediaSelections = () => {\n  return dispatch => dispatch({\n    type: 'RESET_SM_SELECTIONS'\n  });\n};","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/redux/actions/socialMediaActions.js"],"names":["axios","host","Swal","popup","mixin","customClass","confirmButton","buttonsStyling","setPublicReply","history","page","message","dispatch","objectToSend","pagePlatform","platform","statut","status","console","log","setLang","lang","localStorage","setItem","type","payload","filterPages","filterBy","Pages","filteredPages","filter","resetFilterPages","filterDashboardIntents","Page","get","id","headers","getItem","then","res","data","limitedTo5","slice","catch","err","getDashboardPosts","fbHost","accessToken","getDashboard","setPreferences","spam","likes","delay","Platform","exactlySeconds","exactlyMinutes","randomlyFromSeconds","randomlyFromMinutes","randomlyToSeconds","randomlyToMinutes","platforme","likesComment","respReplies","time","minutes","seconds","finalTime","minutesFrom","secondsFrom","finalTimeFrom","minutesTo","secondsTo","finalTimeTo","put","idPage","push","addPageEntity","getPageEntities","categories","length","map","cat","index","default","splice","getTeamMembers","sendMailTeam","emailTeamMember","nameTeamMember","inviteToken","post","email","nameUser","token","inviteMember","deleteTeamMember","idFacebook","role","typePage","fire","title","confirmButtonText","connectInstagramPage","disconnectInstagramPage","deleteInstagramPage","makeOwnerInstagramPage","connectFacebookPage","disconnectFacebookPage","deleteFacebookPage","makeOwnerFacebookPage","purgePages","allPages","sycroPageWithWizard","wizardPage","found","p","selectedPage","name","picture_url","imageUrl","access_token","team","user","admins","selectSocialMediaPage","getFbData","allFbPages","Object","entries","key","tab","sort","nextPage","nameA","toLowerCase","nameB","payload2","JSON","stringify","getInstaData","allInstaPages","getAllPage","apiResp","facebookPages","instaPages","getAllPageConnected","resetAllPages","resetDashboard","resetSocialMediaSelections"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { host } from '../../config';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\n\r\n// Popup Config: \r\nconst popup = Swal.mixin({\r\n    customClass: {\r\n    confirmButton: 'wizard-pages-active-btn',\r\n    },\r\n    buttonsStyling: false\r\n});\r\n\r\n// Public reply:\r\nexport const setPublicReply = (history,page,message) => {\r\n    return (dispatch) => {\r\n        \r\n        let objectToSend = null;\r\n        let pagePlatform = page.platform === \"fb\" ? \"facebook\" : \"instagram\";\r\n      \r\n        objectToSend = {\r\n            statut: page.status,\r\n            message: message,\r\n        }\r\n\r\n        console.log(\"Public Reply sending to nour\", objectToSend);\r\n\r\n        // return axios.put(host + `/api/v1/secure/pages/publicreply/${Page.idPage}/${page.platform}`,objectToSend,{\r\n        //     headers: {\r\n        //         'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n        //     }\r\n        // })\r\n        // .then(res => {\r\n        //     console.log('Public Reply Response =>', res.data.data);\r\n\r\n        //     history.push('/pages');\r\n        // })\r\n        // .catch((err) => console.log(\"setPreferences err\", err))\r\n    }\r\n};\r\n\r\n// Set Language :\r\nexport const setLang = (lang) => {\r\n    return (dispatch) => {\r\n        // console.log(\"Lang !\", lang);\r\n        localStorage.setItem(\"modoLang\", lang);\r\n\r\n        dispatch({\r\n            type: 'SET_LANG',\r\n            payload: lang,\r\n        });\r\n    };\r\n};\r\n\r\n// Filtring Pages:\r\nexport const filterPages = (filterBy,Pages) => {\r\n    return (dispatch) => {\r\n\r\n        // console.log(\"Filter\", filterBy, \"Those =>\", Pages)\r\n        \r\n        if(filterBy === \"all\") {\r\n            dispatch({\r\n                type: 'FILTER_PAGES',\r\n                payload: [],\r\n            });\r\n        } else {\r\n            let filteredPages = Pages.filter((page) => page.platform === filterBy);\r\n            dispatch({\r\n                type: 'GET_ALL_PAGES',\r\n                payload: filteredPages,\r\n            });\r\n        };\r\n        \r\n    };\r\n};\r\n\r\nexport const resetFilterPages = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: 'RESET_FILTER_PAGES' });\r\n    };\r\n};\r\n\r\nexport const filterDashboardIntents = (Page,filter) => {\r\n    return (dispatch) => {\r\n\r\n        return axios.get(host + `/api/v1/secure/logEvent/dashbord/intent/${Page.id}/${Page.platform}/${filter}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('Filtring dashboard intents RESULTS =>', res.data.data);\r\n            let limitedTo5 = res.data.data.slice(0,5);\r\n\r\n            dispatch({\r\n                type: 'GET_DASHBOARD',\r\n                payload: limitedTo5,\r\n            });\r\n        })\r\n        .catch((err) => console.log(\"Error Filtring dashboard intents\", err))\r\n    };\r\n};\r\n\r\nexport const getDashboardPosts = (Page) => {\r\n    return (dispatch) => {\r\n\r\n        const fbHost = \"https://graph.facebook.com/v8.0\";\r\n\r\n        return axios.get(host + `/api/v1/secure/logEvent/dashbord/post/${Page.id}/${Page.accessToken}/${Page.platform}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('getDashboardPosts', res.data.data);\r\n            \r\n            dispatch({\r\n                type: 'GET_DASHBOARD_POSTS',\r\n                payload: res.data.data,\r\n            });\r\n            \r\n        })\r\n        .catch((err) => console.log(\"err getDashboardPosts\", err))\r\n    };\r\n};\r\n\r\nexport const getDashboard = (Page) => {\r\n    return (dispatch) => {\r\n\r\n        // console.log(\"Getting the dashboard with page =>\", Page.id);\r\n        let filter = \"all\";\r\n\r\n        return axios.get(host + `/api/v1/secure/logEvent/dashbord/intent/${Page.id}/${Page.platform}/${filter}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('/logEvent/dashbord/intent/ Result =>', res.data.data);\r\n            let limitedTo5 = res.data.data.slice(0,5);\r\n\r\n            dispatch({\r\n                type: 'GET_DASHBOARD',\r\n                payload: limitedTo5,\r\n            });\r\n        })\r\n        .catch((err) => console.log(\"err getDashboard\", err))\r\n    };\r\n};\r\n\r\nexport const setPreferences = (history,spam,likes,delay,Page,Platform,exactlySeconds,exactlyMinutes,randomlyFromSeconds,randomlyFromMinutes,randomlyToSeconds,randomlyToMinutes) => {\r\n    return (dispatch) => {\r\n        \r\n        let objectToSend = null;\r\n        let pagePlatform = Platform === \"fb\" ? \"facebook\" : \"instagram\";\r\n        if(delay === \"immediatly\") {\r\n            objectToSend = {\r\n                platforme: pagePlatform,\r\n                likesComment:likes,\r\n                spam: spam,\r\n                respReplies: {\r\n                    statut: 'immediatly',\r\n                    time: [0]\r\n                }\r\n            }\r\n\r\n            console.log(\"Immediatly\",objectToSend);\r\n\r\n        } else if(delay === \"Exactly\") {\r\n            // Minutes + Seconds => X ms\r\n            let minutes = exactlyMinutes * 60000;\r\n            let seconds = exactlySeconds * 1000;\r\n            let finalTime = minutes + seconds;\r\n\r\n            objectToSend = {\r\n                platforme: pagePlatform,\r\n                likesComment:likes,\r\n                spam: spam,\r\n                respReplies: {\r\n                    statut: 'Exactly',\r\n                    time: [finalTime],\r\n                }\r\n            }\r\n\r\n            console.log(\"Exactly\",objectToSend);\r\n\r\n        } else {\r\n            // from Minutes + Seconds => X ms\r\n            // to Minutes + Seconds => X ms\r\n            let minutesFrom = randomlyFromMinutes * 60000;\r\n            let secondsFrom = randomlyFromSeconds * 1000;\r\n            let finalTimeFrom = minutesFrom + secondsFrom;\r\n            \r\n            let minutesTo = randomlyToMinutes * 60000;\r\n            let secondsTo = randomlyToSeconds * 1000;\r\n            let finalTimeTo = minutesTo + secondsTo;\r\n\r\n            objectToSend = {\r\n                platforme: pagePlatform,\r\n                likesComment:likes,\r\n                spam: spam,\r\n                respReplies: {\r\n                    statut: 'Randomly',\r\n                    time: [finalTimeFrom,finalTimeTo],\r\n                }\r\n            }\r\n\r\n            console.log(\"Randomly\",objectToSend);\r\n\r\n        }\r\n\r\n\r\n        console.log(\"Preferences sending to nour\", objectToSend);\r\n\r\n        return axios.put(host + `/api/v1/secure/pages/preference/${Page.idPage}/${pagePlatform}`,objectToSend,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('setPreferences Response =>', res.data.data);\r\n\r\n            history.push('/pages');\r\n        })\r\n        .catch((err) => console.log(\"setPreferences err\", err))\r\n    }\r\n};\r\n\r\nexport const addPageEntity = (page) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + `/api/v1/secure/pages/entities/add/${page.id}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('add entity', res.data.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err addPageEntity\", err))\r\n    }\r\n};\r\n\r\nexport const getPageEntities = (page) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + `/api/v1/secure/project/get/entitiesproject/${page.platform}/${page.id}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('entities mtaaa page', res.data.data);\r\n            let categories = res.data.data;\r\n\r\n            if(categories.length > 0) {\r\n                categories.map((cat,index) =>\r\n                    cat.default === true && categories.splice(index,1)\r\n                );\r\n            };\r\n\r\n\r\n            dispatch({\r\n                type: 'GET_ENTITIES_OF_A_PAGE',\r\n                payload: categories\r\n            })\r\n        })\r\n        .catch((err) => console.log(\"err getPageEntities\", err))\r\n    }\r\n};\r\n\r\n// TEAM:\r\n\r\nexport const getTeamMembers = (Page) => {\r\n    return (dispatch) => {\r\n\r\n        return axios.get(host + `/api/v1/secure/membership/listUser/${Page.id}/${Page.platform}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('membership/listUser/ Response api  => ', res.data.data);\r\n\r\n            dispatch({\r\n                type: 'GET_TEAM',\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch((err) => console.log(\"membership/listUser/ error =>\", err))\r\n    }\r\n};\r\n\r\nexport const sendMailTeam = (Page, emailTeamMember, nameTeamMember, inviteToken) => {\r\n    return (dispatch) => {\r\n    \r\n        // console.log(\"Page\", Page);\r\n        // console.log(\"Email\", emailTeamMember);\r\n        // console.log(\"Name\", nameTeamMember);\r\n\r\n        return axios.post(host + `/api/v1/secure/membership/sendMail/${Page.id}/${Page.platform}`, {\r\n            email: emailTeamMember,\r\n            nameUser: nameTeamMember,\r\n            token: inviteToken,\r\n        },\r\n        {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('membership/sendMail/ Response api  => ', res.data.data)\r\n        })\r\n        .catch((err) => console.log(\"membership/sendMail/ error =>\", err))\r\n    }\r\n};\r\n\r\nexport const inviteMember = (page,nameTeamMember) => {\r\n    return (dispatch) => {\r\n        \r\n        return axios.get(host + `/api/v1/secure/membership/get/${page.id}/${page.platform}/${nameTeamMember}`, {\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        // .then(res => {\r\n        //     console.log('membership/get  inviteMember !! =>', res.data.data);\r\n        \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        // })\r\n        // .catch((err) => console.log(\"err inviteMember\", err))\r\n    }\r\n};\r\n\r\nexport const deleteTeamMember = (page,idFacebook,role) => {\r\n    return (dispatch) => {\r\n       let typePage = page.platform;\r\n       let idPage = page.id;\r\n\r\n        return axios.post(host + `/api/v1/secure/membership/deleteMember/${role}`,{\r\n            idFacebook,\r\n            idPage,\r\n            typePage,\r\n        },{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('/membership/deleteMember/ response api', res.data.data);\r\n\r\n            dispatch({\r\n                type: 'GET_TEAM',\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"/membership/deleteMember/ error api\", err)\r\n            popup.fire({\r\n                title: 'Error while deleting the member',\r\n                confirmButtonText: 'Retry',\r\n            });\r\n        })\r\n    }\r\n};\r\n\r\n\r\n/* INSTAGRAM */\r\nexport const connectInstagramPage = (idPage) => {\r\n    return (dispatch) => {\r\n\r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/connect/`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de connect page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err connect page insta\", err))\r\n    }\r\n};\r\n\r\nexport const disconnectInstagramPage = (idPage) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/disconnect`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err disconnect page instagram\", err))\r\n    };\r\n};\r\n\r\nexport const deleteInstagramPage = (idPage) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/delete`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err disconnect page instagram\", err))\r\n    };\r\n};\r\n\r\nexport const makeOwnerInstagramPage = (idPage,idFacebook) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n            idFacebook: idFacebook // idFacebook of the new owner\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pagesInsta/disconnect/owner`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de owner page insta', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err owner page instagram\", err))\r\n    };\r\n};\r\n\r\n/* FACEBOOK */\r\nexport const connectFacebookPage = (idPage) => {\r\n    return (dispatch) => {\r\n        \r\n        let page ={\r\n            id: idPage,\r\n        };\r\n\r\n        return axios.post(host + `/api/v1/secure/pages/connect/`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de connect page facebook', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err de connect page facebook\", err))\r\n    }\r\n};\r\n\r\nexport const disconnectFacebookPage = (idPage) => {\r\n    return (dispatch) => {\r\n\r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pages/disconnect/disconnect`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page facebok', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err de disconnect page facebok\", err))\r\n\r\n    };\r\n};\r\n\r\nexport const deleteFacebookPage = (idPage,idFacebook) => {\r\n    return (dispatch) => {\r\n\r\n        let page = {\r\n            id: idPage,\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pages/disconnect/delete`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de disconnect page facebok', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err de disconnect page facebok\", err))\r\n\r\n    };\r\n};\r\n\r\nexport const makeOwnerFacebookPage = (idPage,idFacebook) => {\r\n    return (dispatch) => {\r\n     \r\n        let page = {\r\n            id: idPage,\r\n            idFacebook: idFacebook // idFacebook of the new owner\r\n        };\r\n        \r\n        return axios.post(host + `/api/v1/secure/pages/disconnect/owner`,page,{\r\n            headers: {\r\n                'authorization': 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log('retour de owner page facebook', res.data);\r\n            \r\n            // dispatch({\r\n            //     type: 'GET_ENTITIES_OF_A_PAGE',\r\n            //     payload: res.data.data\r\n            // })\r\n        })\r\n        .catch((err) => console.log(\"err owner page facebook\", err))\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const purgePages = (allPages, idPage) => {\r\n    return async (dispatch) => {        \r\n        console.log('idPage', idPage,'purge this =>', allPages ,);\r\n        // allPages.filter(page => page.idPage !== idPage);\r\n    \r\n        dispatch({\r\n            type: 'GET_ALL_PAGES',\r\n            payload: allPages.filter(page => page.idPage !== idPage),\r\n        })\r\n    }\r\n};\r\n\r\nexport const sycroPageWithWizard = (allPages,wizardPage) => {\r\n    return async (dispatch) => {\r\n        \r\n        // console.log('Lets search for', wizardPage);\r\n        // console.log('in', allPages);\r\n\r\n        let found = allPages.filter((p) => p.idPage === wizardPage.id);\r\n        let page = found[0];\r\n        \r\n        // console.log(\"Pagek ahaya =>\", page);\r\n\r\n        const selectedPage = {\r\n            platform: page.platform,\r\n            name: page.name,\r\n            picture_url : page.imageUrl ? page.imageUrl : `https://graph.facebook.com/v8.0/${page.idPage}/picture?access_token=${page.access_token}`,\r\n            id: page.idPage,\r\n            accessToken: page.access_token,\r\n            team: page.user,\r\n            admins: page.admins,\r\n            status: page.status,\r\n        };\r\n        \r\n        // console.log(\"You just sync a page with wizard\", selectedPage)\r\n\r\n        dispatch({\r\n            type: 'SELECT_SOCIAL_MEDIA_PAGE',\r\n            payload: selectedPage\r\n        })\r\n    }\r\n};\r\n\r\nexport const selectSocialMediaPage = (page,platform,status) => {\r\n    return async (dispatch) => {\r\n        /*\r\n            ALL STATUS :\r\n            \"listPageConnectedOwner\" => #E5007D\" || \"listPageInvite\" => #139216\" \r\n            \"listPageInviteAdmin\" => \"#199EE3\"  || \"listPageConnectedOtherTeam\" => #B4B4B4\"\r\n            \"listPageNotConnected\" => \"No Color\"\r\n        */\r\n\r\n        const selectedPage = {\r\n            platform: platform === \"fb\" ? \"facebook\" : \"instagram\",\r\n            name: page.name,\r\n            picture_url : page.imageUrl ? page.imageUrl : `https://graph.facebook.com/v8.0/${page.idPage}/picture?access_token=${page.access_token}`,\r\n            id: page.idPage,\r\n            accessToken: page.access_token,\r\n            team: page.user,\r\n            admins: page.admins,\r\n            status: status,\r\n        };\r\n        \r\n        // console.log(\"u just selected a page\", selectedPage)\r\n\r\n        dispatch({\r\n            type: 'SELECT_SOCIAL_MEDIA_PAGE',\r\n            payload: selectedPage\r\n        })\r\n    }\r\n};\r\n\r\nexport const getFbData = () => {\r\n    return async (dispatch) => {\r\n           \r\n        let token = await localStorage.getItem('authtoken');\r\n\r\n        return axios.get(host + '/api/v1/secure/pages/get/all/', {\r\n            headers: {\r\n                'authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n        .then(res => {\r\n        \r\n            let allFbPages = [];\r\n            Object.entries(res.data.data).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.status = key;\r\n                    allFbPages.push(page);\r\n            }));\r\n\r\n            allFbPages.sort((page,nextPage) =>  {\r\n                let  nameA = page.name.toLowerCase(), nameB = nextPage.name.toLowerCase()\r\n                //sort ascending \r\n                if (nameA < nameB) return -1; \r\n\r\n                if (nameA > nameB) return 1;\r\n                \r\n                return 0; // default return value (no sorting)\r\n            });\r\n\r\n            dispatch({\r\n                type: 'GET_FB_DATA',\r\n                payload: allFbPages,\r\n                payload2: res.data.data,\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"GetFbData err\", JSON.stringify(err))\r\n        })\r\n    }\r\n};\r\n\r\nexport const getInstaData = () => {\r\n    return async (dispatch) => {\r\n\r\n       let token = await localStorage.getItem('authtoken');\r\n        \r\n        return axios.get(host + '/api/v1/secure/pagesInsta/get/all/', {\r\n            headers: {\r\n                'authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('Instagram pages ya haider =>', res.data.data)\r\n            let allInstaPages = [];\r\n            \r\n            Object.entries(res.data.data).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.status = key;\r\n                    allInstaPages.push(page);\r\n                }\r\n            ));\r\n\r\n            allInstaPages.sort((page,nextPage) =>  {                \r\n                let  nameA = page.name.toLowerCase(), nameB = nextPage.name.toLowerCase()\r\n                //sort ascending \r\n                if (nameA < nameB) return -1; \r\n\r\n                if (nameA > nameB) return 1;\r\n                \r\n                return 0; // default return value (no sorting)\r\n            });\r\n            \r\n            dispatch({\r\n                type: 'GET_INSTA_DATA',\r\n                payload: allInstaPages,\r\n                payload2: res.data.data\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"getInstaData error\", JSON.stringify(err))\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport const getAllPage = () => {\r\n    return async (dispatch) => {\r\n\r\n        let token = await localStorage.getItem('authtoken');\r\n\r\n        dispatch({ type: 'RESET_ALL_PAGES' })\r\n        \r\n        return axios.get(host + '/api/v1/secure/pages/test/get/all/', {\r\n            headers: {\r\n                'authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('getting all pages :D ===>', res.data.data)\r\n\r\n            let apiResp = res.data.data;\r\n            let allPages = [];\r\n\r\n            // Push the Fb Data:\r\n            Object.entries(apiResp.facebookPages).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.platform = \"facebook\"\r\n                    page.status = key;\r\n                    allPages.push(page);\r\n            }));\r\n            \r\n            // Push the Insta Data:\r\n            Object.entries(apiResp.instaPages).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.platform = \"instagram\"\r\n                    page.status = key;\r\n                    allPages.push(page);\r\n            }));\r\n\r\n            allPages.sort((page,nextPage) =>  {                \r\n                let  nameA = page.name.toLowerCase(), nameB = nextPage.name.toLowerCase()\r\n                //sort ascending \r\n                if (nameA < nameB) return -1; \r\n\r\n                if (nameA > nameB) return 1;\r\n                \r\n                return 0; // default return value (no sorting)\r\n            });\r\n            \r\n            // console.log(\"All Pages for test are Sorted=>\",allPages);\r\n\r\n            dispatch({\r\n                type: 'GET_ALL_PAGES',\r\n                payload: allPages,\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"getAllPage error\", JSON.stringify(err))\r\n        });\r\n\r\n    }\r\n};\r\n\r\nexport const getAllPageConnected = () => {\r\n    return async (dispatch) => {\r\n\r\n        let token = await localStorage.getItem('authtoken');\r\n        \r\n        dispatch({ type: 'RESET_ALL_PAGES' })\r\n        \r\n\r\n        return axios.get(host + '/api/v1/secure/pages/test/connect/get/all/', {\r\n            headers: {\r\n                'authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n        .then(res => {\r\n            // console.log('getAllPageConnected ===>', res.data.data)\r\n\r\n            let apiResp = res.data.data;\r\n            let allPages = [];\r\n\r\n            // Push the Fb Data:\r\n            Object.entries(apiResp.facebookPages).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.platform = \"facebook\"\r\n                    page.status = key;\r\n                    allPages.push(page);\r\n            }));\r\n            \r\n            Object.entries(apiResp.instaPages).map( ([key, tab]) => \r\n                tab.map((page) => {\r\n                    page.platform = \"instagram\"\r\n                    page.status = key;\r\n                    allPages.push(page);\r\n            }));\r\n            \r\n            allPages.sort((page,nextPage) =>  {                \r\n                let  nameA = page.name.toLowerCase(), nameB = nextPage.name.toLowerCase()\r\n                //sort ascending \r\n                if (nameA < nameB) return -1; \r\n\r\n                if (nameA > nameB) return 1;\r\n                \r\n                return 0; // default return value (no sorting)\r\n            });\r\n\r\n            // console.log(\"All Pages Connected Pages for test are Sorted =>\",allPages);\r\n\r\n            dispatch({\r\n                type: 'GET_ALL_PAGES',\r\n                payload: allPages,\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"getAllPageConnected error\", JSON.stringify(err))\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport const resetAllPages = () => {\r\n    return (dispatch) => dispatch({ type: 'RESET_ALL_PAGES' });\r\n};\r\n\r\nexport const resetDashboard = () => {\r\n    return (dispatch) => dispatch({ type: 'RESET_DASHBOARD' });\r\n};\r\n\r\nexport const resetSocialMediaSelections = () => {\r\n    return (dispatch) => dispatch({ type: 'RESET_SM_SELECTIONS' });\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}