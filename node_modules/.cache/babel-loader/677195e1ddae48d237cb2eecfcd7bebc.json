{"ast":null,"code":"var _jsxFileName = \"/usr/work/smart_front_oussema/src/dachboard/AddCategory.js\";\nimport React from 'react';\nimport { addentity } from '../actions';\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport TopMenu from '../components/TopMenu';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction AddCategory(props) {\n  const [entity, setEntity] = useState(''); // const [synonyms, setSynonyms] = useState(null)\n  // const [content, setContent] = useState(null)\n\n  const [values, setValues] = useState([]);\n\n  const handelSubmit = (entity, values) => {\n    const newEntity = {\n      idUser: props.fb,\n      entity: {\n        name: entity,\n        values\n      }\n    };\n    return props.addEntity(newEntity);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(TopMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      paddingLeft: 30,\n      paddingRight: 30,\n      paddingTop: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    style: {\n      fontSize: 30,\n      color: \"rgba(45, 47, 57, 1)\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Add Category\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"entityNameUpdate\",\n    value: entity,\n    onChange: e => setEntity(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      marginTop: 30,\n      marginBottom: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"add\",\n    id: \"addEntity\",\n    placeholder: \"Add Product\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => {\n      const obj = {\n        id: uuidv4(),\n        content: document.getElementById(\"addEntity\").value,\n        synonyms: []\n      };\n      setValues([...values, obj]);\n      document.getElementById(\"addEntity\").value = \"\";\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"142\",\n    height: \"40\",\n    viewBox: \"0 0 142 40\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    \"data-name\": \"Groupe 1136\",\n    transform: \"translate(-661 -274)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    transform: \"translate(633 274)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"rect\", {\n    width: \"142\",\n    height: \"40\",\n    fill: \"#e5007d\",\n    rx: \"4\",\n    transform: \"translate(28)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(\"text\", {\n    fill: \"#fff\",\n    \"data-name\": \"Add Value\",\n    fontFamily: \"Poppins-SemiBold, Poppins\",\n    fontSize: \"16\",\n    fontWeight: \"600\",\n    transform: \"translate(680 300)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"tspan\", {\n    x: \"0\",\n    y: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Add Products\")))))), React.createElement(\"div\", {\n    style: {\n      background: '#fff',\n      paddingTop: 20,\n      paddingLeft: 70,\n      paddingRight: 70,\n      paddingBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    style: {\n      textAlign: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Products\"), React.createElement(\"th\", {\n    style: {\n      textAlign: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    style: {\n      textAlign: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Synonyms\"), React.createElement(\"th\", {\n    style: {\n      textAlign: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, values && values.map(el => React.createElement(\"tr\", {\n    key: uuidv4(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, el.content)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, el.synonyms && el.synonyms.map(Element => React.createElement(\"span\", {\n    key: uuidv4(),\n    className: \"entitys\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, Element)), React.createElement(\"form\", {\n    className: \"addSynForm\",\n    onSubmit: e => {\n      e.preventDefault();\n      const modifArr = [...values];\n      modifArr.forEach(Element => {\n        if (Element.id == el.id) {\n          Element.synonyms.push(e.target.addSyn.value);\n        }\n      });\n      setValues(modifArr);\n    },\n    className: \"addSynForm\",\n    style: {\n      display: \"inline-block\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"19.176\",\n    height: \"19.176\",\n    viewBox: \"0 0 19.176 19.176\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    fill: \"none\",\n    stroke: \"#818e94\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"1.5\",\n    \"data-name\": \"Icon feather-plus-circle\",\n    transform: \"translate(-2.25 -2.25)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    d: \"M20.676 11.838A8.838 8.838 0 1111.838 3a8.838 8.838 0 018.838 8.838z\",\n    \"data-name\": \"Trac\\xE9 210\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(\"path\", {\n    d: \"M11.838 8.303v7.07\",\n    \"data-name\": \"Trac\\xE9 211\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(\"path\", {\n    d: \"M8.303 11.838h7.07\",\n    \"data-name\": \"Trac\\xE9 212\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }))), React.createElement(\"input\", {\n    className: \"addSyn\",\n    name: \"addSyn\",\n    type: \"text\",\n    placeholder: \"Add Synonym\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }))), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    onClick: () => {\n      setValues([...values].filter(Element => Element.id !== el.id)); // setSynonyms('');\n      // setContent('')\n    },\n    style: {\n      cursor: 'pointer'\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"27\",\n    height: \"28.786\",\n    viewBox: \"0 0 27 28.786\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    fill: \"none\",\n    stroke: \"#e5137d\",\n    strokeLinecap: \"square\",\n    strokeMiterlimit: \"10\",\n    strokeWidth: \"2\",\n    transform: \"translate(-3 -1)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    d: \"M26.322 9.143V27a1.786 1.786 0 01-1.786 1.786H8.465A1.786 1.786 0 016.679 27V9.143\",\n    \"data-name\": \"Trac\\xE9 429\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(\"path\", {\n    d: \"M0 0L0 10\",\n    \"data-name\": \"Ligne 25\",\n    transform: \"translate(17 13.786)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(\"path\", {\n    d: \"M0 0L0 10\",\n    \"data-name\": \"Ligne 26\",\n    transform: \"translate(12 13.786)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), React.createElement(\"path\", {\n    d: \"M0 0L0 10\",\n    \"data-name\": \"Ligne 27\",\n    transform: \"translate(21 13.786)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(\"path\", {\n    d: \"M12.036 6.464V2h8.929v4.464\",\n    \"data-name\": \"Trac\\xE9 430\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), React.createElement(\"path\", {\n    d: \"M25 0L0 0\",\n    \"data-name\": \"Ligne 28\",\n    transform: \"translate(4 6.786)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }))))))))), React.createElement(\"div\", {\n    style: {\n      textAlign: 'right',\n      marginTop: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    onClick: () => {\n      if (!entity || !values) {\n        alert('you have fill all the value');\n        return;\n      } // console.log('data ', { entity, values })\n\n\n      handelSubmit(entity, values).then(() => {\n        props.history.push('/dachboard/entities');\n      });\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"142\",\n    height: \"40\",\n    viewBox: \"0 0 142 40\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    \"data-name\": \"Groupe 1136\",\n    transform: \"translate(-661 -274)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    transform: \"translate(633 274)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(\"rect\", {\n    width: \"80\",\n    height: \"40\",\n    fill: \"#e5007d\",\n    rx: \"4\",\n    transform: \"translate(28)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  })), React.createElement(\"text\", {\n    fill: \"#fff\",\n    \"data-name\": \"Add Value\",\n    fontFamily: \"Poppins-SemiBold, Poppins\",\n    fontSize: \"16\",\n    fontWeight: \"600\",\n    transform: \"translate(680 300)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(\"tspan\", {\n    x: \"0\",\n    y: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"Save\")))))));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addEntity: data => dispatch(addentity(data))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    fb: state.fbdata.tokenDetail.userID\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCategory);","map":{"version":3,"sources":["/usr/work/smart_front_oussema/src/dachboard/AddCategory.js"],"names":["React","addentity","useState","connect","TopMenu","v4","uuidv4","AddCategory","props","entity","setEntity","values","setValues","handelSubmit","newEntity","idUser","fb","name","addEntity","paddingLeft","paddingRight","paddingTop","fontSize","color","e","target","value","display","marginTop","marginBottom","obj","id","content","document","getElementById","synonyms","background","paddingBottom","textAlign","map","el","Element","preventDefault","modifArr","forEach","push","addSyn","filter","cursor","alert","then","history","mapDispatchToProps","dispatch","data","mapStateToProps","state","fbdata","tokenDetail","userID"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { addentity } from '../actions'\r\nimport { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport TopMenu from '../components/TopMenu'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction AddCategory(props) {\r\n    const [entity, setEntity] = useState('')\r\n    // const [synonyms, setSynonyms] = useState(null)\r\n    // const [content, setContent] = useState(null)\r\n    const [values, setValues] = useState([])\r\n    const handelSubmit = (entity, values) => {\r\n        const newEntity = {\r\n            idUser: props.fb,\r\n            entity: {\r\n                name: entity,\r\n                values\r\n            }\r\n        }\r\n        return props.addEntity(newEntity)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TopMenu />\r\n            <div style={{ paddingLeft: 30, paddingRight: 30, paddingTop: 30 }}>\r\n                <h2 style={{ fontSize: 30, color: \"rgba(45, 47, 57, 1)\" }}>Add Category</h2>\r\n                <div><input type=\"text\" className=\"entityNameUpdate\" value={entity} onChange={e => setEntity(e.target.value)} /><br /><br /></div>\r\n\r\n                <div style={{\r\n                    display: 'flex',\r\n                    marginTop: 30,\r\n                    marginBottom: 30\r\n                }}>\r\n                    <input type=\"text\" name=\"add\" id=\"addEntity\" placeholder=\"Add Product\" required />\r\n                    <button onClick={() => {\r\n                        const obj = {\r\n                            id: uuidv4(),\r\n                            content: document.getElementById(\"addEntity\").value,\r\n                            synonyms: []\r\n                        }\r\n                        setValues([...values, obj])\r\n                        document.getElementById(\"addEntity\").value = \"\"\r\n                    }}>\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"142\"\r\n                            height=\"40\"\r\n                            viewBox=\"0 0 142 40\"\r\n                        >\r\n                            <g data-name=\"Groupe 1136\" transform=\"translate(-661 -274)\">\r\n                                <g transform=\"translate(633 274)\">\r\n                                    <rect\r\n                                        width=\"142\"\r\n                                        height=\"40\"\r\n                                        fill=\"#e5007d\"\r\n                                        rx=\"4\"\r\n                                        transform=\"translate(28)\"\r\n                                    ></rect>\r\n                                </g>\r\n                                <text\r\n                                    fill=\"#fff\"\r\n                                    data-name=\"Add Value\"\r\n                                    fontFamily=\"Poppins-SemiBold, Poppins\"\r\n                                    fontSize=\"16\"\r\n                                    fontWeight=\"600\"\r\n                                    transform=\"translate(680 300)\"\r\n                                >\r\n                                    <tspan x=\"0\" y=\"0\">\r\n                                        Add Products\r\n          </tspan>\r\n                                </text>\r\n                            </g>\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n                <div style={{ background: '#fff', paddingTop: 20, paddingLeft: 70, paddingRight: 70, paddingBottom: 20 }}>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th style={{ textAlign: 'left' }}>Products</th>\r\n                                <th style={{ textAlign: 'left' }}></th>\r\n                                <th style={{ textAlign: 'left' }}>Synonyms</th>\r\n                                <th style={{ textAlign: 'left' }}></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                values && values.map(el =>\r\n                                    <tr key={uuidv4()}>\r\n                                        <td>\r\n                                            <span>{el.content}</span>\r\n                                        </td>\r\n                                        <td></td>\r\n                                        <td>\r\n                                            {el.synonyms && el.synonyms.map(Element => <span key={uuidv4()} className=\"entitys\">{Element}</span>)}\r\n                                            <form className=\"addSynForm\" onSubmit={(e) => {\r\n                                                e.preventDefault()\r\n                                                const modifArr = [...values]\r\n                                                modifArr.forEach(Element => {\r\n                                                    if (Element.id == el.id) {\r\n                                                        Element.synonyms.push(e.target.addSyn.value)\r\n                                                    }\r\n                                                })\r\n\r\n                                                setValues(modifArr)\r\n                                            }} className=\"addSynForm\" style={{ display: \"inline-block\" }}>\r\n                                                <svg\r\n                                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                    width=\"19.176\"\r\n                                                    height=\"19.176\"\r\n                                                    viewBox=\"0 0 19.176 19.176\"\r\n                                                >\r\n                                                    <g\r\n                                                        fill=\"none\"\r\n                                                        stroke=\"#818e94\"\r\n                                                        strokeLinecap=\"round\"\r\n                                                        strokeLinejoin=\"round\"\r\n                                                        strokeWidth=\"1.5\"\r\n                                                        data-name=\"Icon feather-plus-circle\"\r\n                                                        transform=\"translate(-2.25 -2.25)\"\r\n                                                    >\r\n                                                        <path\r\n                                                            d=\"M20.676 11.838A8.838 8.838 0 1111.838 3a8.838 8.838 0 018.838 8.838z\"\r\n                                                            data-name=\"Tracé 210\"\r\n                                                        ></path>\r\n                                                        <path d=\"M11.838 8.303v7.07\" data-name=\"Tracé 211\"></path>\r\n                                                        <path d=\"M8.303 11.838h7.07\" data-name=\"Tracé 212\"></path>\r\n                                                    </g>\r\n                                                </svg>\r\n                                                <input className=\"addSyn\" name=\"addSyn\" type=\"text\" placeholder=\"Add Synonym\" required />\r\n                                            </form>\r\n                                        </td>\r\n                                        <td>\r\n                                            <svg onClick={() => {\r\n                                                setValues([...values].filter(Element => Element.id !== el.id))\r\n                                                // setSynonyms('');\r\n                                                // setContent('')\r\n                                            }} style={{ cursor: 'pointer' }}\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                width=\"27\"\r\n                                                height=\"28.786\"\r\n                                                viewBox=\"0 0 27 28.786\"\r\n                                            >\r\n                                                <g\r\n                                                    fill=\"none\"\r\n                                                    stroke=\"#e5137d\"\r\n                                                    strokeLinecap=\"square\"\r\n                                                    strokeMiterlimit=\"10\"\r\n                                                    strokeWidth=\"2\"\r\n                                                    transform=\"translate(-3 -1)\"\r\n                                                >\r\n                                                    <path\r\n                                                        d=\"M26.322 9.143V27a1.786 1.786 0 01-1.786 1.786H8.465A1.786 1.786 0 016.679 27V9.143\"\r\n                                                        data-name=\"Tracé 429\"\r\n                                                    ></path>\r\n                                                    <path\r\n                                                        d=\"M0 0L0 10\"\r\n                                                        data-name=\"Ligne 25\"\r\n                                                        transform=\"translate(17 13.786)\"\r\n                                                    ></path>\r\n                                                    <path\r\n                                                        d=\"M0 0L0 10\"\r\n                                                        data-name=\"Ligne 26\"\r\n                                                        transform=\"translate(12 13.786)\"\r\n                                                    ></path>\r\n                                                    <path\r\n                                                        d=\"M0 0L0 10\"\r\n                                                        data-name=\"Ligne 27\"\r\n                                                        transform=\"translate(21 13.786)\"\r\n                                                    ></path>\r\n                                                    <path d=\"M12.036 6.464V2h8.929v4.464\" data-name=\"Tracé 430\"></path>\r\n                                                    <path\r\n                                                        d=\"M25 0L0 0\"\r\n                                                        data-name=\"Ligne 28\"\r\n                                                        transform=\"translate(4 6.786)\"\r\n                                                    ></path>\r\n                                                </g>\r\n                                            </svg>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div style={{ textAlign: 'right', marginTop: 20 }} >\r\n                    <svg onClick={() => {\r\n                        if (!entity || !values) {\r\n                            alert('you have fill all the value')\r\n                            return;\r\n                        }\r\n                        // console.log('data ', { entity, values })\r\n                        handelSubmit(entity, values)\r\n                            .then(() => {\r\n                                props.history.push('/dachboard/entities')\r\n                            })\r\n                    }}\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"142\"\r\n                        height=\"40\"\r\n                        viewBox=\"0 0 142 40\"\r\n                    >\r\n                        <g data-name=\"Groupe 1136\" transform=\"translate(-661 -274)\">\r\n                            <g transform=\"translate(633 274)\">\r\n                                <rect\r\n                                    width=\"80\"\r\n                                    height=\"40\"\r\n                                    fill=\"#e5007d\"\r\n                                    rx=\"4\"\r\n                                    transform=\"translate(28)\"\r\n                                ></rect>\r\n                            </g>\r\n                            <text\r\n                                fill=\"#fff\"\r\n                                data-name=\"Add Value\"\r\n                                fontFamily=\"Poppins-SemiBold, Poppins\"\r\n                                fontSize=\"16\"\r\n                                fontWeight=\"600\"\r\n                                transform=\"translate(680 300)\"\r\n                            >\r\n                                <tspan x=\"0\" y=\"0\">\r\n                                    Save\r\n          </tspan>\r\n                            </text>\r\n                        </g>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addEntity: (data) => dispatch(addentity(data)),\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        fb: state.fbdata.tokenDetail.userID,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCategory)\r\n"]},"metadata":{},"sourceType":"module"}